{"kind":"article","hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio\/midimanager-removing-ports-and-connections"]}],"topicSections":[{"title":"MIDIManager Methods","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/remove(_:_:)","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/removeAll()"],"anchor":"MIDIManager-Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"roleHeading":"API Collection","title":"Removing Ports and Connections","modules":[{"name":"MIDIKitIO"}],"role":"collectionGroup"},"seeAlsoSections":[{"generated":true,"anchor":"Manager","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features"],"title":"Manager"}],"primaryContentSections":[{"content":[{"text":"Remove Individual Virtual Port or Connection","type":"heading","level":2,"anchor":"Remove-Individual-Virtual-Port-or-Connection"},{"inlineContent":[{"text":"To remove an individual virtual port or connection owned by the ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" and dispose of it in the system, call the relevant remove method:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/remove(_:_:)"}]},{"syntax":"swift","type":"codeListing","code":["midiManager.remove(.input, .withTag(\"VirtualInputTagHere\"))","midiManager.remove(.output, .withTag(\"VirtualOutputTagHere\"))","midiManager.remove(.inputConnection, .withTag(\"InConnTagHere\"))","midiManager.remove(.outputConnection, .withTag(\"OutConnTagHere\"))","midiManager.remove(.nonPersistentThruConnection, .withTag(\"ThruConnTagHere\"))"]},{"type":"heading","text":"Remove All of a Type","anchor":"Remove-All-of-a-Type","level":2},{"inlineContent":[{"type":"text","text":"Additionally, you can remove all of a certain type:"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/remove(_:_:)"}],"type":"paragraph"},{"type":"codeListing","code":["midiManager.remove(.input, .all)","midiManager.remove(.output, .all)","midiManager.remove(.inputConnection, .all)","midiManager.remove(.outputConnection, .all)","midiManager.remove(.nonPersistentThruConnection, .all)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"To remove all persistent thru connections belonging to a specific owner ID, see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)"}]},{"text":"Remove All","level":2,"type":"heading","anchor":"Remove-All"},{"inlineContent":[{"type":"text","text":"Or remove all ports and connections that are owned by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"text":" at once:","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/removeAll()","isActive":true}]},{"syntax":"swift","type":"codeListing","code":["midiManager.removeAll()"]}],"kind":"content"}],"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-SwiftUI-and-Combine-Features":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Certain "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" properties are made observable by using subclasses."}],"title":"SwiftUI and Combine Features","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features","kind":"article","url":"\/documentation\/midikitio\/midikitio-swiftui-and-combine-features"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager":{"title":"ObservableMIDIManager","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"text":" ","type":"text"},{"text":"This makes the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"url":"\/documentation\/midikitio\/observablemidimanager","kind":"symbol","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/removeAllUnmanagedPersistentThruConnections(ownerID:)":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/removeAllUnmanagedPersistentThruConnections(ownerID:)","abstract":[{"text":"Removes all unmanaged persistent MIDI thru connections stored in the system matching the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given owner ID."}],"title":"removeAllUnmanagedPersistentThruConnections(ownerID:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllUnmanagedPersistentThruConnections"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ownerID"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","kind":"symbol","url":"\/documentation\/midikitio\/midimanager\/removeallunmanagedpersistentthruconnections(ownerid:)"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Connections":{"abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","url":"\/documentation\/midikitio\/midimanager-creating-connections","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observablemidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Ports":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","title":"Creating Ports","url":"\/documentation\/midikitio\/midimanager-creating-ports","role":"collectionGroup"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/remove(_:_:)":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/remove(_:_:)","url":"\/documentation\/midikitio\/midimanager\/remove(_:_:)","title":"remove(_:_:)","kind":"symbol","abstract":[{"text":"Remove a managed MIDI endpoint or connection.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"text":"(","kind":"text"},{"text":"MIDIManager","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC11ManagedTypeO","text":"ManagedType","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"MIDIManager","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"TagSelection","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC12TagSelectionO"},{"text":")","kind":"text"}],"type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager":{"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" subclass that is an ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This makes the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","isActive":true,"type":"reference"},{"text":" properties observable.","type":"text"}],"title":"ObservableObjectMIDIManager","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectMIDIManager"}],"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableObjectMIDIManager","kind":"identifier"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/devices":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices","kind":"typeIdentifier"}],"title":"devices","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices","abstract":[],"url":"\/documentation\/midikitio\/observableobjectmidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/devices":{"role":"symbol","type":"topic","abstract":[],"title":"devices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","kind":"symbol","url":"\/documentation\/midikitio\/observablemidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/removeAll()":{"type":"topic","role":"symbol","kind":"symbol","title":"removeAll()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"removeAll","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Remove all managed MIDI endpoints and connections.","type":"text"}],"url":"\/documentation\/midikitio\/midimanager\/removeall()","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/removeAll()"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Receiving-Notifications":{"type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"kind":"article","url":"\/documentation\/midikitio\/midimanager-receiving-notifications","title":"Receiving Notifications","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications"}}}