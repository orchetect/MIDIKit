{"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"Manager","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features"],"anchor":"Manager","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For general usage information, see the base "},{"isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","type":"reference"},{"type":"text","text":" class documentation."}]}],"style":"tip","name":"Tip"},{"anchor":"Observation-Features","type":"heading","text":"Observation Features","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally it is recommended to install the manager instance in the "},{"code":"App","type":"codeVoice"},{"text":" struct.","type":"text"}]},{"type":"codeListing","code":["@main","struct MyApp: App {","    @State var midiManager = ObservableMIDIManager(","        clientName: \"MyApp\",","        model: \"MyApp\",","        manufacturer: \"MyCompany\"","    )","","    WindowGroup {","        ContentView()","            .environment(midiManager)","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The observable properties can then be used to update view state as a result of changes in the","type":"text"},{"text":" ","type":"text"},{"text":"systemâ€™s MIDI devices and endpoints.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct ContentView: View {","    @Environment(ObservableMIDIManager.self) private var midiManager","","    var body: some View {","        List(midiManager.devices.devices) { device in","            Text(device.name)","        }","        List(midiManager.endpoints.inputs) { input in","            Text(input.name)","        }","        List(midiManager.endpoints.outputs) { output in","            Text(output.name)","        }","    }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio\/observablemidimanager"]}],"abstract":[{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"type":"text","text":" "},{"type":"text","text":"This makes the "},{"isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints"],"anchor":"Instance-Properties","generated":true}],"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager"]},{"type":"conformsTo","identifiers":["doc:\/\/MIDIKitIO\/11Observation10ObservableP","doc:\/\/MIDIKitIO\/s8CopyableP","doc:\/\/MIDIKitIO\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"identifier":{"url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","interfaceLanguage":"swift"},"metadata":{"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableMIDIManager","kind":"identifier"}],"platforms":[{"deprecated":false,"beta":false,"name":"iOS","introducedAt":"17.0","unavailable":false},{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"14.0","deprecated":false},{"beta":false,"introducedAt":"17.0","name":"tvOS","deprecated":false,"unavailable":false},{"unavailable":false,"introducedAt":"10.0","beta":false,"deprecated":false,"name":"watchOS"}],"modules":[{"name":"MIDIKitIO"}],"title":"ObservableMIDIManager","externalID":"s:9MIDIKitIO21ObservableMIDIManagerC","role":"symbol"},"kind":"symbol","references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-SwiftUI-and-Combine-Features":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Certain "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" properties are made observable by using subclasses."}],"title":"SwiftUI and Combine Features","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features","kind":"article","url":"\/documentation\/midikitio\/midikitio-swiftui-and-combine-features"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Ports":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","title":"Creating Ports","url":"\/documentation\/midikitio\/midimanager-creating-ports","role":"collectionGroup"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Receiving-Notifications":{"type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"kind":"article","url":"\/documentation\/midikitio\/midimanager-receiving-notifications","title":"Receiving Notifications","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/devices":{"role":"symbol","type":"topic","abstract":[],"title":"devices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","kind":"symbol","url":"\/documentation\/midikitio\/observablemidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager":{"title":"ObservableMIDIManager","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"text":" ","type":"text"},{"text":"This makes the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"url":"\/documentation\/midikitio\/observablemidimanager","kind":"symbol","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager":{"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" subclass that is an ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This makes the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","isActive":true,"type":"reference"},{"text":" properties observable.","type":"text"}],"title":"ObservableObjectMIDIManager","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectMIDIManager"}],"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableObjectMIDIManager","kind":"identifier"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/devices":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices","kind":"typeIdentifier"}],"title":"devices","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices","abstract":[],"url":"\/documentation\/midikitio\/observableobjectmidimanager\/devices"},"doc://MIDIKitIO/s8SendableP":{"identifier":"doc:\/\/MIDIKitIO\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observablemidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Connections":{"abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","url":"\/documentation\/midikitio\/midimanager-creating-connections","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Removing-Ports-and-Connections":{"role":"collectionGroup","type":"topic","abstract":[],"title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikitio\/midimanager-removing-ports-and-connections"},"doc://MIDIKitIO/s8CopyableP":{"identifier":"doc:\/\/MIDIKitIO\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://MIDIKitIO/11Observation10ObservableP":{"identifier":"doc:\/\/MIDIKitIO\/11Observation10ObservableP","type":"unresolvable","title":"Observation.Observable"}}}