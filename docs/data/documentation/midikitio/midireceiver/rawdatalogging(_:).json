{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver\/rawDataLogging(_:)"},"metadata":{"roleHeading":"Case","symbolKind":"case","title":"MIDIReceiver.rawDataLogging(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"rawDataLogging","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO","text":"MIDIReceiver","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"RawDataLoggingHandler","preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO21RawDataLoggingHandlera"},{"text":"?)","kind":"text"}],"role":"symbol","externalID":"s:9MIDIKitIO12MIDIReceiverO14rawDataLoggingyACySSYbcSgcACmF","modules":[{"name":"MIDIKitIO"}]},"abstract":[{"type":"text","text":"Raw data logging handler (hex byte strings)."},{"type":"text","text":" "},{"type":"text","text":"On systems that use legacy MIDI 1.0 packets, their raw bytes will be logged."},{"type":"text","text":" "},{"type":"text","text":"On systems that support UMP and MIDI 2.0, the raw UMP packet data is logged."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawDataLogging"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO","kind":"typeIdentifier","text":"MIDIReceiver","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO21RawDataLoggingHandlera","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver\/RawDataLoggingHandler","text":"RawDataLoggingHandler"},{"text":"? = nil)","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"If "},{"code":"handler","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", all raw packet data is logged to the console (but only in "},{"type":"codeVoice","code":"DEBUG"},{"text":" ","type":"text"},{"type":"text","text":"preprocessor flag builds)."},{"type":"text","text":" "},{"type":"text","text":"If "},{"code":"handler","type":"codeVoice"},{"type":"text","text":" is provided, the hex byte string is supplied as a parameter and not"},{"type":"text","text":" "},{"type":"text","text":"automatically logged."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/midikitio\/midireceiver\/rawdatalogging(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIReceiver":{"navigatorTitle":[{"text":"MIDIReceiver","kind":"identifier"}],"title":"MIDIReceiver","kind":"symbol","role":"symbol","url":"\/documentation\/midikitio\/midireceiver","type":"topic","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIReceiver"}],"abstract":[{"type":"text","text":"Defines the parameters for a MIDI receiver."}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIReceiver/RawDataLoggingHandler":{"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"RawDataLoggingHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Handler for the "},{"isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver\/rawDataLogging(_:)","type":"reference"},{"type":"text","text":" MIDI receiver."}],"url":"\/documentation\/midikitio\/midireceiver\/rawdatalogginghandler","title":"MIDIReceiver.RawDataLoggingHandler","role":"symbol","navigatorTitle":[{"text":"RawDataLoggingHandler","kind":"identifier"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver\/RawDataLoggingHandler","kind":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIReceiver/rawDataLogging(_:)":{"kind":"symbol","url":"\/documentation\/midikitio\/midireceiver\/rawdatalogging(_:)","role":"symbol","title":"MIDIReceiver.rawDataLogging(_:)","type":"topic","abstract":[{"type":"text","text":"Raw data logging handler (hex byte strings)."},{"type":"text","text":" "},{"type":"text","text":"On systems that use legacy MIDI 1.0 packets, their raw bytes will be logged."},{"type":"text","text":" "},{"text":"On systems that support UMP and MIDI 2.0, the raw UMP packet data is logged.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"rawDataLogging","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO","text":"MIDIReceiver","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"RawDataLoggingHandler","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO12MIDIReceiverO21RawDataLoggingHandlera"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIReceiver\/rawDataLogging(_:)"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"}}}