{"variants":[{"paths":["\/documentation\/midikitio\/midi-show-control"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Construct MIDI Show Control messages.","type":"text"}],"metadata":{"title":"MIDI Show Control","roleHeading":"Article","modules":[{"name":"MIDIKitIO"}],"role":"article"},"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2"],"anchor":"Related-Documentation"},{"generated":true,"identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Send-and-Receive-on-iOS-in-Background","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Simple-MIDI-Listener-Class-Example"],"anchor":"Additional-Topics","title":"Additional Topics"}],"kind":"article","identifier":{"url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDI-Show-Control","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Background","level":2,"anchor":"Background"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MIDIKit does not currently provide any special abstractions for MIDI Show Control."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The MIDI Show Control spec says:"}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"MIDI Show Control uses a single Universal Real Time System Exclusive ID number (sub-ID #1 = 0x02) for all Show commands (transmissions from Controller to Controlled Device).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The format of a Show Control message is as follows:"}]},{"inlineContent":[{"type":"codeVoice","code":"F0 7F <device_ID> <msc> <command_format> <command> <data> F7"}],"type":"paragraph"}],"name":"Note"},{"anchor":"Constructing-Events","text":"Constructing Events","type":"heading","level":2},{"inlineContent":[{"text":"For details on how to construct System Exclusive messages, see ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKitCore\/documentation\/MIDIKitCore\/MIDIEvent-System-Exclusive","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"title":"MIDIKitIO","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/midikitio","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/Send-and-Receive-on-iOS-in-Background":{"abstract":[{"text":"Keeping your iOS app alive while it is in the background to allow MIDI messages to be sent and received.","type":"text"}],"url":"\/documentation\/midikitio\/send-and-receive-on-ios-in-background","title":"Send and Receive on iOS While Your App is Backgrounded","role":"article","kind":"article","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Send-and-Receive-on-iOS-in-Background","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/Simple-MIDI-Listener-Class-Example":{"kind":"article","abstract":[{"text":"A barebones example of how to set up MIDIKit to receive MIDI events on a created virtual input.","type":"text"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Simple-MIDI-Listener-Class-Example","type":"topic","title":"Simple MIDI Listener Class Example","url":"\/documentation\/midikitio\/simple-midi-listener-class-example","role":"article"},"doc://MIDIKitCore/documentation/MIDIKitCore/MIDIEvent-System-Exclusive":{"abstract":[{"text":"System Exclusive messages carry a header and an arbitrary number of data bytes. These messages are typically used to communicate patch and preset data or binary data payloads such as raw audio samples or device firmware updates. It is up to each software or hardware manufacturer to determine how the data is formatted.","type":"text"}],"identifier":"doc:\/\/MIDIKitCore\/documentation\/MIDIKitCore\/MIDIEvent-System-Exclusive","type":"topic","role":"article","kind":"article","url":"\/documentation\/midikitcore\/midievent-system-exclusive","title":"System Exclusive"},"https://www.midi.org/specifications/midi1-specifications/midi-show-control-2":{"title":"MIDI Show Control Specification","identifier":"https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2","titleInlineContent":[{"type":"text","text":"MIDI Show Control Specification"}],"type":"link","url":"https:\/\/www.midi.org\/specifications\/midi1-specifications\/midi-show-control-2"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","role":"symbol","url":"\/documentation\/midikitio\/midimanager"}}}