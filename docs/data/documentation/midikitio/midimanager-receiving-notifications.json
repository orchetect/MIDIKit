{"sections":[],"identifier":{"url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"topicSections":[{"anchor":"MIDIManager-Properties","title":"MIDIManager Properties","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/notificationHandler-swift.property"]},{"title":"Types","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIONotification"],"anchor":"Types"}],"seeAlsoSections":[{"anchor":"Manager","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features"],"title":"Manager","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"Receiving Notifications","modules":[{"name":"MIDIKitIO"}]},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Core MIDI generates notifications when the system MIDI configuration changes. These notifications can be safely ignored.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"However, a handler closure is provided on the "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" instance in order to receive the notifications."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio\/midimanager-receiving-notifications"]}],"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/notificationHandler-swift.property":{"abstract":[{"type":"text","text":"Handler that is called when state has changed in the manager."}],"role":"symbol","title":"notificationHandler","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/notificationHandler-swift.property","url":"\/documentation\/midikitio\/midimanager\/notificationhandler-swift.property","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationHandler"},{"text":": ","kind":"text"},{"text":"MIDIManager","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC19NotificationHandlera","text":"NotificationHandler"},{"kind":"text","text":"?"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIONotification":{"type":"topic","title":"MIDIIONotification","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIIONotification","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIONotification","navigatorTitle":[{"kind":"identifier","text":"MIDIIONotification"}],"abstract":[{"text":"Core MIDI subsystem notification.","type":"text"}],"url":"\/documentation\/midikitio\/midiionotification","kind":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Removing-Ports-and-Connections":{"role":"collectionGroup","type":"topic","abstract":[],"title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikitio\/midimanager-removing-ports-and-connections"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager":{"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" subclass that is an ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This makes the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","isActive":true,"type":"reference"},{"text":" properties observable.","type":"text"}],"title":"ObservableObjectMIDIManager","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectMIDIManager"}],"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableObjectMIDIManager","kind":"identifier"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/devices":{"role":"symbol","type":"topic","abstract":[],"title":"devices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","kind":"symbol","url":"\/documentation\/midikitio\/observablemidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-SwiftUI-and-Combine-Features":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Certain "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" properties are made observable by using subclasses."}],"title":"SwiftUI and Combine Features","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features","kind":"article","url":"\/documentation\/midikitio\/midikitio-swiftui-and-combine-features"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/devices":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices","kind":"typeIdentifier"}],"title":"devices","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices","abstract":[],"url":"\/documentation\/midikitio\/observableobjectmidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager":{"title":"ObservableMIDIManager","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"text":" ","type":"text"},{"text":"This makes the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"url":"\/documentation\/midikitio\/observablemidimanager","kind":"symbol","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Connections":{"abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","url":"\/documentation\/midikitio\/midimanager-creating-connections","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Ports":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","title":"Creating Ports","url":"\/documentation\/midikitio\/midimanager-creating-ports","role":"collectionGroup"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observablemidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","kind":"symbol","role":"symbol"}}}