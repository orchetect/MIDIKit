{"identifier":{"url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/adHoc","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/midikitio\/midiidentifierpersistence\/adhoc"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence"]]},"abstract":[{"type":"text","text":"Ad-Hoc identifier generation."},{"type":"text","text":" "},{"type":"text","text":"The unique ID will be randomly generated every time the endpoint is created in the system –"},{"text":" ","type":"text"},{"text":"with no persistent storage provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is default Core MIDI behavior when no identifier is provided."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"adHoc","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"⚠️ This is generally not recommended and is provided mainly for testing purposes.","type":"text"}]},{"inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","isActive":true,"type":"reference"},{"text":" where possible, or provide your own storage with","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Case","title":"MIDIIdentifierPersistence.adHoc","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"adHoc","kind":"identifier"}],"symbolKind":"case","externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO5adHocyA2CmF","modules":[{"name":"MIDIKitIO"}]},"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence","role":"symbol","navigatorTitle":[{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/midikitio\/midiidentifierpersistence","abstract":[{"text":"Defines persistence behavior of a MIDI unique ID in the system.","type":"text"}],"title":"MIDIIdentifierPersistence","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"userDefaultsManaged","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"suite","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","url":"\/documentation\/midikitio\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","role":"symbol","abstract":[{"type":"text","text":"Managed with UserDefaults backing (recommended)."},{"type":"text","text":" "},{"type":"text","text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in"},{"type":"text","text":" "},{"type":"codeVoice","code":"UserDefaults"},{"text":". The ","type":"text"},{"code":"standard","type":"codeVoice"},{"text":" suite is used by default unless specified.","type":"text"}],"title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","role":"symbol","url":"\/documentation\/midikitio\/midimanager"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"title":"MIDIKitIO","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/midikitio","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"kind":"text","text":": () -> "},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","url":"\/documentation\/midikitio\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","role":"symbol","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)"},{"type":"text","text":" "},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"type":"text","text":" "},{"text":"endpoint’s unique ID.","type":"text"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence/adHoc":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/adHoc","kind":"symbol","url":"\/documentation\/midikitio\/midiidentifierpersistence\/adhoc","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"adHoc"}],"title":"MIDIIdentifierPersistence.adHoc","abstract":[{"text":"Ad-Hoc identifier generation.","type":"text"},{"text":" ","type":"text"},{"text":"The unique ID will be randomly generated every time the endpoint is created in the system –","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with no persistent storage provided."},{"type":"text","text":" "},{"type":"text","text":"This is default Core MIDI behavior when no identifier is provided."}],"role":"symbol","type":"topic"}}}