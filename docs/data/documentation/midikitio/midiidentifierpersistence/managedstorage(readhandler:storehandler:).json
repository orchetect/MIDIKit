{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)"]}],"abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)"},{"text":" ","type":"text"},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"text":" ","type":"text"},{"text":"endpoint’s unique ID.","type":"text"}],"metadata":{"roleHeading":"Case","modules":[{"name":"MIDIKitIO"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"managedStorage","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","kind":"typeIdentifier","text":"MIDIIdentifier"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","externalID":"s:9MIDIKitIO25MIDIIdentifierPersistenceO14managedStorageyACs5Int32VSgyYbc_yAGYbctcACmF"},"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"text":": () -> ","kind":"text"},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","text":"MIDIIdentifier","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This is useful if you need more control over where you want to persist this information in"},{"text":" ","type":"text"},{"text":"the system.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"In the event a collision with an existing MIDI endpoint unique ID in the system, a new","type":"text"},{"type":"text","text":" "},{"text":"random ID will be generated until there are no collisions.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The ID will then be passed into the "},{"type":"codeVoice","code":"storeHandler"},{"type":"text","text":" closure in order to store the updated ID."}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence/userDefaultsManaged(key:suite:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"userDefaultsManaged","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"suite","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSUserDefaults","text":"UserDefaults"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)","url":"\/documentation\/midikitio\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","role":"symbol","abstract":[{"type":"text","text":"Managed with UserDefaults backing (recommended)."},{"type":"text","text":" "},{"type":"text","text":"The MIDI endpoint’s unique ID is managed automatically and persistently stored in"},{"type":"text","text":" "},{"type":"codeVoice","code":"UserDefaults"},{"text":". The ","type":"text"},{"code":"standard","type":"codeVoice"},{"text":" suite is used by default unless specified.","type":"text"}],"title":"MIDIIdentifierPersistence.userDefaultsManaged(key:suite:)","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence","role":"symbol","navigatorTitle":[{"text":"MIDIIdentifierPersistence","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/midikitio\/midiidentifierpersistence","abstract":[{"text":"Defines persistence behavior of a MIDI unique ID in the system.","type":"text"}],"title":"MIDIIdentifierPersistence","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifierPersistence/managedStorage(readHandler:storeHandler:)":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"managedStorage"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"readHandler"},{"kind":"text","text":": () -> "},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"text":"?, ","kind":"text"},{"text":"storeHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"MIDIIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO14MIDIIdentifiera"},{"kind":"text","text":"?) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/managedStorage(readHandler:storeHandler:)","url":"\/documentation\/midikitio\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","role":"symbol","abstract":[{"type":"text","text":"Managed with custom storage backing (recommended only if "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifierPersistence\/userDefaultsManaged(key:suite:)"},{"type":"text","text":" "},{"type":"text","text":"is not suitable). Supply handlers to facilitate persistently reading and storing the MIDI"},{"type":"text","text":" "},{"text":"endpoint’s unique ID.","type":"text"}],"title":"MIDIIdentifierPersistence.managedStorage(readHandler:storeHandler:)","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","role":"symbol","url":"\/documentation\/midikitio\/midimanager"},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"title":"MIDIKitIO","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/midikitio","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIIdentifier":{"url":"\/documentation\/midikitio\/midiidentifier","role":"symbol","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIIdentifier","abstract":[{"text":"MIDIKit analogue for Core MIDI’s ","type":"text"},{"type":"codeVoice","code":"MIDIUniqueID"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Most commonly used to uniquely identify MIDI endpoints in the system.","type":"text"}],"title":"MIDIIdentifier","type":"topic","navigatorTitle":[{"text":"MIDIIdentifier","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"MIDIIdentifier","kind":"identifier"}]}}}