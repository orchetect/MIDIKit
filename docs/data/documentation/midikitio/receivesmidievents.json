{"sections":[],"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents\/midiIn(event:)","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents\/midiIn(events:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents"},"kind":"symbol","abstract":[{"type":"text","text":"Protocol that objects can adopt so MIDIKit knows they are capable of receiving MIDI events."}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/MIDIKitIO\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReceivesMIDIEvents"},{"kind":"text","text":" : AnyObject, "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Conforming a custom class that receives MIDI events to this protocol allows an instance of the","type":"text"},{"type":"text","text":" "},{"text":"class to be passed into ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" event receive handlers.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["class MyReceiver: ReceivesMIDIEvents {","    func midiIn(event: MIDIEvent) {","        print(event)","    }","}","","let receiver = MyReceiver()","","try midiManager.addInput(","    name: \"My Input\",","    tag: \"My Input\",","    uniqueID: .userDefaultsManaged(key: \"MyInputID\"),","    receiver: .weak(receiver) \/\/ weakly held reference",")"]},{"inlineContent":[{"text":"Adoption of this protocol is a convenience and not required.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/midikitio\/receivesmidievents"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"protocol","externalID":"s:9MIDIKitIO18ReceivesMIDIEventsP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReceivesMIDIEvents","kind":"identifier"}],"navigatorTitle":[{"text":"ReceivesMIDIEvents","kind":"identifier"}],"title":"ReceivesMIDIEvents","modules":[{"name":"MIDIKitIO"}],"role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/ReceivesMIDIEvents":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents","kind":"symbol","abstract":[{"type":"text","text":"Protocol that objects can adopt so MIDIKit knows they are capable of receiving MIDI events."}],"navigatorTitle":[{"text":"ReceivesMIDIEvents","kind":"identifier"}],"role":"symbol","url":"\/documentation\/midikitio\/receivesmidievents","title":"ReceivesMIDIEvents","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReceivesMIDIEvents"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/ReceivesMIDIEvents/midiIn(events:)":{"kind":"symbol","url":"\/documentation\/midikitio\/receivesmidievents\/midiin(events:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"midiIn","kind":"identifier"},{"kind":"text","text":"("},{"text":"events","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"title":"midiIn(events:)","type":"topic","abstract":[{"type":"text","text":"Process MIDI events."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents\/midiIn(events:)","role":"symbol","defaultImplementations":1},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"title":"MIDIKitIO","kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/midikitio","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"},"doc://MIDIKitIO/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MIDIKitIO\/s8SendableP","title":"Swift.Sendable"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","role":"symbol","url":"\/documentation\/midikitio\/midimanager"},"doc://MIDIKitIO/documentation/MIDIKitIO/ReceivesMIDIEvents/midiIn(event:)":{"kind":"symbol","url":"\/documentation\/midikitio\/receivesmidievents\/midiin(event:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"midiIn","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"event"},{"text":": ","kind":"text"},{"text":"MIDIEvent","preciseIdentifier":"s:11MIDIKitCore9MIDIEventO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"midiIn(event:)","type":"topic","abstract":[{"type":"text","text":"Process MIDI events."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ReceivesMIDIEvents\/midiIn(event:)","role":"symbol"}}}