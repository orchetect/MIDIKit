{"hierarchy":{"paths":[["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO"]]},"sections":[],"abstract":[{"type":"text","text":"Certain "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" properties are made observable by using subclasses.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio\/midikitio-swiftui-and-combine-features"]}],"metadata":{"modules":[{"name":"MIDIKitIO"}],"title":"SwiftUI and Combine Features","roleHeading":"Article","role":"article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features"},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications"],"anchor":"Manager","generated":true,"title":"Manager"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Observable","level":2,"text":"@Observable","type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager"},{"text":" is a ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that makes several instance properties observable in a SwiftUI context."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful in updating user interface displaying a list of MIDI endpoints updated in real-time as they are added or removed from the system."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","type":"reference"}]}]}],"type":"unorderedList"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager"},{"text":" requires macOS 14 or iOS 17.","type":"text"}]}]},{"anchor":"ObservableObject","text":"ObservableObject","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","type":"reference","isActive":true},{"text":" is a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager"},{"text":" subclass that makes several instance properties observable in a SwiftUI or Combine context.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be useful in updating user interface displaying a list of MIDI endpoints updated in real-time as they are added or removed from the system."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","type":"reference","isActive":true}]}]}]},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" requires macOS 10.15 or iOS 13."}],"type":"paragraph"}],"name":"Note","type":"aside"},{"text":"Manual Observation","anchor":"Manual-Observation","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Manual observation can be implemented by use of a notification handler closure."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" offers a "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/notificationHandler-swift.property","isActive":true},{"type":"text","text":" closure that may be assigned either during initialization or by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/init(clientName:model:manufacturer:notificationHandler:)-20rxd"},{"type":"text","text":"."}]},{"text":"Key-Value Observation","level":2,"anchor":"Key-Value-Observation","type":"heading"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager"},{"text":" and any of its subclasses do not implement KVO (Key-Value Observation).","type":"text"}]}]}],"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Removing-Ports-and-Connections":{"role":"collectionGroup","type":"topic","abstract":[],"title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikitio\/midimanager-removing-ports-and-connections"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observablemidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager":{"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" subclass that is an ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This makes the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","isActive":true,"type":"reference"},{"text":" properties observable.","type":"text"}],"title":"ObservableObjectMIDIManager","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectMIDIManager"}],"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableObjectMIDIManager","kind":"identifier"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Connections":{"abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","url":"\/documentation\/midikitio\/midimanager-creating-connections","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager":{"title":"ObservableMIDIManager","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"text":" ","type":"text"},{"text":"This makes the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"url":"\/documentation\/midikitio\/observablemidimanager","kind":"symbol","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/init(clientName:model:manufacturer:notificationHandler:)-20rxd":{"type":"topic","abstract":[{"type":"text","text":"Initialize the MIDI manager (and Core MIDI client)."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"clientName","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"model","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"manufacturer","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"notificationHandler"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC","text":"MIDIManager"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"NotificationHandler","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC19NotificationHandlera"},{"text":"?)","kind":"text"}],"url":"\/documentation\/midikitio\/midimanager\/init(clientname:model:manufacturer:notificationhandler:)-20rxd","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/init(clientName:model:manufacturer:notificationHandler:)-20rxd","role":"symbol","kind":"symbol","title":"init(clientName:model:manufacturer:notificationHandler:)"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/devices":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices","kind":"typeIdentifier"}],"title":"devices","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices","abstract":[],"url":"\/documentation\/midikitio\/observableobjectmidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/devices":{"role":"symbol","type":"topic","abstract":[],"title":"devices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","kind":"symbol","url":"\/documentation\/midikitio\/observablemidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Ports":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","title":"Creating Ports","url":"\/documentation\/midikitio\/midimanager-creating-ports","role":"collectionGroup"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager/notificationHandler-swift.property":{"abstract":[{"type":"text","text":"Handler that is called when state has changed in the manager."}],"role":"symbol","title":"notificationHandler","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager\/notificationHandler-swift.property","url":"\/documentation\/midikitio\/midimanager\/notificationhandler-swift.property","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"notificationHandler"},{"text":": ","kind":"text"},{"text":"MIDIManager","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIManagerC19NotificationHandlera","text":"NotificationHandler"},{"kind":"text","text":"?"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Receiving-Notifications":{"type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"kind":"article","url":"\/documentation\/midikitio\/midimanager-receiving-notifications","title":"Receiving Notifications","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"}}}