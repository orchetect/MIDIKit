{"sections":[],"abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","type":"reference"},{"type":"text","text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events."}],"identifier":{"url":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features"],"title":"Manager","anchor":"Manager"},{"title":"Devices & Entities","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Devices"],"anchor":"Devices--Entities"},{"anchor":"Endpoints","title":"Endpoints","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Endpoints"]},{"anchor":"Events","title":"Events","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Sending-MIDI-Events","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Receiving-MIDI-Events"]},{"anchor":"Extending-Connectivity","title":"Extending Connectivity","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-Bluetooth","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-Network","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-USB"]},{"anchor":"Additional-Topics","title":"Additional Topics","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Send-and-Receive-on-iOS-in-Background","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDI-Show-Control","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Simple-MIDI-Listener-Class-Example"]},{"anchor":"Internals","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Internals"],"title":"Internals"},{"title":"Extended Modules","identifiers":["doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Foundation","doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Swift"],"generated":true,"anchor":"Extended-Modules"}],"metadata":{"symbolKind":"module","role":"collection","roleHeading":"Framework","title":"MIDIKitIO","modules":[{"name":"MIDIKitIO"}],"externalID":"MIDIKitIO"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"image","identifier":"midikit-banner.png"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"identifier":"midikitio-diagram.svg","type":"image"}]},{"inlineContent":[{"type":"text","text":"MIDIKitIO adds an I\/O layer on top of MIDIKitCoreâ€™s MIDI events, providing the essentials to send and receive MIDI events on Apple platforms."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"To add additional functionality, import extension modules or import the MIDIKit umbrella library which imports all of MIDIKit events, I\/O, and extensions.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikitio"]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-SwiftUI-and-Combine-Features":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Certain "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":" properties are made observable by using subclasses."}],"title":"SwiftUI and Combine Features","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-SwiftUI-and-Combine-Features","kind":"article","url":"\/documentation\/midikitio\/midikitio-swiftui-and-combine-features"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Connections":{"abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true,"type":"reference"},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}],"role":"collectionGroup","title":"Creating Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Connections","url":"\/documentation\/midikitio\/midimanager-creating-connections","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/devices":{"role":"symbol","type":"topic","abstract":[],"title":"devices","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices","kind":"symbol","url":"\/documentation\/midikitio\/observablemidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-MIDI-Over-Network":{"abstract":[{"text":"Set up Network MIDI connectivity.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-Network","title":"MIDI Over Network","url":"\/documentation\/midikitio\/midikitio-midi-over-network","kind":"article","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-Endpoints":{"role":"collectionGroup","type":"topic","title":"Working With Endpoints","kind":"article","url":"\/documentation\/midikitio\/midikitio-endpoints","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Endpoints","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Removing-Ports-and-Connections":{"role":"collectionGroup","type":"topic","abstract":[],"title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Removing-Ports-and-Connections","kind":"article","url":"\/documentation\/midikitio\/midimanager-removing-ports-and-connections"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDI-Show-Control":{"abstract":[{"text":"Construct MIDI Show Control messages.","type":"text"}],"role":"article","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDI-Show-Control","title":"MIDI Show Control","url":"\/documentation\/midikitio\/midi-show-control","kind":"article","type":"topic"},"midikitio-diagram.svg":{"identifier":"midikitio-diagram.svg","alt":"Layer Diagram","type":"image","variants":[{"svgID":"u","traits":["1x","light"],"url":"\/images\/MIDIKitIO\/midikitio-diagram.svg"}]},"doc://MIDIKitIO/documentation/MIDIKitIO":{"abstract":[{"type":"text","text":"Core MIDI I\/O wrapper layer offering "},{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}],"type":"topic","url":"\/documentation\/midikitio","role":"collection","kind":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO","title":"MIDIKitIO"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/devices":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","text":"MIDIDevices","kind":"typeIdentifier"}],"title":"devices","kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices","abstract":[],"url":"\/documentation\/midikitio\/observableobjectmidimanager\/devices"},"doc://MIDIKitIO/documentation/MIDIKitIO/Foundation":{"kind":"symbol","url":"\/documentation\/midikitio\/foundation","role":"collection","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Foundation","type":"topic","title":"Foundation","abstract":[]},"doc://MIDIKitIO/documentation/MIDIKitIO/Swift":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Swift","title":"Swift","type":"topic","kind":"symbol","abstract":[],"role":"collection","url":"\/documentation\/midikitio\/swift"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager":{"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"text":" subclass that is an ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This makes the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","isActive":true,"type":"reference"},{"text":" properties observable.","type":"text"}],"title":"ObservableObjectMIDIManager","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectMIDIManager"}],"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableObjectMIDIManager","kind":"identifier"}]},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Receiving-Notifications":{"type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}],"kind":"article","url":"\/documentation\/midikitio\/midimanager-receiving-notifications","title":"Receiving Notifications","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Receiving-Notifications"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-Receiving-MIDI-Events":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Receiving-MIDI-Events","title":"Receiving MIDI Events","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/midikitio\/midikitio-receiving-midi-events"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager-Creating-Ports":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager-Creating-Ports","title":"Creating Ports","url":"\/documentation\/midikitio\/midimanager-creating-ports","role":"collectionGroup"},"midikit-banner.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/MIDIKitIO\/midikit-banner.png"}],"type":"image","alt":"MIDIKit","identifier":"midikit-banner.png"},"doc://MIDIKitIO/documentation/MIDIKitIO/Send-and-Receive-on-iOS-in-Background":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Send-and-Receive-on-iOS-in-Background","title":"Send and Receive on iOS While Your App is Backgrounded","type":"topic","kind":"article","abstract":[{"type":"text","text":"Keeping your iOS app alive while it is in the background to allow MIDI messages to be sent and received."}],"role":"article","url":"\/documentation\/midikitio\/send-and-receive-on-ios-in-background"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-MIDI-Over-USB":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-USB","title":"MIDI Over USB","type":"topic","kind":"article","abstract":[{"type":"text","text":"Information about MIDI over physical USB connections."}],"role":"article","url":"\/documentation\/midikitio\/midikitio-midi-over-usb"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observablemidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-Devices":{"title":"Working with Devices","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"url":"\/documentation\/midikitio\/midikitio-devices","kind":"article","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Devices","type":"topic","role":"collectionGroup"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-Sending-MIDI-Events":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Sending-MIDI-Events","url":"\/documentation\/midikitio\/midikitio-sending-midi-events","type":"topic","role":"collectionGroup","kind":"article","abstract":[],"title":"Sending MIDI Events"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableObjectMIDIManager/endpoints":{"type":"topic","url":"\/documentation\/midikitio\/observableobjectmidimanager\/endpoints","abstract":[],"title":"endpoints","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpoints"},{"text":": ","kind":"text"},{"text":"MIDIEndpoints","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableObjectMIDIManager\/endpoints","kind":"symbol","role":"symbol"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-Internals":{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-Internals","title":"Internals","type":"topic","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/midikitio\/midikitio-internals"},"doc://MIDIKitIO/documentation/MIDIKitIO/Simple-MIDI-Listener-Class-Example":{"kind":"article","role":"article","abstract":[{"type":"text","text":"A barebones example of how to set up MIDIKit to receive MIDI events on a created virtual input."}],"url":"\/documentation\/midikitio\/simple-midi-listener-class-example","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/Simple-MIDI-Listener-Class-Example","type":"topic","title":"Simple MIDI Listener Class Example"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIKitIO-MIDI-Over-Bluetooth":{"abstract":[{"type":"text","text":"Set up Bluetooth MIDI connectivity in an iOS app."}],"url":"\/documentation\/midikitio\/midikitio-midi-over-bluetooth","kind":"article","title":"MIDI Over Bluetooth","type":"topic","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIKitIO-MIDI-Over-Bluetooth","role":"article"},"doc://MIDIKitIO/documentation/MIDIKitIO/ObservableMIDIManager":{"title":"ObservableMIDIManager","abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","isActive":true},{"type":"text","text":" subclass that is "},{"code":"@Observable","type":"codeVoice"},{"type":"text","text":" in a SwiftUI view."},{"text":" ","type":"text"},{"text":"This makes the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/devices"},{"type":"text","text":" and "},{"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager\/endpoints","isActive":true,"type":"reference"},{"type":"text","text":" properties observable."}],"identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"url":"\/documentation\/midikitio\/observablemidimanager","kind":"symbol","type":"topic"},"doc://MIDIKitIO/documentation/MIDIKitIO/MIDIManager":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"role":"symbol","navigatorTitle":[{"text":"MIDIManager","kind":"identifier"}],"type":"topic","title":"MIDIManager","kind":"symbol","url":"\/documentation\/midikitio\/midimanager","identifier":"doc:\/\/MIDIKitIO\/documentation\/MIDIKitIO\/MIDIManager","abstract":[{"type":"text","text":"Central MIDI Port and Connection Manager and MIDI system data provider."}]}}}