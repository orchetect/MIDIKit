{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations"]]},"variants":[{"paths":["\/documentation\/midikit\/midiinputendpoint\/propertystringvalues(relevantonly:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Get all properties as a key\/value pair array, formatted as human-readable strings."},{"type":"text","text":" "},{"text":"Useful for displaying in a user interface or outputting to console for debugging.","type":"text"},{"text":" ","type":"text"},{"text":"The return value is an array of tuples (not a dictionary) to maintain ordering.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"propertyStringValues"},{"kind":"text","text":"("},{"text":"relevantOnly","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> [(key","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")]","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"MIDIKitIO","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO17MIDIInputEndpointV","role":"symbol","title":"propertyStringValues(relevantOnly:)","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertyStringValues(relevantOnly:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"relevantOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":" = true) -> [(key","kind":"text"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", value","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")]"}],"languages":["swift"]}]}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/MIDIIOObject-Implementations":{"title":"MIDIIOObject Implementations","url":"\/documentation\/midikit\/midiinputendpoint\/midiioobject-implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/MIDIIOObject-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","title":"Working With Endpoints","url":"\/documentation\/midikit\/midikitio-endpoints","role":"collectionGroup","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MIDIInputEndpoint"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIInputEndpoint"}],"title":"MIDIInputEndpoint","url":"\/documentation\/midikit\/midiinputendpoint","role":"symbol","abstract":[{"text":"A MIDI input endpoint in the system, wrapping a Core MIDI ","type":"text"},{"code":"MIDIEndpointRef","type":"codeVoice"},{"text":".","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIInputEndpoint/propertyStringValues(relevantOnly:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"propertyStringValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"relevantOnly"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":") -> [(key","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", value","kind":"text"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")]"}],"url":"\/documentation\/midikit\/midiinputendpoint\/propertystringvalues(relevantonly:)","type":"topic","title":"propertyStringValues(relevantOnly:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIInputEndpoint\/propertyStringValues(relevantOnly:)","abstract":[{"type":"text","text":"Get all properties as a key\/value pair array, formatted as human-readable strings."},{"type":"text","text":" "},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"type":"text","text":" "},{"type":"text","text":"The return value is an array of tuples (not a dictionary) to maintain ordering."},{"type":"text","text":" "},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}]}}}