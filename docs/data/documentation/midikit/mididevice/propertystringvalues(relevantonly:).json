{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"role":"symbol","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE20propertyStringValues12relevantOnlySaySS3key_SS5valuetGSb_tF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"MIDIKitIO","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"kind":"text","text":"("},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") -> [(key","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")]"}],"title":"propertyStringValues(relevantOnly:)","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}]},"variants":[{"paths":["\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"type":"text","text":" "},{"type":"text","text":"The return value is an array of tuples (not a dictionary) to maintain ordering."},{"text":" ","type":"text"},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"propertyStringValues","kind":"identifier"},{"text":"(","kind":"text"},{"text":"relevantOnly","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = true) -> [(key","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", value"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")]","kind":"text"}]}]}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","kind":"article","title":"MIDIIOObject Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"title":"MIDIDevice","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIDevice","kind":"identifier"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/propertyStringValues(relevantOnly:)":{"abstract":[{"text":"Get all properties as a key\/value pair array, formatted as human-readable strings.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Useful for displaying in a user interface or outputting to console for debugging."},{"text":" ","type":"text"},{"type":"text","text":"The return value is an array of tuples (not a dictionary) to maintain ordering."},{"text":" ","type":"text"},{"type":"text","text":"Not recommended for production code. Instead, use strongly-typed properties on this object."}],"title":"propertyStringValues(relevantOnly:)","kind":"symbol","role":"symbol","url":"\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/propertyStringValues(relevantOnly:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"propertyStringValues","kind":"identifier"},{"kind":"text","text":"("},{"text":"relevantOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") -> [(key"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")]","kind":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"url":"\/documentation\/midikit\/midikitio-devices","type":"topic","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"kind":"article","role":"collectionGroup","title":"Working with Devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"}}}