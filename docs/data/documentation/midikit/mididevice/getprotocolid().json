{"metadata":{"extendedModule":"MIDIKitIO","modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"symbolKind":"method","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE13getProtocolID0A4Core19MIDIProtocolVersionOSgyF::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","roleHeading":"Instance Method","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"14.0","beta":false,"unavailable":false},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"11.0","name":"macOS"},{"introducedAt":"14.0","name":"Mac Catalyst","deprecated":false,"unavailable":false,"beta":false}],"title":"getProtocolID()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getProtocolID","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"MIDIProtocolVersion","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"kind":"text","text":"?"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getProtocolID","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIProtocolVersion","text":"MIDIProtocolVersion","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"text":"?","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/midikit\/mididevice\/getprotocolid()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"MIDIIOObject.getProtocolID()","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getProtocolID()","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/getProtocolID()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getProtocolID"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO","kind":"typeIdentifier","text":"MIDIProtocolVersion"},{"text":"?","kind":"text"}],"title":"getProtocolID()","url":"\/documentation\/midikit\/mididevice\/getprotocolid()","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/getProtocolID()","role":"symbol","type":"topic","deprecated":true},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"title":"MIDIDevice","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIDevice","kind":"identifier"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","kind":"article","title":"MIDIIOObject Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIProtocolVersion":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIProtocolVersion","kind":"identifier"}],"url":"\/documentation\/midikit\/midiprotocolversion","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIProtocolVersion","abstract":[{"type":"text","text":"MIDI protocol version."}],"title":"MIDIProtocolVersion","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIProtocolVersion"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"url":"\/documentation\/midikit\/midikitio-devices","type":"topic","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"kind":"article","role":"collectionGroup","title":"Working with Devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]}}}