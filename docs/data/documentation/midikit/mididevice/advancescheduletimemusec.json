{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/advanceScheduleTimeMuSec","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"]]},"metadata":{"modules":[{"relatedModules":["MIDIKitIO"],"name":"MIDIKit"}],"title":"advanceScheduleTimeMuSec","roleHeading":"Instance Property","extendedModule":"MIDIKitIO","role":"symbol","symbolKind":"property","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE24advanceScheduleTimeMuSecSSSgvp::SYNTHESIZED::s:9MIDIKitIO10MIDIDeviceV","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"advanceScheduleTimeMuSec","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"advanceScheduleTimeMuSec","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Only the driver that owns the object may set this property."}],"type":"paragraph"},{"inlineContent":[{"text":"If this property value is nonzero, clients should treat the value as a minimum. For devices","type":"text"},{"text":" ","type":"text"},{"text":"with a nonzero advance schedule time, drivers receive outgoing messages to the device at the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"time the client sends them using "},{"code":"MIDISend(_:_:_:)","type":"codeVoice"},{"text":". The driver is responsible for","type":"text"},{"type":"text","text":" "},{"text":"scheduling events to play at the right times, according to their timestamps.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also set this property on any virtual destinations you create. When clients send"},{"type":"text","text":" "},{"text":"messages to a virtual destination with an advance schedule time of 0, the destination","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"receives the messages at the scheduled delivery time. If a virtual destination has a nonzero"},{"text":" ","type":"text"},{"text":"advance schedule time, it receives timestamped messages as soon as theyâ€™re sent, and must do","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"its own internal scheduling of events it receives."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/mididevice\/advancescheduletimemusec"]}],"abstract":[{"type":"text","text":"Recommended number of microseconds in advance that clients should schedule output."},{"text":" ","type":"text"},{"type":"text","text":"("},{"type":"codeVoice","code":"kMIDIPropertyAdvanceScheduleTimeMuSec"},{"type":"text","text":")"}],"sections":[],"references":{"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Devices":{"url":"\/documentation\/midikit\/midikitio-devices","type":"topic","abstract":[{"type":"text","text":"Devices represent physical devices that contain entity(ies) which in turn contain endpoint(s)."}],"kind":"article","role":"collectionGroup","title":"Working with Devices","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Devices"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/MIDIIOObject-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","kind":"article","title":"MIDIIOObject Implementations","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice/advanceScheduleTimeMuSec":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice\/advanceScheduleTimeMuSec","abstract":[{"text":"Recommended number of microseconds in advance that clients should schedule output.","type":"text"},{"type":"text","text":" "},{"text":"(","type":"text"},{"type":"codeVoice","code":"kMIDIPropertyAdvanceScheduleTimeMuSec"},{"type":"text","text":")"}],"kind":"symbol","url":"\/documentation\/midikit\/mididevice\/advancescheduletimemusec","type":"topic","title":"advanceScheduleTimeMuSec","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"advanceScheduleTimeMuSec","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIDevice":{"title":"MIDIDevice","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MIDIDevice","kind":"identifier"}],"abstract":[{"type":"text","text":"A MIDI device, wrapping a Core MIDI "},{"code":"MIDIDeviceRef","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A device can contain zero or more entities, and an entity can contain zero or more inputs"},{"type":"text","text":" "},{"type":"text","text":"and output endpoints."}],"url":"\/documentation\/midikit\/mididevice","navigatorTitle":[{"text":"MIDIDevice","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIDevice","kind":"symbol"}}}