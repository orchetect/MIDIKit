{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/int7\/init(exactly:)-5ki0p"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"?(","kind":"text"},{"text":"exactly","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"source","kind":"internalParam"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"UnsignedInteger","preciseIdentifier":"s:SU"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7"]]},"abstract":[{"type":"text","text":"Initializes from an unsigned integer value, returning nil if the value cannot be preserved"},{"text":" ","type":"text"},{"text":"because it would otherwise overflow or underflow.","type":"text"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11MIDIKitCore4Int7V7exactlyACSgx_tcSURzlufc","role":"symbol","symbolKind":"init","modules":[{"name":"MIDIKit"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SU","text":"UnsignedInteger","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(exactly:)"},"references":{"doc://MIDIKit/documentation/MIDIKit/Int7":{"kind":"symbol","abstract":[{"text":"A 7-bit signed integer value type used in ","type":"text"},{"code":"MIDIKit","type":"codeVoice"},{"text":". (","type":"text"},{"type":"codeVoice","code":"-64 ... 63"},{"type":"text","text":")"}],"type":"topic","url":"\/documentation\/midikit\/int7","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Int7"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7","navigatorTitle":[{"text":"Int7","kind":"identifier"}],"role":"symbol","title":"Int7"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"type":"topic","abstract":[{"text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit.","type":"text"}],"role":"collectionGroup","title":"MIDIKit Value Types","kind":"article","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"},"doc://MIDIKit/documentation/MIDIKit/Int7/init(exactly:)-5ki0p":{"kind":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/Int7\/init(exactly:)-5ki0p","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"exactly"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"UnsignedInteger","preciseIdentifier":"s:SU"},{"text":")","kind":"text"}],"url":"\/documentation\/midikit\/int7\/init(exactly:)-5ki0p","type":"topic","abstract":[{"text":"Initializes from an unsigned integer value, returning nil if the value cannot be preserved","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"because it would otherwise overflow or underflow."}],"title":"init(exactly:)"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"type":"topic","title":"MIDIKitCore","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore"},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"}}}