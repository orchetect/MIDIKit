{"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/formatted()","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"MIDIKit"}],"externalID":"s:Sz10FoundationE9formattedSSyF::SYNTHESIZED::s:11MIDIKitCore6UInt25V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"symbolKind":"method","platforms":[{"beta":false,"introducedAt":"15.0","name":"iOS","unavailable":false,"deprecated":false},{"deprecated":false,"introducedAt":"12.0","unavailable":false,"beta":false,"name":"macOS"},{"introducedAt":"15.0","unavailable":false,"deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"8.0","deprecated":false}],"extendedModule":"Swift","title":"formatted()","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"BinaryInteger.formatted()","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/BinaryInteger-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"languages":["swift"]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/uint25\/formatted()"]}],"references":{"doc://MIDIKit/documentation/MIDIKit/UInt25/formatted()":{"role":"symbol","title":"formatted()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/formatted()","url":"\/documentation\/midikit\/uint25\/formatted()"},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/UInt25":{"navigatorTitle":[{"kind":"identifier","text":"UInt25"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UInt25","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25","url":"\/documentation\/midikit\/uint25","title":"UInt25","abstract":[{"type":"text","text":"A 25-bit unsigned integer value type used in "},{"code":"MIDIKit","type":"codeVoice"},{"type":"text","text":"."}]},"doc://MIDIKit/documentation/MIDIKit/UInt25/BinaryInteger-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt25\/BinaryInteger-Implementations","url":"\/documentation\/midikit\/uint25\/binaryinteger-implementations","title":"BinaryInteger Implementations","abstract":[]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"type":"topic","title":"MIDIKitCore","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"type":"topic","abstract":[{"text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit.","type":"text"}],"role":"collectionGroup","title":"MIDIKit Value Types","kind":"article","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"}}}