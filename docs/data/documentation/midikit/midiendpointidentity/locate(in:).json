{"metadata":{"externalID":"s:9MIDIKitIO20MIDIEndpointIdentityO6locate2inxSgSayxG_tAA0C0RzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"locate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"title":"locate(in:)","extendedModule":"MIDIKitIO","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity\/locate(in:)"},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"locate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"endpoints"},{"kind":"text","text":": ["},{"text":"T","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"MIDIEndpoint","preciseIdentifier":"s:9MIDIKitIO12MIDIEndpointP","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpoint","kind":"typeIdentifier"}]}],"kind":"declarations"}],"abstract":[{"text":"Uses the identity criteria to find the first match in an endpoint collection.","type":"text"},{"type":"text","text":" "},{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no matches are found."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midiendpointidentity\/locate(in:)"]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity"]]},"references":{"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointIdentity/locate(in:)":{"abstract":[{"text":"Uses the identity criteria to find the first match in an endpoint collection.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if no matches are found."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"locate","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"text":"]) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"locate(in:)","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity\/locate(in:)","role":"symbol","url":"\/documentation\/midikit\/midiendpointidentity\/locate(in:)","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpoint":{"navigatorTitle":[{"text":"MIDIEndpoint","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpoint","role":"symbol","url":"\/documentation\/midikit\/midiendpoint","kind":"symbol","abstract":[],"title":"MIDIEndpoint","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MIDIEndpoint","kind":"identifier"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIEndpointIdentity":{"url":"\/documentation\/midikit\/midiendpointidentity","role":"symbol","title":"MIDIEndpointIdentity","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIEndpointIdentity","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIEndpointIdentity","kind":"identifier"}],"navigatorTitle":[{"text":"MIDIEndpointIdentity","kind":"identifier"}],"abstract":[{"type":"text","text":"Criterium with which to identify a MIDI endpoint."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","title":"Working With Endpoints","url":"\/documentation\/midikit\/midikitio-endpoints","role":"collectionGroup","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]}}}