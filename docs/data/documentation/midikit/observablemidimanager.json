{"sections":[],"abstract":[{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" subclass that is observable in a SwiftUI or Combine context.","type":"text"},{"text":" ","type":"text"},{"text":"Two new properties are available: ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints"},{"type":"text","text":"."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/init(clientName:model:manufacturer:notificationHandler:)"]},{"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/updateObjectsCache()"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableNotificationHandler"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations"]}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"],"title":"Inherits From","kind":"relationships"},{"identifiers":["doc:\/\/MIDIKit\/7Combine16ObservableObjectP","doc:\/\/MIDIKit\/objc(pl)NSObject","doc:\/\/MIDIKit\/s7CVarArgP","doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","doc:\/\/MIDIKit\/s23CustomStringConvertibleP","doc:\/\/MIDIKit\/SQ","doc:\/\/MIDIKit\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/midikit\/observablemidimanager"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"class","platforms":[{"name":"iOS","unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false},{"name":"macOS","deprecated":false,"introducedAt":"10.15","beta":false,"unavailable":false},{"introducedAt":"13.0","unavailable":false,"beta":false,"deprecated":false,"name":"Mac Catalyst"}],"externalID":"c:@M@MIDIKitIO@objc(cs)ObservableMIDIManager","roleHeading":"Class","title":"ObservableMIDIManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableMIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"role":"symbol","modules":[{"name":"MIDIKit"}]},"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"],"title":"Manager"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableMIDIManager","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally it is recommended to install the manager instance in the "},{"code":"App","type":"codeVoice"},{"text":" struct.","type":"text"}]},{"syntax":"swift","code":["@main","struct MyApp: App {","    @ObservedObject var midiManager = ObservableMIDIManager(","        clientName: \"MyApp\",","        model: \"MyApp\",","        manufacturer: \"MyCompany\"","    )","","    WindowGroup {","        ContentView()","            .environmentObject(midiManager)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The observable properties can then be used to update view state as a result of changes in the"},{"text":" ","type":"text"},{"type":"text","text":"systemâ€™s MIDI devices and endpoints."}]},{"syntax":"swift","code":["struct ContentView: View {","    @EnvironmentObject var midiManager: ObservableMIDIManager","","    var body: some View {","        List(midiManager.observableDevices.devices) { device in","            Text(device.name)","        }","        List(midiManager.observableEndpoints.inputs) { input in","            Text(input.name)","        }","        List(midiManager.observableEndpoints.outputs) { output in","            Text(output.name)","        }","    }","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO"]]},"references":{"doc://MIDIKit/s7CVarArgP":{"identifier":"doc:\/\/MIDIKit\/s7CVarArgP","type":"unresolvable","title":"Swift.CVarArg"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ObservableMIDIManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableMIDIManager"}],"type":"topic","url":"\/documentation\/midikit\/observablemidimanager","role":"symbol","kind":"symbol","title":"ObservableMIDIManager","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager"},{"text":" subclass that is observable in a SwiftUI or Combine context.","type":"text"},{"type":"text","text":" "},{"text":"Two new properties are available: ","type":"text"},{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","isActive":true},{"type":"text","text":"."}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/init(clientName:model:manufacturer:notificationHandler:)":{"abstract":[{"type":"text","text":"Initialize the MIDI manager (and Core MIDI client)."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"clientName","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"model","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"manufacturer"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"notificationHandler","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ObservableMIDIManager","preciseIdentifier":"c:@M@MIDIKitIO@objc(cs)ObservableMIDIManager"},{"text":".","kind":"text"},{"text":"ObservableNotificationHandler","kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO21ObservableMIDIManagerC0C19NotificationHandlera"},{"kind":"text","text":"?)"}],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/init(clientName:model:manufacturer:notificationHandler:)","url":"\/documentation\/midikit\/observablemidimanager\/init(clientname:model:manufacturer:notificationhandler:)","title":"init(clientName:model:manufacturer:notificationHandler:)","kind":"symbol","role":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableDevices":{"title":"observableDevices","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableDevices"},{"text":": ","kind":"text"},{"text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","kind":"typeIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableDevices","type":"topic","abstract":[{"type":"text","text":"MIDI devices in the system."},{"text":" ","type":"text"},{"type":"text","text":"This is an observable implementation of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices"},{"type":"text","text":"."}],"url":"\/documentation\/midikit\/observablemidimanager\/observabledevices","kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/updateObjectsCache()":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/updateObjectsCache()","url":"\/documentation\/midikit\/observablemidimanager\/updateobjectscache()","title":"updateObjectsCache()","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"updateObjectsCache"},{"kind":"text","text":"()"}],"type":"topic"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/ObservableObject-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableObject-Implementations","url":"\/documentation\/midikit\/observablemidimanager\/observableobject-implementations","title":"ObservableObject Implementations","kind":"article","role":"collectionGroup"},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Ports":{"type":"topic","url":"\/documentation\/midikit\/midimanager-creating-ports","role":"collectionGroup","kind":"article","title":"Creating Ports","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Ports","abstract":[{"type":"text","text":"Virtual MIDI ports (endpoints) can be created in order to allow the user to send your app MIDI events or receive events that your app sends. These will appear in the system to other software as MIDI ports, similar to physical MIDI ports."}]},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/observableEndpoints":{"url":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","role":"symbol","title":"observableEndpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/observableEndpoints","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"observableEndpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV","text":"MIDIEndpoints"}],"abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."},{"type":"text","text":" "},{"type":"text","text":"This is an observable implementation of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints"},{"text":".","type":"text"}]},"doc://MIDIKit/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/objc(pl)NSObject"},"doc://MIDIKit/7Combine16ObservableObjectP":{"title":"Combine.ObservableObject","type":"unresolvable","identifier":"doc:\/\/MIDIKit\/7Combine16ObservableObjectP"},"doc://MIDIKit/SH":{"identifier":"doc:\/\/MIDIKit\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Receiving-Notifications":{"url":"\/documentation\/midikit\/midimanager-receiving-notifications","type":"topic","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Receiving-Notifications","role":"collectionGroup","title":"Receiving Notifications","abstract":[{"type":"text","text":"Specify a handler to receive Core MIDI system notifications."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/devices":{"title":"devices","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"devices","kind":"identifier"},{"kind":"text","text":": "},{"text":"MIDIDevices","preciseIdentifier":"s:9MIDIKitIO11MIDIDevicesV","kind":"typeIdentifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/devices","type":"topic","abstract":[{"type":"text","text":"MIDI devices in the system."}],"url":"\/documentation\/midikit\/midimanager\/devices","kind":"symbol"},"doc://MIDIKit/SQ":{"identifier":"doc:\/\/MIDIKit\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager/endpoints":{"url":"\/documentation\/midikit\/midimanager\/endpoints","role":"symbol","title":"endpoints","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager\/endpoints","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpoints","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MIDIEndpoints","preciseIdentifier":"s:9MIDIKitIO13MIDIEndpointsV"}],"abstract":[{"type":"text","text":"MIDI input and output endpoints in the system."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Combine-and-SwiftUI-Features":{"role":"article","abstract":[{"type":"text","text":"Certain objects and properties are observable."}],"url":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","kind":"article","type":"topic","title":"Combine and SwiftUI Features","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Combine-and-SwiftUI-Features"},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Creating-Connections":{"url":"\/documentation\/midikit\/midimanager-creating-connections","kind":"article","title":"Creating Connections","role":"collectionGroup","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Creating-Connections","abstract":[{"type":"text","text":"Managed connections are smart MIDI connections owned and maintained by the "},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"type":"text","text":". They form connections to one or more endpoints and automatically reconnect if the target endpoints disappear and reappear in the system."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager-Removing-Ports-and-Connections":{"abstract":[],"url":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","type":"topic","role":"collectionGroup","kind":"article","title":"Removing Ports and Connections","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager-Removing-Ports-and-Connections"},"doc://MIDIKit/documentation/MIDIKit/ObservableMIDIManager/ObservableNotificationHandler":{"kind":"symbol","title":"ObservableMIDIManager.ObservableNotificationHandler","type":"topic","abstract":[{"text":"Handler that is called when state has changed in the manager.","type":"text"}],"url":"\/documentation\/midikit\/observablemidimanager\/observablenotificationhandler","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ObservableNotificationHandler"}],"navigatorTitle":[{"text":"ObservableNotificationHandler","kind":"identifier"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/ObservableMIDIManager\/ObservableNotificationHandler"},"doc://MIDIKit/s23CustomStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://MIDIKit/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/MIDIKit\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"}}}