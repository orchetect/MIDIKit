{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/midikit\/midioutputendpoint\/getprotocolid()"]}],"identifier":{"url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint\/getProtocolID()","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getProtocolID","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MIDIProtocolVersion","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"text":"?","kind":"text"}],"modules":[{"name":"MIDIKit","relatedModules":["MIDIKitIO"]}],"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"14.0","name":"iOS"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"11.0"},{"name":"Mac Catalyst","unavailable":false,"introducedAt":"14.0","deprecated":false,"beta":false}],"extendedModule":"MIDIKitIO","title":"getProtocolID()","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","externalID":"s:9MIDIKitIO12MIDIIOObjectPAAE13getProtocolID0A4Core19MIDIProtocolVersionOSgyF::SYNTHESIZED::s:9MIDIKitIO18MIDIOutputEndpointV"},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MIDIIOObject.getProtocolID()"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint\/MIDIIOObject-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getProtocolID"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIProtocolVersion","text":"MIDIProtocolVersion","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"text":"?","kind":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO","kind":"article","title":"MIDIKitIO","url":"\/documentation\/midikit\/midikitio","role":"collectionGroup","abstract":[{"text":"Core MIDI I\/O wrapper layer offering ","type":"text"},{"type":"reference","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","isActive":true},{"text":" class to create virtual ports and connect to existing ports in the system in order to send and receive MIDI events.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputEndpoint":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MIDIOutputEndpoint","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIOutputEndpoint"}],"title":"MIDIOutputEndpoint","url":"\/documentation\/midikit\/midioutputendpoint","role":"symbol","abstract":[{"text":"A MIDI output endpoint in the system, wrapping a Core MIDI ","type":"text"},{"type":"codeVoice","code":"MIDIEndpointRef"},{"type":"text","text":"."}]},"doc://MIDIKit/documentation/MIDIKit/MIDIManager":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIManager","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MIDIManager"}],"navigatorTitle":[{"kind":"identifier","text":"MIDIManager"}],"title":"MIDIManager","url":"\/documentation\/midikit\/midimanager","role":"symbol","abstract":[{"text":"Central MIDI Port and Connection Manager and MIDI system data provider.","type":"text"}]},"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputEndpoint/MIDIIOObject-Implementations":{"role":"collectionGroup","url":"\/documentation\/midikit\/midioutputendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint\/MIDIIOObject-Implementations"},"doc://MIDIKit/documentation/MIDIKit/MIDIProtocolVersion":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MIDIProtocolVersion","kind":"identifier"}],"url":"\/documentation\/midikit\/midiprotocolversion","type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIProtocolVersion","abstract":[{"type":"text","text":"MIDI protocol version."}],"title":"MIDIProtocolVersion","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MIDIProtocolVersion"}],"kind":"symbol"},"doc://MIDIKit/documentation/MIDIKit/MIDIOutputEndpoint/getProtocolID()":{"abstract":[],"deprecated":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getProtocolID"},{"text":"() -> ","kind":"text"},{"text":"MIDIProtocolVersion","kind":"typeIdentifier","preciseIdentifier":"s:11MIDIKitCore19MIDIProtocolVersionO"},{"text":"?","kind":"text"}],"title":"getProtocolID()","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIOutputEndpoint\/getProtocolID()","role":"symbol","url":"\/documentation\/midikit\/midioutputendpoint\/getprotocolid()","kind":"symbol","type":"topic"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitIO-Endpoints":{"type":"topic","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitIO-Endpoints","kind":"article","title":"Working With Endpoints","url":"\/documentation\/midikit\/midikitio-endpoints","role":"collectionGroup","abstract":[{"text":"Endpoints represent both virtual and physical MIDI inputs (destinations) and outputs (sources).","type":"text"}]}}}