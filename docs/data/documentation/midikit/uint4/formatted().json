{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatted"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4\/formatted()"},"metadata":{"platforms":[{"introducedAt":"15.0","beta":false,"name":"iOS","deprecated":false,"unavailable":false},{"deprecated":false,"introducedAt":"12.0","name":"macOS","unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"15.0","deprecated":false,"unavailable":false,"beta":false},{"introducedAt":"8.0","name":"watchOS","deprecated":false,"unavailable":false,"beta":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formatted"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"MIDIKit"}],"externalID":"s:Sz10FoundationE9formattedSSyF::SYNTHESIZED::s:11MIDIKitCore5UInt4V","roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","title":"formatted()","symbolKind":"method"},"variants":[{"paths":["\/documentation\/midikit\/uint4\/formatted()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/MIDIKit\/documentation\/MIDIKit","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4","doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4\/BinaryInteger-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"BinaryInteger.formatted()","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://MIDIKit/documentation/MIDIKit":{"type":"topic","kind":"symbol","role":"collection","title":"MIDIKit","abstract":[{"text":"MIDIKit umbrella import that includes all MIDIKit modules.","type":"text"}],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit","url":"\/documentation\/midikit"},"doc://MIDIKit/documentation/MIDIKit/UInt4/BinaryInteger-Implementations":{"title":"BinaryInteger Implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4\/BinaryInteger-Implementations","abstract":[],"url":"\/documentation\/midikit\/uint4\/binaryinteger-implementations"},"doc://MIDIKit/documentation/MIDIKit/UInt4":{"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4","role":"symbol","navigatorTitle":[{"text":"UInt4","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A 4-bit unsigned integer value type used in "},{"code":"MIDIKit","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UInt4"}],"title":"UInt4","url":"\/documentation\/midikit\/uint4"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore-Value-Types":{"type":"topic","abstract":[{"text":"To increase type safety and enforce value validation, novel value types have been implemented in MIDIKit.","type":"text"}],"role":"collectionGroup","title":"MIDIKit Value Types","kind":"article","url":"\/documentation\/midikit\/midikitcore-value-types","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore-Value-Types"},"doc://MIDIKit/documentation/MIDIKit/MIDIKitCore":{"abstract":[{"type":"text","text":"Essential MIDI types used by all modules in MIDIKit."}],"type":"topic","title":"MIDIKitCore","role":"collectionGroup","kind":"article","identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/MIDIKitCore","url":"\/documentation\/midikit\/midikitcore"},"doc://MIDIKit/documentation/MIDIKit/UInt4/formatted()":{"type":"topic","abstract":[],"identifier":"doc:\/\/MIDIKit\/documentation\/MIDIKit\/UInt4\/formatted()","role":"symbol","title":"formatted()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"formatted","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/midikit\/uint4\/formatted()","kind":"symbol"}}}