{"interfaceLanguages":{"swift":[{"children":[{"title":"Introduction","type":"groupMarker"},{"children":[{"title":"Simple Examples","type":"groupMarker"},{"path":"\/documentation\/midikit\/simple-midi-listener-class-example","title":"Simple MIDI Listener Class Example","type":"article"}],"path":"\/documentation\/midikit\/midikit-getting-started","title":"Getting Started","type":"symbol"},{"title":"Modules","type":"groupMarker"},{"children":[{"title":"Events","type":"groupMarker"},{"children":[{"title":"Categories","type":"groupMarker"},{"children":[{"title":"Constructors (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-5hwd6","title":"static func noteOn(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-3aq0d","title":"static func noteOn(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-9ntbn","title":"static func noteOff(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-40eu2","title":"static func noteOff(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-8m6c8","title":"static func notePressure(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-9knkb","title":"static func notePressure(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-1r3oe","title":"static func cc(UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-7k06z","title":"static func cc(MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccrpn(_:channel:group:)","title":"static func ccRPN(MIDIEvent.RegisteredController, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccnrpn(_:channel:group:)","title":"static func ccNRPN(MIDIEvent.AssignableController, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(value:channel:group:)","title":"static func pitchBend(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure(amount:channel:group:)","title":"static func pressure(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange(program:bank:channel:group:)","title":"static func programChange(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(_:change:channel:group:)","title":"static func rpn(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-9unrb","title":"static func rpn(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?), change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-7chyn","title":"static func rpn(parameter: UInt7Pair, data: UInt14, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-9ju8k","title":"static func rpn(parameter: UInt7Pair, data: UInt32, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1rpn(_:change:channel:group:)","title":"static func midi1RPN(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(_:change:channel:group:)","title":"static func nrpn(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-tpej","title":"static func nrpn(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?), change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-nib6","title":"static func nrpn(parameter: UInt7Pair, data: UInt14, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-u0a","title":"static func nrpn(parameter: UInt7Pair, data: UInt32, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1nrpn(_:change:channel:group:)","title":"static func midi1NRPN(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-91ea3","title":"static func noteCC(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-8vd58","title":"static func noteCC(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qoa8","title":"static func notePitchBend(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qk4i","title":"static func notePitchBend(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-9f1cj","title":"static func noteManagement(note: UInt7, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-3o4c8","title":"static func noteManagement(note: MIDINote, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:)","title":"case noteOn(MIDIEvent.NoteOn)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-25kbb","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-4s0ia","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1zerovelocityasnoteoff","title":"var midi1ZeroVelocityAsNoteOff: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/noteon\/==(_:_:)","title":"static func == (MIDIEvent.NoteOn, MIDIEvent.NoteOn) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NoteOn.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteon","title":"MIDIEvent.NoteOn","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:)","title":"case noteOff(MIDIEvent.NoteOff)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-8mn5r","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-99wpk","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NoteOff.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteoff","title":"MIDIEvent.NoteOff","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepressure(_:)","title":"case notePressure(MIDIEvent.NotePressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-4wnrd","title":"init(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-5k2yu","title":"init(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.property","title":"var amount: MIDIEvent.NotePressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/note","title":"var note: MIDINote","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.typealias","title":"MIDIEvent.NotePressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amountvalidated","title":"MIDIEvent.NotePressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NotePressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepressure","title":"MIDIEvent.NotePressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/cc(_:)","title":"case cc(MIDIEvent.CC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-8rt6a","title":"init(controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-b9q8","title":"init(controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.property","title":"var controller: MIDIEvent.CC.Controller","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.property","title":"var value: MIDIEvent.CC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.typealias","title":"MIDIEvent.CC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/cc\/valuevalidated","title":"MIDIEvent.CC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-6s3dq","title":"static func != (some BinaryInteger, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-9fgjo","title":"static func != (MIDIEvent.CC.Controller, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-5k5fh","title":"static func == (MIDIEvent.CC.Controller, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-6y8wz","title":"static func == (some BinaryInteger, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/datadecrement","title":"case dataDecrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataincrement","title":"case dataIncrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose5","title":"case generalPurpose5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose6","title":"case generalPurpose6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose7","title":"case generalPurpose7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose8","title":"case generalPurpose8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/highresolutionvelocityprefix","title":"case highResolutionVelocityPrefix","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/hold2","title":"case hold2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/legatofootswitch","title":"case legatoFootswitch","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb(for:)","title":"case lsb(for: MIDIEvent.CC.Controller.LSB)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode(_:)","title":"case mode(MIDIEvent.CC.Controller.Mode)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnlsb","title":"case nrpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnmsb","title":"case nrpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamento","title":"case portamento","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentocontrol","title":"case portamentoControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnlsb","title":"case rpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnmsb","title":"case rpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/softpedal","title":"case softPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sostenutopedal","title":"case sostenutoPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sustainpedal","title":"case sustainPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/init(number:)","title":"init(number: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/number","title":"var number: UInt7","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/channelvolume","title":"case channelVolume","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.LSB.Undefined)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc9","title":"case cc9","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/msbcontroller","title":"var msbController: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined","title":"MIDIEvent.CC.Controller.LSB.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb","title":"MIDIEvent.CC.Controller.LSB","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allnotesoff","title":"case allNotesOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allsoundoff","title":"case allSoundOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/localcontrol","title":"case localControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/monomodeon","title":"case monoModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeoff","title":"case omniModeOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeon","title":"case omniModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/polymodeon","title":"case polyModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/resetallcontrollers","title":"case resetAllControllers","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode","title":"MIDIEvent.CC.Controller.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc90","title":"case cc90","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined","title":"MIDIEvent.CC.Controller.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.typealias","title":"MIDIEvent.CC.Controller.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.CC.Controller]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-7fi2c","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum","title":"MIDIEvent.CC.Controller","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.CC.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/cc\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc","title":"MIDIEvent.CC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(_:)","title":"case pitchBend(MIDIEvent.PitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(value:channel:group:)","title":"init(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.property","title":"var value: MIDIEvent.PitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.typealias","title":"MIDIEvent.PitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/valuevalidated","title":"MIDIEvent.PitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.PitchBend.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pitchbend","title":"MIDIEvent.PitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pressure(_:)","title":"case pressure(MIDIEvent.Pressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(amount:channel:group:)","title":"init(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.property","title":"var amount: MIDIEvent.Pressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.typealias","title":"MIDIEvent.Pressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amountvalidated","title":"MIDIEvent.Pressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.Pressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pressure","title":"MIDIEvent.Pressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/programchange(_:)","title":"case programChange(MIDIEvent.ProgramChange)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(program:bank:channel:group:)","title":"init(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.property","title":"var bank: MIDIEvent.ProgramChange.Bank","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/program","title":"var program: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(_:)","title":"case bankSelect(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/nobankselect","title":"case noBankSelect","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(msb:lsb:)","title":"static func bankSelect(msb: UInt7, lsb: UInt7) -> MIDIEvent.ProgramChange.Bank","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum","title":"MIDIEvent.ProgramChange.Bank","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.ProgramChange.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/programchange\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange","title":"MIDIEvent.ProgramChange","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/rpn(_:)","title":"case rpn(MIDIEvent.RPN)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/init(_:change:channel:group:)","title":"init(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/change","title":"var change: MIDI2ParameterNumberChange","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/parameter","title":"var parameter: MIDIEvent.RegisteredController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/rpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.RPN.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/rpn\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/rpn","title":"MIDIEvent.RPN","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/channelcoarsetuning(_:)","title":"case channelCoarseTuning(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/channelfinetuning(_:)","title":"case channelFineTuning(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/modulationdepthrange(dataentrymsb:dataentrylsb:)","title":"case modulationDepthRange(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/mpeconfigurationmessage(dataentrymsb:dataentrylsb:)","title":"case mpeConfigurationMessage(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/pitchbendsensitivity(semitones:cents:)","title":"case pitchBendSensitivity(semitones: UInt7, cents: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalazimuthangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalAzimuthAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionaldistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalelevationangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalElevationAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalgain(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGain(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalgainatmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGainAtMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalpanspreadangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalPanSpreadAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalreferencedistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalReferenceDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalrollangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalRollAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/tuningbankselect(number:)","title":"case tuningBankSelect(number: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/tuningprogramchange(number:)","title":"case tuningProgramChange(number: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/init(parameter:data:)","title":"init(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?))","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/parameterbytes","title":"var parameterBytes: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midi1events(channel:group:)","title":"func midi1Events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midi1rawbytes(channel:group:)","title":"func midi1RawBytes(channel: UInt4, group: UInt4) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/umprawwords(protocol:change:channel:group:)","title":"func umpRawWords(protocol: MIDIProtocolVersion, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [[UMPWord]]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/controllers","title":"static let controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/type","title":"static let type: MIDIParameterNumberType","type":"property"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midiparameternumber-implementations","title":"MIDIParameterNumber Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller","title":"MIDIEvent.RegisteredController","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/nrpn(_:)","title":"case nrpn(MIDIEvent.NRPN)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/init(_:change:channel:group:)","title":"init(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/change","title":"var change: MIDI2ParameterNumberChange","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/parameter","title":"var parameter: MIDIEvent.AssignableController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/nrpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NRPN.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/nrpn\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/nrpn","title":"MIDIEvent.NRPN","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/init(parameter:data:)","title":"init(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?))","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/parameterbytes","title":"var parameterBytes: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midi1events(channel:group:)","title":"func midi1Events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midi1rawbytes(channel:group:)","title":"func midi1RawBytes(channel: UInt4, group: UInt4) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/umprawwords(protocol:change:channel:group:)","title":"func umpRawWords(protocol: MIDIProtocolVersion, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [[UMPWord]]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/controllers","title":"static let controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/type","title":"static let type: MIDIParameterNumberType","type":"property"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midiparameternumber-implementations","title":"MIDIParameterNumber Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller","title":"MIDIEvent.AssignableController","type":"enum"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(_:)","title":"case noteCC(MIDIEvent.NoteCC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-1cswx","title":"init(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-96y16","title":"init(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/controller","title":"var controller: MIDIEvent.NoteCC.PerNoteController","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.property","title":"var value: MIDIEvent.NoteCC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.typealias","title":"MIDIEvent.NoteCC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notecc\/valuevalidated","title":"MIDIEvent.NoteCC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable(_:)","title":"case assignable(MIDIEvent.NoteCC.PerNoteController.Assignable)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)-swift.enum.case","title":"case registered(MIDIEvent.NoteCC.PerNoteController.Registered)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/number","title":"var number: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable","title":"MIDIEvent.NoteCC.PerNoteController.Assignable","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)-swift.type.method","title":"static func registered(UInt8) -> MIDIEvent.NoteCC.PerNoteController","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/fine","title":"var fine: UInt25","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Pitch7_25","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-2iqvl","title":"static func != (some BinaryInteger, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4hg0e","title":"static func != (MIDIEvent.NoteCC.PerNoteController.Registered, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-2j2mi","title":"static func == (some BinaryInteger, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-3hpch","title":"static func == (MIDIEvent.NoteCC.PerNoteController.Registered, some BinaryInteger) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.enum.case","title":"case pitch7_25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined(_:)","title":"case undefined(MIDIEvent.NoteCC.PerNoteController.Registered.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/init(number:)","title":"init(number: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/number","title":"var number: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc0","title":"case cc0","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc100","title":"case cc100","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc101","title":"case cc101","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc12","title":"case cc12","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc120","title":"case cc120","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc121","title":"case cc121","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc122","title":"case cc122","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc123","title":"case cc123","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc124","title":"case cc124","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc125","title":"case cc125","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc126","title":"case cc126","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc127","title":"case cc127","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc128","title":"case cc128","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc129","title":"case cc129","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc13","title":"case cc13","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc130","title":"case cc130","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc131","title":"case cc131","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc132","title":"case cc132","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc133","title":"case cc133","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc134","title":"case cc134","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc135","title":"case cc135","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc136","title":"case cc136","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc137","title":"case cc137","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc138","title":"case cc138","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc139","title":"case cc139","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc140","title":"case cc140","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc141","title":"case cc141","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc142","title":"case cc142","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc143","title":"case cc143","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc144","title":"case cc144","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc145","title":"case cc145","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc146","title":"case cc146","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc147","title":"case cc147","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc148","title":"case cc148","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc149","title":"case cc149","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc150","title":"case cc150","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc151","title":"case cc151","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc152","title":"case cc152","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc153","title":"case cc153","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc154","title":"case cc154","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc155","title":"case cc155","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc156","title":"case cc156","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc157","title":"case cc157","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc158","title":"case cc158","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc159","title":"case cc159","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc16","title":"case cc16","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc160","title":"case cc160","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc161","title":"case cc161","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc162","title":"case cc162","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc163","title":"case cc163","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc164","title":"case cc164","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc165","title":"case cc165","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc166","title":"case cc166","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc167","title":"case cc167","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc168","title":"case cc168","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc169","title":"case cc169","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc17","title":"case cc17","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc170","title":"case cc170","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc171","title":"case cc171","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc172","title":"case cc172","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc173","title":"case cc173","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc174","title":"case cc174","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc175","title":"case cc175","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc176","title":"case cc176","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc177","title":"case cc177","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc178","title":"case cc178","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc179","title":"case cc179","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc18","title":"case cc18","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc180","title":"case cc180","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc181","title":"case cc181","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc182","title":"case cc182","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc183","title":"case cc183","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc184","title":"case cc184","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc185","title":"case cc185","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc186","title":"case cc186","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc187","title":"case cc187","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc188","title":"case cc188","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc189","title":"case cc189","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc19","title":"case cc19","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc190","title":"case cc190","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc191","title":"case cc191","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc192","title":"case cc192","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc193","title":"case cc193","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc194","title":"case cc194","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc195","title":"case cc195","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc196","title":"case cc196","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc197","title":"case cc197","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc198","title":"case cc198","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc199","title":"case cc199","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc200","title":"case cc200","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc201","title":"case cc201","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc202","title":"case cc202","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc203","title":"case cc203","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc204","title":"case cc204","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc205","title":"case cc205","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc206","title":"case cc206","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc207","title":"case cc207","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc208","title":"case cc208","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc209","title":"case cc209","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc210","title":"case cc210","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc211","title":"case cc211","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc212","title":"case cc212","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc213","title":"case cc213","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc214","title":"case cc214","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc215","title":"case cc215","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc216","title":"case cc216","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc217","title":"case cc217","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc218","title":"case cc218","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc219","title":"case cc219","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc220","title":"case cc220","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc221","title":"case cc221","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc222","title":"case cc222","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc223","title":"case cc223","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc224","title":"case cc224","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc225","title":"case cc225","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc226","title":"case cc226","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc227","title":"case cc227","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc228","title":"case cc228","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc229","title":"case cc229","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc230","title":"case cc230","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc231","title":"case cc231","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc232","title":"case cc232","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc233","title":"case cc233","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc234","title":"case cc234","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc235","title":"case cc235","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc236","title":"case cc236","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc237","title":"case cc237","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc238","title":"case cc238","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc239","title":"case cc239","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc240","title":"case cc240","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc241","title":"case cc241","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc242","title":"case cc242","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc243","title":"case cc243","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc244","title":"case cc244","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc245","title":"case cc245","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc246","title":"case cc246","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc247","title":"case cc247","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc248","title":"case cc248","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc249","title":"case cc249","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc250","title":"case cc250","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc251","title":"case cc251","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc252","title":"case cc252","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc253","title":"case cc253","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc254","title":"case cc254","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc255","title":"case cc255","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc32","title":"case cc32","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc33","title":"case cc33","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc34","title":"case cc34","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc35","title":"case cc35","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc36","title":"case cc36","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc37","title":"case cc37","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc38","title":"case cc38","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc39","title":"case cc39","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc4","title":"case cc4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc40","title":"case cc40","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc41","title":"case cc41","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc42","title":"case cc42","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc43","title":"case cc43","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc44","title":"case cc44","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc45","title":"case cc45","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc46","title":"case cc46","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc47","title":"case cc47","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc48","title":"case cc48","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc49","title":"case cc49","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc5","title":"case cc5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc50","title":"case cc50","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc51","title":"case cc51","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc52","title":"case cc52","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc53","title":"case cc53","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc54","title":"case cc54","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc55","title":"case cc55","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc56","title":"case cc56","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc57","title":"case cc57","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc58","title":"case cc58","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc59","title":"case cc59","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc6","title":"case cc6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc60","title":"case cc60","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc61","title":"case cc61","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc62","title":"case cc62","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc63","title":"case cc63","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc64","title":"case cc64","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc65","title":"case cc65","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc66","title":"case cc66","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc67","title":"case cc67","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc68","title":"case cc68","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc69","title":"case cc69","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc80","title":"case cc80","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc81","title":"case cc81","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc82","title":"case cc82","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc83","title":"case cc83","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc84","title":"case cc84","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc88","title":"case cc88","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc90","title":"case cc90","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc96","title":"case cc96","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc97","title":"case cc97","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc98","title":"case cc98","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc99","title":"case cc99","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/controller","title":"var controller: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.typealias","title":"MIDIEvent.NoteCC.PerNoteController.Registered.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.NoteCC.PerNoteController.Registered]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4uipw","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered","title":"MIDIEvent.NoteCC.PerNoteController.Registered","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller","title":"MIDIEvent.NoteCC.PerNoteController","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc","title":"MIDIEvent.NoteCC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(_:)","title":"case notePitchBend(MIDIEvent.NotePitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-3plbb","title":"init(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-50vvj","title":"init(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.property","title":"var value: MIDIEvent.NotePitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.typealias","title":"MIDIEvent.NotePitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/valuevalidated","title":"MIDIEvent.NotePitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend","title":"MIDIEvent.NotePitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(_:)","title":"case noteManagement(MIDIEvent.NoteManagement)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-4ur90","title":"init(note: MIDINote, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-7mosa","title":"init(note: UInt7, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflags","title":"var optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/detachpernotecontrollers","title":"case detachPerNoteControllers","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/resetpernotecontrollers","title":"case resetPerNoteControllers","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag","title":"MIDIEvent.NoteManagement.OptionFlag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement","title":"MIDIEvent.NoteManagement","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-2kk3a","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-3pzrg","title":"init(BytePair)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-7oxv7","title":"init(Double)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(coarse:fine:)","title":"init(coarse: UInt7, fine: UInt9)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/fine","title":"var fine: UInt9","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9","title":"MIDIEvent.NoteAttribute.Pitch7_9","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/manufacturerspecific(data:)","title":"case manufacturerSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(_:)","title":"case pitch7_9(MIDIEvent.NoteAttribute.Pitch7_9)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/profilespecific(data:)","title":"case profileSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/undefined(attributetype:data:)","title":"case undefined(attributeType: UInt8, data: UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/init(type:data:)","title":"init(type: UInt8, data: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributedata","title":"var attributeData: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributetype","title":"var attributeType: UInt8","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(coarse:fine:)","title":"static func pitch7_9(coarse: UInt7, fine: UInt9) -> MIDIEvent.NoteAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute","title":"MIDIEvent.NoteAttribute","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/notevelocity","title":"MIDIEvent.NoteVelocity","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notevelocityvalidated","title":"MIDIEvent.NoteVelocityValidated","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/assignable","title":"case assignable","type":"case"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/registered","title":"case registered","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/controllers","title":"var controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiparameternumbertype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiparameternumbertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiparameternumbertype","title":"MIDIParameterNumberType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/absolute","title":"case absolute","type":"case"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/relative","title":"case relative","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midi2parameternumberchange\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midi2parameternumberchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midi2parameternumberchange","title":"MIDI2ParameterNumberChange","type":"enum"}],"path":"\/documentation\/midikit\/midievent-channel-voice","title":"Channel Voice","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(midibeat:group:)","title":"static func songPositionPointer(midiBeat: UInt14, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect(number:group:)","title":"static func songSelect(number: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(databyte:group:)","title":"static func timecodeQuarterFrame(dataByte: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(group:)","title":"static func tuneRequest(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(bus:group:)","title":"static func unofficialBusSelect(bus: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(_:)","title":"case songPositionPointer(MIDIEvent.SongPositionPointer)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/init(midibeat:group:)","title":"init(midiBeat: UInt14, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midibeat","title":"var midiBeat: UInt14","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer","title":"MIDIEvent.SongPositionPointer","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/songselect(_:)","title":"case songSelect(MIDIEvent.SongSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/init(number:group:)","title":"init(number: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songselect\/number","title":"var number: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songselect","title":"MIDIEvent.SongSelect","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(_:)","title":"case timecodeQuarterFrame(MIDIEvent.TimecodeQuarterFrame)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/init(databyte:group:)","title":"init(dataByte: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/databyte","title":"var dataByte: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe","title":"MIDIEvent.TimecodeQuarterFrame","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(_:)","title":"case tuneRequest(MIDIEvent.TuneRequest)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/tunerequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/tunerequest","title":"MIDIEvent.TuneRequest","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(_:)","title":"case unofficialBusSelect(MIDIEvent.UnofficialBusSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/init(bus:group:)","title":"init(bus: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/bus","title":"var bus: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect","title":"MIDIEvent.UnofficialBusSelect","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-common","title":"System Common","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)-2xian","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)-8tnhw","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt7], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawhexstring:group:)","title":"static func sysEx7(rawHexString: some StringProtocol, group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawbytes:group:)","title":"static func sysEx7(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)-1p0x1","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)-150x7","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt7], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(manufacturer:data:group:)","title":"static func sysEx8(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(rawbytes:group:)","title":"static func sysEx8(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx8(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(_:)","title":"case sysEx7(MIDIEvent.SysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)-34spj","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt7], group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)-evgw","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawhexstring(leadingf0:trailingf7:separator:)","title":"func midi1RawHexString(leadingF0: Bool, trailingF7: Bool, separator: String?) -> String","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.SysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex7","title":"MIDIEvent.SysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(_:)","title":"case universalSysEx7(MIDIEvent.UniversalSysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)-15lzi","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt7], group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)-5gbeo","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.UniversalSysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7","title":"MIDIEvent.UniversalSysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/sysex8(_:)","title":"case sysEx8(MIDIEvent.SysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex8","title":"MIDIEvent.SysEx8","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(_:)","title":"case universalSysEx8(MIDIEvent.UniversalSysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8","title":"MIDIEvent.UniversalSysEx8","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/manufacturer(_:)","title":"case manufacturer(MIDIEvent.SysExManufacturer)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/universal(_:)","title":"case universal(MIDIEvent.UniversalSysExType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexid","title":"MIDIEvent.SysExID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/onebyte(_:)","title":"case oneByte(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/threebyte(byte2:byte3:)","title":"case threeByte(byte2: UInt7, byte3: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/educational()","title":"static func educational() -> MIDIEvent.SysExManufacturer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer","title":"MIDIEvent.SysExManufacturer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/nonrealtime","title":"case nonRealTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/realtime","title":"case realTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawuint8value:)","title":"init?(rawUInt8Value: UInt8)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawvalue:)","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype","title":"MIDIEvent.UniversalSysExType","type":"enum"}],"path":"\/documentation\/midikit\/midievent-system-exclusive","title":"System Exclusive","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(group:)","title":"static func start(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop(group:)","title":"static func stop(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue(group:)","title":"static func `continue`(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock(group:)","title":"static func timingClock(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset(group:)","title":"static func systemReset(group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(_:)","title":"case start(MIDIEvent.Start)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/start\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/start","title":"MIDIEvent.Start","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/stop(_:)","title":"case stop(MIDIEvent.Stop)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/stop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/stop","title":"MIDIEvent.Stop","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/continue(_:)","title":"case `continue`(MIDIEvent.Continue)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/continue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/continue","title":"MIDIEvent.Continue","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timingclock(_:)","title":"case timingClock(MIDIEvent.TimingClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timingclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timingclock","title":"MIDIEvent.TimingClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/systemreset(_:)","title":"case systemReset(MIDIEvent.SystemReset)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/systemreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/systemreset","title":"MIDIEvent.SystemReset","type":"struct"},{"title":"Deprecated in MIDI 2.0","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing(group:)","title":"static func activeSensing(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing(_:)","title":"case activeSensing(MIDIEvent.ActiveSensing)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/activesensing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/activesensing","title":"MIDIEvent.ActiveSensing","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-real-time","title":"System Real-Time","type":"symbol"},{"children":[{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(group:)","title":"static func noOp(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrclock(time:group:)","title":"static func jrClock(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(time:group:)","title":"static func jrTimestamp(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(_:)","title":"case noOp(MIDIEvent.NoOp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noop","title":"MIDIEvent.NoOp","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrclock(_:)","title":"case jrClock(MIDIEvent.JRClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrclock","title":"MIDIEvent.JRClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(_:)","title":"case jrTimestamp(MIDIEvent.JRTimestamp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp","title":"MIDIEvent.JRTimestamp","type":"struct"}],"path":"\/documentation\/midikit\/midievent-utility","title":"Utility Messages","type":"symbol"},{"title":"General Properties","type":"groupMarker"},{"children":[{"title":"Channel Voice","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/channel","title":"var channel: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/group","title":"var group: UInt4","type":"property"}],"path":"\/documentation\/midikit\/midievent-general-properties","title":"General Properties","type":"symbol"},{"title":"Event Filtering","type":"groupMarker"},{"children":[{"title":"Filtering","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice","title":"var isChannelVoice: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftype:)","title":"func isChannelVoice(ofType: MIDIEvent.ChanVoiceType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftypes:)","title":"func isChannelVoice(ofTypes: Set<MIDIEvent.ChanVoiceType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon","title":"var isSystemCommon: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftype:)","title":"func isSystemCommon(ofType: MIDIEvent.SysCommonType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftypes:)","title":"func isSystemCommon(ofTypes: Set<MIDIEvent.SysCommonType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive","title":"var isSystemExclusive: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftype:)","title":"func isSystemExclusive(ofType: MIDIEvent.SysExType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftypes:)","title":"func isSystemExclusive(ofTypes: Set<MIDIEvent.SysExType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime","title":"var isSystemRealTime: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftype:)","title":"func isSystemRealTime(ofType: MIDIEvent.SysRealTimeType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftypes:)","title":"func isSystemRealTime(ofTypes: Set<MIDIEvent.SysRealTimeType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility","title":"var isUtility: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftype:)","title":"func isUtility(ofType: MIDIEvent.UtilityType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftypes:)","title":"func isUtility(ofTypes: Set<MIDIEvent.UtilityType>) -> Bool","type":"method"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notecc","title":"case noteCC","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notemanagement","title":"case noteManagement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepitchbend","title":"case notePitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/nrpn","title":"case nrpn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/programchange","title":"case programChange","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/rpn","title":"case rpn","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype","title":"MIDIEvent.ChanVoiceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.enum.case","title":"case dropCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.enum.case","title":"case dropCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannel(_:)","title":"case dropChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannels(_:)","title":"case dropChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinrange(_:)","title":"case dropNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinranges(_:)","title":"case dropNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptype(_:)","title":"case dropType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.enum.case","title":"case keepCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.enum.case","title":"case keepCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannel(_:)","title":"case keepChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannels(_:)","title":"case keepChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinrange(_:)","title":"case keepNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinranges(_:)","title":"case keepNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.enum.case","title":"case onlyCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.enum.case","title":"case onlyCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannel(_:)","title":"case onlyChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannels(_:)","title":"case onlyChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinrange(_:)","title":"case onlyNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinranges(_:)","title":"case onlyNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.type.method","title":"static func dropCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.type.method","title":"static func dropCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.type.method","title":"static func keepCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.type.method","title":"static func keepCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.type.method","title":"static func onlyCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.type.method","title":"static func onlyCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes","title":"MIDIEvent.ChanVoiceTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songpositionpointer","title":"case songPositionPointer","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songselect","title":"case songSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/timecodequarterframe","title":"case timecodeQuarterFrame","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/tunerequest","title":"case tuneRequest","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/unofficialbusselect","title":"case unofficialBusSelect","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontype","title":"MIDIEvent.SysCommonType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes","title":"MIDIEvent.SysCommonTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex8","title":"case sysEx8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex8","title":"case universalSysEx8","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextype","title":"MIDIEvent.SysExType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextypes","title":"MIDIEvent.SysExTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/activesensing","title":"case activeSensing","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/start","title":"case start","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/systemreset","title":"case systemReset","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/timingclock","title":"case timingClock","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype","title":"MIDIEvent.SysRealTimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes","title":"MIDIEvent.SysRealTimeTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/noop","title":"case noOp","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytype","title":"MIDIEvent.UtilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptype(_:)","title":"case dropType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptype(_:)","title":"case keepType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes","title":"MIDIEvent.UtilityTypes","type":"enum"}],"path":"\/documentation\/midikit\/midievent-event-filtering","title":"Event Filtering","type":"symbol"},{"title":"Raw Data Encoding","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/invalidtype","title":"case invalidType","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/malformed","title":"case malformed","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/rawbytesempty","title":"case rawBytesEmpty","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/parseerror","title":"MIDIEvent.ParseError","type":"enum"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8?, data2: UInt8?)?","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/deviceinquiryrequest(deviceid:)","title":"static func deviceInquiryRequest(deviceID: UInt7) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/deviceinquiryresponse(deviceid:manufacturer:devicefamilycode:devicefamilymembercode:softwarerevision:)","title":"static func deviceInquiryResponse(deviceID: UInt7, manufacturer: MIDIEvent.SysExManufacturer, deviceFamilyCode: UInt14, deviceFamilyMemberCode: UInt14, softwareRevision: (UInt7, UInt7, UInt7, UInt7)) -> MIDIEvent","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent","title":"MIDIEvent","type":"enum"},{"children":[{"title":"Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/chanvoice(_:)","title":"case chanVoice(MIDIEvent.ChanVoiceTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/group(_:)","title":"case group(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/groups(_:)","title":"case groups([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/syscommon(_:)","title":"case sysCommon(MIDIEvent.SysCommonTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysex(_:)","title":"case sysEx(MIDIEvent.SysExTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysrealtime(_:)","title":"case sysRealTime(MIDIEvent.SysRealTimeTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/utility(_:)","title":"case utility(MIDIEvent.UtilityTypes)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/apply(to:)","title":"func apply(to: [MIDIEvent]) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midieventfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midieventfilter","title":"MIDIEventFilter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filter:)","title":"init(filter: MIDIEventFilter)","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filters:)","title":"init(filters: [MIDIEventFilter])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filters","title":"var filters: [MIDIEventFilter]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filter(events:)","title":"func filter(events: [MIDIEvent]) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/==(_:_:)","title":"static func == (MIDIEventFilterGroup, MIDIEventFilterGroup) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midieventfiltergroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midieventfiltergroup\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midieventfiltergroup","title":"MIDIEventFilterGroup","type":"struct"}],"path":"\/documentation\/midikit\/midikitcore-event-filters","title":"Event Filters","type":"symbol"},{"title":"MIDI Note","type":"groupMarker"},{"children":[{"title":"Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/init(_:octave:style:)","title":"init(MIDINote.Name, octave: Int, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-34opv","title":"init(some BinaryInteger, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-51azh","title":"init(String, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-5uo8y","title":"init(UInt7, style: MIDINote.Style)","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(frequency:style:)","title":"init(frequency: Double, style: MIDINote.Style) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.property","title":"var name: MIDINote.Name","type":"property"},{"path":"\/documentation\/midikit\/midinote\/number","title":"var number: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midinote\/octave","title":"var octave: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.property","title":"var style: MIDINote.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/frequencyvalue(tuning:)","title":"func frequencyValue(tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/allnotes(style:)","title":"static func allNotes(style: MIDINote.Style) -> [MIDINote]","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatefrequency(midinote:tuning:)","title":"static func calculateFrequency(midiNote: Int, tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatemidinotenumber(frequency:tuning:)","title":"static func calculateMIDINoteNumber(frequency: Double, tuning: Double) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a_sharp","title":"case A_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c_sharp","title":"case C_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d_sharp","title":"case D_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f_sharp","title":"case F_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g_sharp","title":"case G_sharp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/init(_:)","title":"init?(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/scaleoffset","title":"var scaleOffset: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidental","title":"static let flatAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidentalunicode","title":"static let flatAccidentalUnicode: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidental","title":"static let sharpAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidentalunicode","title":"static let sharpAccidentalUnicode: Character","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum","title":"MIDINote.Name","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/malformednotename","title":"case malformedNoteName","type":"case"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/noteerror","title":"MIDINote.NoteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/cakewalk","title":"case cakewalk","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/roland","title":"case roland","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/yamaha","title":"case yamaha","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/firstoctaveoffset","title":"var firstOctaveOffset: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum","title":"MIDINote.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/'...(_:)-53mgq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'...(_:)-pq8m","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-42s7d","title":"static func < (MIDINote, MIDINote) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-6fg7k","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-9lyjc","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_=(_:_:)-14zjh","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_=(_:_:)-7exwe","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)-78rax","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)-aa41","title":"static func == (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/advanced(by:)","title":"func advanced(by: Int) -> MIDINote","type":"method"},{"path":"\/documentation\/midikit\/midinote\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midinote\/distance(to:)","title":"func distance(to: MIDINote) -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/stride","title":"MIDINote.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/midinote\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote","title":"MIDINote","type":"struct"},{"path":"\/documentation\/midikit\/midinoterange","title":"MIDINoteRange","type":"typealias"},{"path":"\/documentation\/midikit\/midinotenumberrange","title":"MIDINoteNumberRange","type":"typealias"}],"path":"\/documentation\/midikit\/midikitcore-midi-note","title":"MIDI Note","type":"symbol"},{"title":"Core Value Types","type":"groupMarker"},{"children":[{"title":"Core Value Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/init(_:)","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/bytepair\/init(msb:lsb:)","title":"init(msb: UInt8, lsb: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/lsb","title":"let lsb: UInt8","type":"property"},{"path":"\/documentation\/midikit\/bytepair\/msb","title":"let msb: UInt8","type":"property"},{"path":"\/documentation\/midikit\/bytepair\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/bytepair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/bytepair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/bytepair","title":"BytePair","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/uint4\/uint8value","title":"var uInt8Value: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/storage","title":"UInt4.Storage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint4\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-50xsx","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-81zku","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/&=(_:_:)","title":"static func &= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/*(_:_:)","title":"static func * (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/*=(_:_:)","title":"static func *= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/+(_:_:)","title":"static func + (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/-(_:_:)","title":"static func - (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-5dkc8","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-2mpag","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-4u1zz","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-5f3pi","title":"static func % (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-6lumk","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-l0fh","title":"static func \/ (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-uc","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-35dt5","title":"static func \/= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-4cep4","title":"static func |= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-5s08d","title":"static func %= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-6lcln","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-93z0l","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-qk0c","title":"static func ^= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-1b9nv","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-5szbz","title":"static func >> (UInt4, some BinaryInteger) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-74ltf","title":"static func << (UInt4, some BinaryInteger) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-9i5ew","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__=(_:_:)-5nvpf","title":"static func <<= (inout UInt4, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__=(_:_:)-7mqs8","title":"static func >>= (inout UInt4, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/~(_:)","title":"static func ~ (UInt4) -> UInt4","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-25ywl","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-6qfn7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-71a1b","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-82210","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-8d585","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/words-swift.property","title":"var words: UInt4.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-5ujoy","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-zgbf","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint4\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint4\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/words-swift.typealias","title":"UInt4.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint4\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-50xsx","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-81zku","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/&=(_:_:)","title":"static func &= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/*(_:_:)","title":"static func * (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/*=(_:_:)","title":"static func *= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/+(_:_:)","title":"static func + (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/-(_:_:)","title":"static func - (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-5dkc8","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-2mpag","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-4u1zz","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-5f3pi","title":"static func % (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-6lumk","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-l0fh","title":"static func \/ (UInt4, UInt4) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-uc","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-35dt5","title":"static func \/= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-4cep4","title":"static func |= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-5s08d","title":"static func %= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-6lcln","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-93z0l","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-qk0c","title":"static func ^= (inout UInt4, UInt4)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-1b9nv","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-5szbz","title":"static func >> (UInt4, some BinaryInteger) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-74ltf","title":"static func << (UInt4, some BinaryInteger) -> UInt4","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__(_:_:)-9i5ew","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__=(_:_:)-5nvpf","title":"static func <<= (inout UInt4, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/__=(_:_:)-7mqs8","title":"static func >>= (inout UInt4, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint4\/~(_:)","title":"static func ~ (UInt4) -> UInt4","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-25ywl","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-6qfn7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:format:lenient:)-71a1b","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-82210","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint4\/init(_:strategy:)-8d585","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint4\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint4\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/words-swift.property","title":"var words: UInt4.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-5ujoy","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/formatted(_:)-zgbf","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint4\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint4\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint4\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/words-swift.typealias","title":"UInt4.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint4\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/'...(_:)-3gmlj","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'...(_:)-47ci1","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-174zl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-3gda2","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-3ivz9","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_(_:_:)-9ugju","title":"static func < (UInt4, UInt4) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-1aznr","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-9e0rq","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-9qosc","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/_=(_:_:)-whwd","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint4\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint4\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/uint4\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/uint4\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/!=(_:_:)-1art2","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-5iatr","title":"static func == (UInt4, UInt4) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint4\/==(_:_:)-7lajl","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint4\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint4\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/uint4\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bitwidth-swift.type.property","title":"static let bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint4\/max","title":"static var max: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint4\/min","title":"static var min: UInt4","type":"property"}],"path":"\/documentation\/midikit\/uint4\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/init(exactly:)","title":"init?(exactly: some BinaryInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/magnitude-swift.property","title":"var magnitude: UInt4.Storage.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/magnitude-swift.typealias","title":"UInt4.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint4\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint4\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint4\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint4\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint4\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint4","title":"UInt4","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/uint7\/uint8value","title":"var uInt8Value: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/storage","title":"UInt7.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/midpoint","title":"static let midpoint: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint7\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-50wvh","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-81yk8","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/&=(_:_:)","title":"static func &= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/*(_:_:)","title":"static func * (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/*=(_:_:)","title":"static func *= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/+(_:_:)","title":"static func + (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/-(_:_:)","title":"static func - (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-5dlb2","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-2mply","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3y","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-4u1nn","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-6lub2","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-8f2te","title":"static func \/ (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-jnjo","title":"static func % (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-4ebtj","title":"static func \/= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-5d7ah","title":"static func |= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-6lcwn","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-7eu8b","title":"static func %= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-93ysp","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-i86d","title":"static func ^= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-1b8mf","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-4m3xy","title":"static func << (UInt7, some BinaryInteger) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-54m7a","title":"static func >> (UInt7, some BinaryInteger) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-9i5i6","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__=(_:_:)-2n48a","title":"static func >>= (inout UInt7, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__=(_:_:)-6hpxk","title":"static func <<= (inout UInt7, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/~(_:)","title":"static func ~ (UInt7) -> UInt7","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-25z6h","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-6qfc7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-71ayz","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-820we","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-8d4e1","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/words-swift.property","title":"var words: UInt7.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-5ujk4","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-zh8f","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint7\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint7\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/words-swift.typealias","title":"UInt7.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint7\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-50wvh","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-81yk8","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/&=(_:_:)","title":"static func &= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/*(_:_:)","title":"static func * (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/*=(_:_:)","title":"static func *= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/+(_:_:)","title":"static func + (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/-(_:_:)","title":"static func - (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-5dlb2","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-2mply","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3y","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-4u1nn","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-6lub2","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-8f2te","title":"static func \/ (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-jnjo","title":"static func % (UInt7, UInt7) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-4ebtj","title":"static func \/= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-5d7ah","title":"static func |= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-6lcwn","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-7eu8b","title":"static func %= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-93ysp","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-i86d","title":"static func ^= (inout UInt7, UInt7)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-1b8mf","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-4m3xy","title":"static func << (UInt7, some BinaryInteger) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-54m7a","title":"static func >> (UInt7, some BinaryInteger) -> UInt7","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__(_:_:)-9i5i6","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__=(_:_:)-2n48a","title":"static func >>= (inout UInt7, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/__=(_:_:)-6hpxk","title":"static func <<= (inout UInt7, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint7\/~(_:)","title":"static func ~ (UInt7) -> UInt7","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-25z6h","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-6qfc7","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:format:lenient:)-71ayz","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-820we","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint7\/init(_:strategy:)-8d4e1","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint7\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint7\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/words-swift.property","title":"var words: UInt7.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-5ujk4","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/formatted(_:)-zh8f","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint7\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint7\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint7\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/words-swift.typealias","title":"UInt7.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint7\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/'...(_:)-3gmhf","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'...(_:)-47djh","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-174q5","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3gdog","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-3iwwh","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_(_:_:)-72uto","title":"static func < (UInt7, UInt7) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-1azzn","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-9dztc","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-9qpne","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/_=(_:_:)-whdt","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint7\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/uint7\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/uint7\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/!=(_:_:)-1asv0","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-7la2d","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint7\/==(_:_:)-979mj","title":"static func == (UInt7, UInt7) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint7\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/uint7\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bitwidth-swift.type.property","title":"static let bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint7\/max","title":"static var max: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7\/min","title":"static var min: UInt7","type":"property"}],"path":"\/documentation\/midikit\/uint7\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/init(exactly:)","title":"init?(exactly: some BinaryInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/magnitude-swift.property","title":"var magnitude: UInt7.Storage.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/magnitude-swift.typealias","title":"UInt7.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint7\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint7\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint7\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint7\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint7","title":"UInt7","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/init(msb:lsb:)","title":"init(msb: UInt7, lsb: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/lsb","title":"let lsb: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7pair\/msb","title":"let msb: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint7pair\/uint14value","title":"var uInt14Value: UInt14","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint7pair\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint7pair\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint7pair\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint7pair","title":"UInt7Pair","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(bipolarunitinterval:)","title":"init(bipolarUnitInterval: some BinaryFloatingPoint)","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(bytepair:)","title":"init(bytePair: BytePair)","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(uint7pair:)","title":"init(uInt7Pair: UInt7Pair)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"},{"path":"\/documentation\/midikit\/uint14\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/uint14\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/uint14\/midiuint7pair","title":"var midiUInt7Pair: UInt7Pair","type":"property"},{"path":"\/documentation\/midikit\/uint14\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/storage","title":"UInt14.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/midpoint","title":"static let midpoint: UInt14","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint14\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-6wtyt","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-9sd00","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/&=(_:_:)","title":"static func &= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/*(_:_:)","title":"static func * (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/*=(_:_:)","title":"static func *= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/+(_:_:)","title":"static func + (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/-(_:_:)","title":"static func - (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-5hu6w","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-1rgyz","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-255on","title":"static func \/ (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-3c3f4","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-4v0es","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-9e7es","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-e1gu","title":"static func % (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-1nk0l","title":"static func ^= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-3n0re","title":"static func |= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-7z6jb","title":"static func \/= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9ez1g","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9gpbt","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-ig40","title":"static func %= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-4gqet","title":"static func >> (UInt14, some BinaryInteger) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-4rk1i","title":"static func << (UInt14, some BinaryInteger) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-5zqfx","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-9scpu","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__=(_:_:)-29uaq","title":"static func <<= (inout UInt14, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__=(_:_:)-uxb5","title":"static func >>= (inout UInt14, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/~(_:)","title":"static func ~ (UInt14) -> UInt14","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-2mjrl","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-7azly","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-969m8","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-23wgy","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-kt4l","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/words-swift.property","title":"var words: UInt14.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-3hz8m","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-96vnv","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint14\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint14\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/words-swift.typealias","title":"UInt14.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint14\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-6wtyt","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-9sd00","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/&=(_:_:)","title":"static func &= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/*(_:_:)","title":"static func * (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/*=(_:_:)","title":"static func *= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/+(_:_:)","title":"static func + (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/-(_:_:)","title":"static func - (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-5hu6w","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-1rgyz","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-255on","title":"static func \/ (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-3c3f4","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-4v0es","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-9e7es","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-e1gu","title":"static func % (UInt14, UInt14) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-1nk0l","title":"static func ^= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-3n0re","title":"static func |= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-7z6jb","title":"static func \/= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9ez1g","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9gpbt","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-ig40","title":"static func %= (inout UInt14, UInt14)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-4gqet","title":"static func >> (UInt14, some BinaryInteger) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-4rk1i","title":"static func << (UInt14, some BinaryInteger) -> UInt14","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-5zqfx","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__(_:_:)-9scpu","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__=(_:_:)-29uaq","title":"static func <<= (inout UInt14, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/__=(_:_:)-uxb5","title":"static func >>= (inout UInt14, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint14\/~(_:)","title":"static func ~ (UInt14) -> UInt14","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-2mjrl","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-7azly","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:format:lenient:)-969m8","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-23wgy","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint14\/init(_:strategy:)-kt4l","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint14\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint14\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/words-swift.property","title":"var words: UInt14.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-3hz8m","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/formatted(_:)-96vnv","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint14\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint14\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint14\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/words-swift.typealias","title":"UInt14.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint14\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/'...(_:)-2omat","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'...(_:)-4o9jq","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-1r9yd","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-22rnv","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-3ln1a","title":"static func < (UInt14, UInt14) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_(_:_:)-9wcf0","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-1nm4d","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-2o1kf","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-50vz7","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/_=(_:_:)-9oqjb","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint14\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint14\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/uint14\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/uint14\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/!=(_:_:)-91t50","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-3r0pj","title":"static func == (UInt14, UInt14) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint14\/==(_:_:)-4eqc3","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint14\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint14\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/uint14\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bitwidth-swift.type.property","title":"static let bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint14\/max","title":"static var max: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint14\/min","title":"static var min: UInt14","type":"property"}],"path":"\/documentation\/midikit\/uint14\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/init(exactly:)","title":"init?(exactly: some BinaryInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/magnitude-swift.property","title":"var magnitude: UInt14.Storage.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/magnitude-swift.typealias","title":"UInt14.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint14\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint14\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint14\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint14\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint14\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint14","title":"UInt14","type":"struct"},{"title":"Additional Value Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/init(_:)-1ygvi","title":"init(some SignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(_:)-8nfhw","title":"init(some UnsignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(bitpattern:)","title":"init(bitPattern: some UnsignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(exactly:)-5ki0p","title":"init?(exactly: some UnsignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(exactly:)-ec4i","title":"init?(exactly: some SignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-6w3ge","title":"init(truncatingIfNecessary: some SignedInteger)","type":"init"},{"path":"\/documentation\/midikit\/int7\/init(truncatingifnecessary:)-797dv","title":"init(truncatingIfNecessary: some UnsignedInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/binarystring","title":"var binaryString: String","type":"property"},{"path":"\/documentation\/midikit\/int7\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/midikit\/int7\/rawbyte","title":"var rawByte: UInt8","type":"property"},{"path":"\/documentation\/midikit\/int7\/rawuint7byte","title":"var rawUInt7Byte: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/'...(_:)-50atn","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/int7\/'...(_:)-9v3mx","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/int7\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/int7\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/int7\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/int7\/_(_:_:)-1p5a","title":"static func < (Int7, Int7) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/int7\/_(_:_:)-7pl7r","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/int7\/_=(_:_:)-5aakp","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/int7\/_=(_:_:)-75hee","title":"static func <= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/clamped(to:)-1eg4g","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/int7\/clamped(to:)-33072","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/int7\/clamped(to:)-uplg","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/int7\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/int7\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/int7\/==(_:_:)","title":"static func == (Int7, Int7) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/int7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/init(integerliteral:)","title":"init(integerLiteral: Int7.IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/integerliteraltype","title":"Int7.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/midikit\/int7\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/int7\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/int7\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/int7","title":"Int7","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/uint9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/storage","title":"UInt9.Storage","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint9\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-50w79","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-822v4","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/&=(_:_:)","title":"static func &= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/*(_:_:)","title":"static func * (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/*=(_:_:)","title":"static func *= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/+(_:_:)","title":"static func + (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/-(_:_:)","title":"static func - (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-5doey","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-2mq8a","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-4hpjv","title":"static func \/ (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-4tyl3","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-6lw6i","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-700zt","title":"static func % (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-9zkm1","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-2volh","title":"static func |= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-3l556","title":"static func %= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-5kfty","title":"static func \/= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-6l8jv","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-940o1","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9jmpc","title":"static func ^= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-1b803","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-7k6mm","title":"static func >> (UInt9, some BinaryInteger) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-80zhr","title":"static func << (UInt9, some BinaryInteger) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-9i8lm","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__=(_:_:)-6h18i","title":"static func <<= (inout UInt9, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__=(_:_:)-8egex","title":"static func >>= (inout UInt9, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/~(_:)","title":"static func ~ (UInt9) -> UInt9","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-25zqp","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-6qeq3","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-71bl3","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-822r6","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-8d681","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/words-swift.property","title":"var words: UInt9.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-5unwk","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-zkcb","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint9\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint9\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/words-swift.typealias","title":"UInt9.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint9\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-50w79","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-822v4","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/&=(_:_:)","title":"static func &= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/*(_:_:)","title":"static func * (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/*=(_:_:)","title":"static func *= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/+(_:_:)","title":"static func + (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/-(_:_:)","title":"static func - (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-5doey","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-2mq8a","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-4hpjv","title":"static func \/ (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-4tyl3","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-6lw6i","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-700zt","title":"static func % (UInt9, UInt9) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-9zkm1","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-2volh","title":"static func |= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-3l556","title":"static func %= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-5kfty","title":"static func \/= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-6l8jv","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-940o1","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9jmpc","title":"static func ^= (inout UInt9, UInt9)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-1b803","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-7k6mm","title":"static func >> (UInt9, some BinaryInteger) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-80zhr","title":"static func << (UInt9, some BinaryInteger) -> UInt9","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__(_:_:)-9i8lm","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__=(_:_:)-6h18i","title":"static func <<= (inout UInt9, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/__=(_:_:)-8egex","title":"static func >>= (inout UInt9, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint9\/~(_:)","title":"static func ~ (UInt9) -> UInt9","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-25zqp","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-6qeq3","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:format:lenient:)-71bl3","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-822r6","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint9\/init(_:strategy:)-8d681","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint9\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint9\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/words-swift.property","title":"var words: UInt9.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-5unwk","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/formatted(_:)-zkcb","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint9\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint9\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint9\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/words-swift.typealias","title":"UInt9.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint9\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/'...(_:)-3glvj","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'...(_:)-47gjx","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-176lp","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-2kgez","title":"static func < (UInt9, UInt9) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-3gc0o","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_(_:_:)-3ixkp","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-1b33z","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9dz7c","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-9ql9i","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/_=(_:_:)-wel5","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint9\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint9\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/uint9\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/uint9\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/!=(_:_:)-1aoh8","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-7l9hx","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint9\/==(_:_:)-8ilzs","title":"static func == (UInt9, UInt9) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint9\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/uint9\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bitwidth-swift.type.property","title":"static let bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint9\/max","title":"static var max: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint9\/min","title":"static var min: UInt9","type":"property"}],"path":"\/documentation\/midikit\/uint9\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/init(exactly:)","title":"init?(exactly: some BinaryInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/magnitude-swift.property","title":"var magnitude: UInt9.Storage.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/magnitude-swift.typealias","title":"UInt9.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint9\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint9\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint9\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint9\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint9\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint9","title":"UInt9","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/uint25\/uint32value","title":"var uInt32Value: UInt32","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/storage","title":"UInt25.Storage","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/midpoint","title":"static let midpoint: UInt25","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/+=(_:_:)","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/-=(_:_:)","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/zero","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/midikit\/uint25\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-6me76","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-9hnah","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/&=(_:_:)","title":"static func &= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/*(_:_:)","title":"static func * (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/*=(_:_:)","title":"static func *= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/+(_:_:)","title":"static func + (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/-(_:_:)","title":"static func - (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-5sjyp","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-1gr9s","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-37uj9","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-4y0c1","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-7rmps","title":"static func % (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-8hjzj","title":"static func \/ (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-9b281","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-2kpb7","title":"static func ^= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-31i1e","title":"static func %= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-5ekcj","title":"static func |= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-8bfxs","title":"static func \/= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9btup","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9jzq6","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-5uvlt","title":"static func >> (UInt25, some BinaryInteger) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-62vlu","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-96psw","title":"static func << (UInt25, some BinaryInteger) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-9hn2z","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__=(_:_:)-4u9hb","title":"static func <<= (inout UInt25, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__=(_:_:)-5leu","title":"static func >>= (inout UInt25, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/~(_:)","title":"static func ~ (UInt25) -> UInt25","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-2j9ku","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-7dzib","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-9fvbd","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-1t70r","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-a3lm","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/words-swift.property","title":"var words: UInt25.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-3dv23","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-9hl40","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint25\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint25\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/words-swift.typealias","title":"UInt25.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint25\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-6me76","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-9hnah","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/&=(_:_:)","title":"static func &= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/*(_:_:)","title":"static func * (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/*=(_:_:)","title":"static func *= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/+(_:_:)","title":"static func + (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/-(_:_:)","title":"static func - (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-5sjyp","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-1gr9s","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-37uj9","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-4y0c1","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-7rmps","title":"static func % (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-8hjzj","title":"static func \/ (UInt25, UInt25) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-9b281","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-2kpb7","title":"static func ^= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-31i1e","title":"static func %= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-5ekcj","title":"static func |= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-8bfxs","title":"static func \/= (inout UInt25, UInt25)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9btup","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9jzq6","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-5uvlt","title":"static func >> (UInt25, some BinaryInteger) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-62vlu","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-96psw","title":"static func << (UInt25, some BinaryInteger) -> UInt25","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__(_:_:)-9hn2z","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__=(_:_:)-4u9hb","title":"static func <<= (inout UInt25, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/__=(_:_:)-5leu","title":"static func >>= (inout UInt25, some BinaryInteger)","type":"op"},{"path":"\/documentation\/midikit\/uint25\/~(_:)","title":"static func ~ (UInt25) -> UInt25","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-2j9ku","title":"init(String, format: IntegerFormatStyle<Self>.Currency, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-7dzib","title":"init(String, format: IntegerFormatStyle<Self>.Percent, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:format:lenient:)-9fvbd","title":"init(String, format: IntegerFormatStyle<Self>, lenient: Bool) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-1t70r","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"path":"\/documentation\/midikit\/uint25\/init(_:strategy:)-a3lm","title":"init<S>(S.ParseInput, strategy: S) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/uint25\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"},{"path":"\/documentation\/midikit\/uint25\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/words-swift.property","title":"var words: UInt25.Storage.Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/binarystring(padto:prefix:)","title":"func binaryString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/binarystring(prefix:)","title":"func binaryString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-3dv23","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/formatted(_:)-9hl40","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(padto:prefix:)","title":"func hexString(padTo: Int, prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/hexstring(prefix:)","title":"func hexString(prefix: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/uint25\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/uint25\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)","type":"method"},{"path":"\/documentation\/midikit\/uint25\/signum()","title":"func signum() -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/string(paddedto:)","title":"func string(paddedTo: Int) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/words-swift.typealias","title":"UInt25.Words","type":"typealias"}],"path":"\/documentation\/midikit\/uint25\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/'...(_:)-2y81e","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'...(_:)-4kzgb","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-21zmi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-25wug","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-76i3g","title":"static func < (UInt25, UInt25) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_(_:_:)-9s3bt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-1kgxm","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-2r6r8","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-5bbig","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/_=(_:_:)-9e11o","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint25\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/uint25\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/uint25\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/uint25\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/!=(_:_:)-9c8rx","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-4bg5c","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/uint25\/==(_:_:)-7rkq2","title":"static func == (UInt25, UInt25) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/uint25\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/uint25\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/uint25\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bitwidth-swift.type.property","title":"static let bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/uint25\/max","title":"static var max: UInt25","type":"property"},{"path":"\/documentation\/midikit\/uint25\/min","title":"static var min: UInt25","type":"property"}],"path":"\/documentation\/midikit\/uint25\/midiunsignedinteger-implementations","title":"MIDIUnsignedInteger Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/init(exactly:)","title":"init?(exactly: some BinaryInteger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/magnitude-swift.property","title":"var magnitude: UInt25.Storage.Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/magnitude-swift.typealias","title":"UInt25.Magnitude","type":"typealias"}],"path":"\/documentation\/midikit\/uint25\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/uint25\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/uint25\/strideable-implementations","title":"Strideable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/bit(_:)","title":"func bit(Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/uint25\/issigned","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/midikit\/uint25\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/uint25","title":"UInt25","type":"struct"},{"path":"\/documentation\/midikit\/umpword","title":"UMPWord","type":"typealias"},{"title":"Base MIDI Event Value Types","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice7Bit16BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/validated","title":"MIDIEvent.ChanVoice7Bit16BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi1(_:)","title":"case midi1(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi2(_:)","title":"case midi2(UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi1value","title":"var midi1Value: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/midi2value","title":"var midi2Value: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice7Bit16BitValue, MIDIEvent.ChanVoice7Bit16BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit16bitvalue","title":"MIDIEvent.ChanVoice7Bit16BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice7Bit32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/validated","title":"MIDIEvent.ChanVoice7Bit32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi1(_:)","title":"case midi1(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi1value","title":"var midi1Value: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice7Bit32BitValue, MIDIEvent.ChanVoice7Bit32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice7bit32bitvalue","title":"MIDIEvent.ChanVoice7Bit32BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice14Bit32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/validated","title":"MIDIEvent.ChanVoice14Bit32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitinterval(_:)","title":"case bipolarUnitInterval(Double)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi1(_:)","title":"case midi1(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi1value","title":"var midi1Value: UInt14","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice14Bit32BitValue, MIDIEvent.ChanVoice14Bit32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice14bit32bitvalue","title":"MIDIEvent.ChanVoice14Bit32BitValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/init(wrappedvalue:)","title":"init(wrappedValue: MIDIEvent.ChanVoice32BitValue.Validated.Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/wrappedvalue","title":"var wrappedValue: MIDIEvent.ChanVoice32BitValue.Validated.Value","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/value","title":"MIDIEvent.ChanVoice32BitValue.Validated.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/validated","title":"MIDIEvent.ChanVoice32BitValue.Validated","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi2(_:)","title":"case midi2(UInt32)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/unitinterval(_:)","title":"case unitInterval(Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1_14bitvalue","title":"var midi1_14BitValue: UInt14","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1_7bitvalue","title":"var midi1_7BitValue: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi2value","title":"var midi2Value: UInt32","type":"property"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/unitintervalvalue","title":"var unitIntervalValue: Double","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1(fourteenbit:)","title":"static func midi1(fourteenBit: UInt14) -> MIDIEvent.ChanVoice32BitValue","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/midi1(sevenbit:)","title":"static func midi1(sevenBit: UInt7) -> MIDIEvent.ChanVoice32BitValue","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/==(_:_:)","title":"static func == (MIDIEvent.ChanVoice32BitValue, MIDIEvent.ChanVoice32BitValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoice32bitvalue","title":"MIDIEvent.ChanVoice32BitValue","type":"enum"}],"path":"\/documentation\/midikit\/midikitcore-value-types","title":"MIDIKit Value Types","type":"symbol"},{"title":"Additional Guides","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi-show-control","title":"MIDI Show Control","type":"article"},{"title":"MIDIKitIO-Interop Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDI Packets and Parsing","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/midi1_0","title":"case midi1_0","type":"case"},{"path":"\/documentation\/midikit\/midiprotocolversion\/midi2_0","title":"case midi2_0","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiprotocolversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiprotocolversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiprotocolversion","title":"MIDIProtocolVersion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data128bit","title":"case data128bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data64bit","title":"case data64bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi1channelvoice","title":"case midi1ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi2channelvoice","title":"case midi2ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/systemrealtimeandcommon","title":"case systemRealTimeAndCommon","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/utility","title":"case utility","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/wordlength","title":"var wordLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmessagetype","title":"MIDIUMPMessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/start","title":"case start","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield","title":"MIDIUMPSysExStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/noop","title":"case noOp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield","title":"MIDIUMPUtilityStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/header","title":"case header","type":"case"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/payload","title":"case payload","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield","title":"MIDIUMPMixedDataSetStatusField","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumber\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midiparameternumber\/parameterbytes","title":"var parameterBytes: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumber\/midi1events(channel:group:)","title":"func midi1Events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midiparameternumber\/midi1rawbytes(channel:group:)","title":"func midi1RawBytes(channel: UInt4, group: UInt4) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midiparameternumber\/umprawwords(protocol:change:channel:group:)","title":"func umpRawWords(protocol: MIDIProtocolVersion, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [[UMPWord]]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumber\/controllers","title":"static var controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"path":"\/documentation\/midikit\/midiparameternumber\/type","title":"static var type: MIDIParameterNumberType","type":"property"}],"path":"\/documentation\/midikit\/midiparameternumber","title":"MIDIParameterNumber","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumberevent\/p","title":"P","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumberevent\/change","title":"var change: MIDI2ParameterNumberChange","type":"property"},{"path":"\/documentation\/midikit\/midiparameternumberevent\/parameter","title":"var parameter: Self.P","type":"property"}],"path":"\/documentation\/midikit\/midiparameternumberevent","title":"MIDIParameterNumberEvent","type":"protocol"},{"title":"Value Type Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/storage","title":"Storage","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/intvalue","title":"var intValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/bitwidth","title":"static var bitWidth: Int","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/max","title":"static var max: Self","type":"property"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/min","title":"static var min: Self","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/init(integerliteral:)","title":"init(integerLiteral: Self.Storage)","type":"init"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/advanced(by:)","title":"func advanced(by: Self.Stride) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midiunsignedinteger\/distance(to:)","title":"func distance(to: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/midikit\/midiunsignedinteger\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiunsignedinteger","title":"MIDIUnsignedInteger","type":"protocol"},{"title":"Errors and Status","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/connectionerror(_:)","title":"case connectionError(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/internalinconsistency(_:)","title":"case internalInconsistency(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/notsupported(_:)","title":"case notSupported(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/osstatus(_:)-swift.enum.case","title":"case osStatus(MIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/readerror(_:)","title":"case readError(String)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/osstatus(_:)-swift.type.method","title":"static func osStatus(CoreMIDIOSStatus) -> MIDIIOError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiioerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiioerror","title":"MIDIIOError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/idnotunique","title":"case idNotUnique","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidclient","title":"case invalidClient","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidport","title":"case invalidPort","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/ioerror","title":"case ioError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/messagesenderr","title":"case messageSendErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/noconnection","title":"case noConnection","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/nocurrentsetup","title":"case noCurrentSetup","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/notpermitted","title":"case notPermitted","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/objectnotfound","title":"case objectNotFound","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/other(_:)","title":"case other(CoreMIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/serverstarterr","title":"case serverStartErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/setupformaterr","title":"case setupFormatErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownendpoint","title":"case unknownEndpoint","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownerror","title":"case unknownError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownproperty","title":"case unknownProperty","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongendpointtype","title":"case wrongEndpointType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongpropertytype","title":"case wrongPropertyType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongthread","title":"case wrongThread","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/init(rawvalue:)","title":"init(rawValue: CoreMIDIOSStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/rawvalue","title":"var rawValue: CoreMIDIOSStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiosstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiosstatus\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midiosstatus\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiosstatus","title":"MIDIOSStatus","type":"enum"},{"path":"\/documentation\/midikit\/coremidiosstatus","title":"CoreMIDIOSStatus","type":"typealias"},{"title":"Utilities","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/threadsafeaccess\/init(wrappedvalue:)","title":"init(wrappedValue: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/threadsafeaccess\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/midikit\/threadsafeaccess","title":"ThreadSafeAccess","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumberutils\/initfrom(midi1smfrawbytesstream:expectedtype:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol, expectedType: MIDIParameterNumberType) throws -> (param: UInt7Pair, dataMSB: UInt7, dataLSB: UInt7?, channel: UInt4, byteLength: Int)","type":"method"},{"path":"\/documentation\/midikit\/midiparameternumberutils\/typeandchange(fromumpstatusnibble:)","title":"static func typeAndChange(fromUMPStatusNibble: UInt4) -> (type: MIDIParameterNumberType, change: MIDI2ParameterNumberChange)?","type":"method"},{"path":"\/documentation\/midikit\/midiparameternumberutils\/umpstatusnibble(type:change:)","title":"static func umpStatusNibble(type: MIDIParameterNumberType, change: MIDI2ParameterNumberChange) -> UInt4","type":"method"}],"path":"\/documentation\/midikit\/midiparameternumberutils","title":"MIDIParameterNumberUtils","type":"enum"}],"path":"\/documentation\/midikit\/midikitcore-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitcore","title":"MIDIKitCore","type":"symbol"},{"children":[{"title":"Manager","type":"groupMarker"},{"children":[{"title":"Instance the Manager","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/init(clientname:model:manufacturer:notificationhandler:)","title":"init(clientName: String, model: String, manufacturer: String, notificationHandler: MIDIManager.NotificationHandler?)","type":"init"},{"title":"Start the Manager","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/start()","title":"func start() throws","type":"method"},{"title":"Create Ports","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinput(name:tag:uniqueid:receiver:)","title":"func addInput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutput(name:tag:uniqueid:)","title":"func addOutput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence) throws","type":"method"},{"title":"Create Managed Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(to:tag:filter:receiver:)","title":"func addInputConnection(to: MIDIInputConnectionMode, tag: String, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(to:tag:filter:)","title":"func addOutputConnection(to: MIDIOutputConnectionMode, tag: String, filter: MIDIEndpointFilter) throws","type":"method"},{"title":"Accessing Created Ports and Managed Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedinputs","title":"var managedInputs: [String : MIDIInput]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedoutputs","title":"var managedOutputs: [String : MIDIOutput]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedinputconnections","title":"var managedInputConnections: [String : MIDIInputConnection]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/managedoutputconnections","title":"var managedOutputConnections: [String : MIDIOutputConnection]","type":"property"},{"title":"Removing Ports and Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/remove(_:_:)","title":"func remove(MIDIManager.ManagedType, MIDIManager.TagSelection)","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeall()","title":"func removeAll()","type":"method"},{"title":"Thru Connections","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addthruconnection(outputs:inputs:tag:lifecycle:params:)","title":"func addThruConnection(outputs: [MIDIOutputEndpoint], inputs: [MIDIInputEndpoint], tag: String, lifecycle: MIDIThruConnection.Lifecycle, params: MIDIThruConnection.Parameters) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/managedthruconnections","title":"var managedThruConnections: [String : MIDIThruConnection]","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/unmanagedpersistentthruconnections(ownerid:)","title":"func unmanagedPersistentThruConnections(ownerID: String) throws -> [CoreMIDIThruConnectionRef]","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeallunmanagedpersistentthruconnections(ownerid:)","title":"func removeAllUnmanagedPersistentThruConnections(ownerID: String) -> Int","type":"method"},{"title":"Accessing Endpoints in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/devices","title":"var devices: MIDIDevices","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/endpoints","title":"var endpoints: MIDIEndpoints","type":"property"},{"title":"Core MIDI System Notification Handler","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/notificationhandler-swift.property","title":"var notificationHandler: MIDIManager.NotificationHandler?","type":"property"},{"title":"Core MIDI","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/clientname","title":"var clientName: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/manufacturer","title":"var manufacturer: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/model","title":"var model: String","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/coremidiclientref","title":"var coreMIDIClientRef: CoreMIDIClientRef","type":"property"},{"path":"\/documentation\/midikit\/midimanager\/preferredapi","title":"var preferredAPI: CoreMIDIAPIVersion","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-100f9","title":"func addInputConnection(toOutputs: [MIDIOutputEndpoint], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-5r30y","title":"func addInputConnection(toOutputs: Set<MIDIEndpointIdentity>, tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(tooutputs:tag:mode:filter:receiver:)-5xxyz","title":"func addInputConnection(toOutputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-1pqwx","title":"func addOutputConnection(toInputs: [MIDIInputEndpoint], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-3a56s","title":"func addOutputConnection(toInputs: [MIDIEndpointIdentity], tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(toinputs:tag:mode:filter:)-3mw","title":"func addOutputConnection(toInputs: Set<MIDIEndpointIdentity>, tag: String, mode: MIDIConnectionMode, filter: MIDIEndpointFilter) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/notificationhandler-swift.typealias","title":"MIDIManager.NotificationHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/inputconnection","title":"case inputConnection","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/nonpersistentthruconnection","title":"case nonPersistentThruConnection","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/output","title":"case output","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/outputconnection","title":"case outputConnection","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/managedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midimanager\/managedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midimanager\/managedtype","title":"MIDIManager.ManagedType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/all","title":"case all","type":"case"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/withtag(_:)","title":"case withTag(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/tagselection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midimanager\/tagselection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midimanager\/tagselection","title":"MIDIManager.TagSelection","type":"enum"}],"path":"\/documentation\/midikit\/midimanager","title":"MIDIManager","type":"class"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinput(name:tag:uniqueid:receiver:)","title":"func addInput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutput(name:tag:uniqueid:)","title":"func addOutput(name: String, tag: String, uniqueID: MIDIIdentifierPersistence) throws","type":"method"}],"path":"\/documentation\/midikit\/midimanager-creating-ports","title":"Creating Ports","type":"symbol"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/addinputconnection(to:tag:filter:receiver:)","title":"func addInputConnection(to: MIDIInputConnectionMode, tag: String, filter: MIDIEndpointFilter, receiver: MIDIReceiver) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addoutputconnection(to:tag:filter:)","title":"func addOutputConnection(to: MIDIOutputConnectionMode, tag: String, filter: MIDIEndpointFilter) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/addthruconnection(outputs:inputs:tag:lifecycle:params:)","title":"func addThruConnection(outputs: [MIDIOutputEndpoint], inputs: [MIDIInputEndpoint], tag: String, lifecycle: MIDIThruConnection.Lifecycle, params: MIDIThruConnection.Parameters) throws","type":"method"}],"path":"\/documentation\/midikit\/midimanager-creating-connections","title":"Creating Connections","type":"symbol"},{"children":[{"title":"MIDIManager Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/remove(_:_:)","title":"func remove(MIDIManager.ManagedType, MIDIManager.TagSelection)","type":"method"},{"path":"\/documentation\/midikit\/midimanager\/removeall()","title":"func removeAll()","type":"method"}],"path":"\/documentation\/midikit\/midimanager-removing-ports-and-connections","title":"Removing Ports and Connections","type":"symbol"},{"children":[{"title":"MIDIManager Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/notificationhandler-swift.property","title":"var notificationHandler: MIDIManager.NotificationHandler?","type":"property"},{"title":"Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/added(object:parent:)","title":"case added(object: AnyMIDIIOObject, parent: AnyMIDIIOObject?)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/ioerror(device:error:)","title":"case ioError(device: MIDIDevice, error: MIDIIOError)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/other(messageidrawvalue:)","title":"case other(messageIDRawValue: Int32)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/propertychanged(property:forobject:)","title":"case propertyChanged(property: AnyMIDIIOObject.Property, forObject: AnyMIDIIOObject)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/removed(object:parent:)","title":"case removed(object: AnyMIDIIOObject, parent: AnyMIDIIOObject?)","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/serialportownerchanged","title":"case serialPortOwnerChanged","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/setupchanged","title":"case setupChanged","type":"case"},{"path":"\/documentation\/midikit\/midiionotification\/thruconnectionchanged","title":"case thruConnectionChanged","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/added(parent:child:)","title":"static func added(parent: AnyMIDIIOObject?, child: AnyMIDIIOObject) -> MIDIIONotification","type":"method"},{"path":"\/documentation\/midikit\/midiionotification\/propertychanged(object:property:)","title":"static func propertyChanged(object: AnyMIDIIOObject, property: AnyMIDIIOObject.Property) -> MIDIIONotification","type":"method"},{"path":"\/documentation\/midikit\/midiionotification\/removed(parent:child:)","title":"static func removed(parent: AnyMIDIIOObject?, child: AnyMIDIIOObject) -> MIDIIONotification","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiionotification\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionotification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiionotification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiionotification","title":"MIDIIONotification","type":"enum"}],"path":"\/documentation\/midikit\/midimanager-receiving-notifications","title":"Receiving Notifications","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/observablemidimanager\/init(clientname:model:manufacturer:notificationhandler:)","title":"init(clientName: String, model: String, manufacturer: String, notificationHandler: ObservableMIDIManager.ObservableNotificationHandler?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/observablemidimanager\/updateobjectscache()","title":"func updateObjectsCache()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/observablemidimanager\/observablenotificationhandler","title":"ObservableMIDIManager.ObservableNotificationHandler","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/observablemidimanager\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/midikit\/observablemidimanager\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/observablemidimanager","title":"ObservableMIDIManager","type":"class"},{"path":"\/documentation\/midikit\/midikitio-combine-and-swiftui-features","title":"Combine and SwiftUI Features","type":"article"},{"title":"Devices & Entities","type":"groupMarker"},{"children":[{"title":"Devices in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/devices","title":"var devices: MIDIDevices","type":"property"},{"path":"\/documentation\/midikit\/observablemidimanager\/observabledevices","title":"var observableDevices: MIDIDevices","type":"property"},{"title":"Device and Entity Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIDeviceRef","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/entities","title":"var entities: [MIDIEntity]","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/mididevice\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mididevice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/id-swift.property","title":"var id: MIDIDevice.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/id-swift.typealias","title":"MIDIDevice.ID","type":"typealias"}],"path":"\/documentation\/midikit\/mididevice\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/displayname","title":"var displayName: String?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/mididevice\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevice\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/mididevice\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/mididevice\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mididevice","title":"MIDIDevice","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEntityRef","type":"property"},{"path":"\/documentation\/midikit\/midientity\/device","title":"var device: MIDIDevice?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midientity\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midientity\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midientity\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midientity\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midientity\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midientity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/id-swift.property","title":"var id: MIDIEntity.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/id-swift.typealias","title":"MIDIEntity.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midientity\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/midientity\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/displayname","title":"var displayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midientity\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midientity\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midientity\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midientity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/midikit\/midientity\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midientity\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/midientity\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/midientity\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midientity","title":"MIDIEntity","type":"struct"}],"path":"\/documentation\/midikit\/midikitio-devices","title":"Working with Devices","type":"symbol"},{"title":"Endpoints","type":"groupMarker"},{"children":[{"title":"Endpoints in the System","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanager\/endpoints","title":"var endpoints: MIDIEndpoints","type":"property"},{"path":"\/documentation\/midikit\/observablemidimanager\/observableendpoints","title":"var observableEndpoints: MIDIEndpoints","type":"property"},{"title":"Endpoint Identification","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/displayname(_:)","title":"case displayName(String)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/uniqueid(_:)","title":"case uniqueID(MIDIIdentifier)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointidentity\/uniqueidwithfallback(id:fallbackdisplayname:)","title":"case uniqueIDWithFallback(id: MIDIIdentifier, fallbackDisplayName: String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/locate(in:)","title":"func locate<T>(in: [T]) -> T?","type":"method"},{"path":"\/documentation\/midikit\/midiendpointidentity\/matches(endpoint:)","title":"func matches(endpoint: some MIDIEndpoint) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/endpoint(_:)","title":"static func endpoint(some MIDIEndpoint) -> MIDIEndpointIdentity","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiendpointidentity\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midiendpointidentity\/==(_:_:)","title":"static func == (MIDIEndpointIdentity, MIDIEndpointIdentity) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointidentity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointidentity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiendpointidentity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointidentity","title":"MIDIEndpointIdentity","type":"enum"},{"title":"Unique ID","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifier","title":"MIDIIdentifier","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/adhoc","title":"case adHoc","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/managedstorage(readhandler:storehandler:)","title":"case managedStorage(readHandler: () -> MIDIIdentifier?, storeHandler: (MIDIIdentifier?) -> Void)","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/unmanaged(_:)","title":"case unmanaged(MIDIIdentifier)","type":"case"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/userdefaultsmanaged(key:suite:)","title":"case userDefaultsManaged(key: String, suite: UserDefaults)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/readid()","title":"func readID() -> MIDIIdentifier?","type":"method"},{"path":"\/documentation\/midikit\/midiidentifierpersistence\/writeid(_:)","title":"func writeID(MIDIIdentifier?)","type":"method"}],"path":"\/documentation\/midikit\/midiidentifierpersistence","title":"MIDIIdentifierPersistence","type":"enum"},{"title":"Endpoint Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiinputendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiinputendpoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/==(_:_:)-3yvh6","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/id-swift.typealias","title":"MIDIInputEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midiinputendpoint\/midiendpoint-implementations","title":"MIDIEndpoint Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/==(_:_:)-894is","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputendpoint\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/midiinputendpoint\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/midiinputendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputendpoint","title":"MIDIInputEndpoint","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/objecttype","title":"let objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midioutputendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midioutputendpoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/==(_:_:)-4uw01","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/id-swift.typealias","title":"MIDIOutputEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midioutputendpoint\/midiendpoint-implementations","title":"MIDIEndpoint Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/==(_:_:)-48jxv","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputendpoint\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/midioutputendpoint\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/midioutputendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputendpoint","title":"MIDIOutputEndpoint","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/coremidiobjectref","title":"let coreMIDIObjectRef: CoreMIDIEndpointRef","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/endpointtype","title":"let endpointType: MIDIEndpointType","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/uniqueid","title":"let uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/anymidiendpoint\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/anymidiendpoint\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/==(_:_:)-8pkle","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/id-swift.typealias","title":"AnyMIDIEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/anymidiendpoint\/midiendpoint-implementations","title":"MIDIEndpoint Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/==(_:_:)-13g7h","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiendpoint\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/anymidiendpoint\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/anymidiendpoint\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiendpoint","title":"AnyMIDIEndpoint","type":"struct"},{"title":"Endpoint Filtering","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-12dk0","title":"init(owned: Bool, criteria: Set<MIDIEndpointIdentity>)","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-49w35","title":"init(owned: Bool, criteria: [some MIDIEndpoint & Hashable])","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-4bmfp","title":"init(owned: Bool, criteria: [MIDIEndpointIdentity])","type":"init"},{"path":"\/documentation\/midikit\/midiendpointfilter\/init(owned:criteria:)-6m7cj","title":"init(owned: Bool, criteria: Set<some MIDIEndpoint & Hashable>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/criteria","title":"var criteria: Set<MIDIEndpointIdentity>","type":"property"},{"path":"\/documentation\/midikit\/midiendpointfilter\/owned","title":"var owned: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/apply(to:mask:in:)","title":"func apply<Element>(to: some Collection, mask: MIDIEndpointFilterMask, in: MIDIManager) -> [Element]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/default()","title":"static func `default`() -> MIDIEndpointFilter","type":"method"},{"path":"\/documentation\/midikit\/midiendpointfilter\/owned()","title":"static func owned() -> MIDIEndpointFilter","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointfilter","title":"MIDIEndpointFilter","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfiltermask\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midiendpointfiltermask\/only","title":"case only","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointfiltermask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointfiltermask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointfiltermask","title":"MIDIEndpointFilterMask","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointmaskedfilter\/drop(_:)","title":"case drop(MIDIEndpointFilter)","type":"case"},{"path":"\/documentation\/midikit\/midiendpointmaskedfilter\/only(_:)","title":"case only(MIDIEndpointFilter)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointmaskedfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointmaskedfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointmaskedfilter","title":"MIDIEndpointMaskedFilter","type":"enum"}],"path":"\/documentation\/midikit\/midikitio-endpoints","title":"Working With Endpoints","type":"symbol"},{"title":"Events","type":"groupMarker"},{"children":[{"title":"Send Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanagedsendsmessages\/send(event:)","title":"func send(event: MIDIEvent) throws","type":"method"},{"path":"\/documentation\/midikit\/midimanagedsendsmessages\/send(events:)","title":"func send(events: [MIDIEvent]) throws","type":"method"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-sending-midi-events","title":"Sending MIDI Events","type":"symbol"},{"children":[{"title":"Receive Handlers","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/events(options:_:)-swift.enum.case","title":"case events(options: MIDIReceiverOptions, MIDIReceiver.EventsHandler)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/eventslogging(options:_:)","title":"case eventsLogging(options: MIDIReceiverOptions, MIDIReceiver.EventsLoggingHandler?)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/group(_:)","title":"case group([MIDIReceiver])","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/rawdata(_:)","title":"case rawData(MIDIReceiver.RawDataHandler)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatalogging(_:)","title":"case rawDataLogging(MIDIReceiver.RawDataLoggingHandler?)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/strong(_:options:)","title":"case strong(any ReceivesMIDIEvents, options: MIDIReceiverOptions)","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/weak(_:options:)","title":"case weak(any ReceivesMIDIEvents, options: MIDIReceiverOptions)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/create()","title":"func create() -> any MIDIReceiverProtocol","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/eventshandler","title":"MIDIReceiver.EventsHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/eventslogginghandler","title":"MIDIReceiver.EventsLoggingHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/legacyeventshandler","title":"MIDIReceiver.LegacyEventsHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatahandler","title":"MIDIReceiver.RawDataHandler","type":"typealias"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatalogginghandler","title":"MIDIReceiver.RawDataLoggingHandler","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/events(options:_:)-swift.type.method","title":"static func events(options: MIDIReceiverOptions, MIDIReceiver.LegacyEventsHandler) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/events(translatemidi1noteonzerovelocitytonoteoff:_:)","title":"static func events(translateMIDI1NoteOnZeroVelocityToNoteOff: Bool, MIDIReceiver.EventsHandler) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/eventslogging(filteractivesensingandclock:_:)","title":"static func eventsLogging(filterActiveSensingAndClock: Bool, MIDIReceiver.EventsLoggingHandler?) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/eventswithmetadata(options:_:)","title":"static func eventsWithMetadata(options: MIDIReceiverOptions, MIDIReceiver.EventsHandler) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/eventswithmetadata(translatemidi1noteonzerovelocitytonoteoff:_:)","title":"static func eventsWithMetadata(translateMIDI1NoteOnZeroVelocityToNoteOff: Bool, MIDIReceiver.EventsHandler) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/object(_:held:options:)","title":"static func object(any ReceivesMIDIEvents, held: MIDIReceiver.ReceiverRefStorage, options: MIDIReceiverOptions) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/object(_:held:translatemidi1noteonzerovelocitytonoteoff:)","title":"static func object(any ReceivesMIDIEvents, held: MIDIReceiver.ReceiverRefStorage, translateMIDI1NoteOnZeroVelocityToNoteOff: Bool) -> MIDIReceiver","type":"method"},{"path":"\/documentation\/midikit\/midireceiver\/rawdatalogging(filteractivesensingandclock:_:)","title":"static func rawDataLogging(filterActiveSensingAndClock: Bool, MIDIReceiver.RawDataLoggingHandler?) -> MIDIReceiver","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/strongly","title":"case strongly","type":"case"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/weakly","title":"case weakly","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midireceiver\/receiverrefstorage","title":"MIDIReceiver.ReceiverRefStorage","type":"enum"}],"path":"\/documentation\/midikit\/midireceiver","title":"MIDIReceiver","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/bundlerpnandnrpndataentrylsb","title":"static let bundleRPNAndNRPNDataEntryLSB: MIDIReceiverOptions","type":"property"},{"path":"\/documentation\/midikit\/midireceiveroptions\/filteractivesensingandclock","title":"static let filterActiveSensingAndClock: MIDIReceiverOptions","type":"property"},{"path":"\/documentation\/midikit\/midireceiveroptions\/translatemidi1noteonzerovelocitytonoteoff","title":"static let translateMIDI1NoteOnZeroVelocityToNoteOff: MIDIReceiverOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midireceiveroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/midikit\/midireceiveroptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/midikit\/midireceiveroptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiveroptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/midikit\/midireceiveroptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/midikit\/midireceiveroptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midireceiveroptions","title":"MIDIReceiverOptions","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"title":"Internal Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midireceiverprotocol\/eventlistreceived(_:protocol:)","title":"func eventListReceived([UniversalMIDIPacketData], protocol: MIDIProtocolVersion)","type":"method"},{"path":"\/documentation\/midikit\/midireceiverprotocol\/packetlistreceived(_:)","title":"func packetListReceived([MIDIPacketData])","type":"method"}],"path":"\/documentation\/midikit\/midireceiverprotocol","title":"MIDIReceiverProtocol","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-receiving-midi-events","title":"Receiving MIDI Events","type":"symbol"},{"title":"Extending Connectivity","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitio-midi-over-bluetooth","title":"MIDI Over Bluetooth","type":"article"},{"children":[{"title":"Global Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/setmidinetworksession(policy:)","title":"func setMIDINetworkSession(policy: MIDIIONetworkConnectionPolicy?)","type":"func"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/anyone","title":"case anyone","type":"case"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hostsincontactlist","title":"case hostsInContactList","type":"case"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/noone","title":"case noOne","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiionetworkconnectionpolicy","title":"MIDIIONetworkConnectionPolicy","type":"enum"}],"path":"\/documentation\/midikit\/midikitio-midi-over-network","title":"MIDI Over Network","type":"symbol"},{"path":"\/documentation\/midikit\/midikitio-midi-over-usb","title":"MIDI Over USB","type":"article"},{"title":"Additional Guides","type":"groupMarker"},{"path":"\/documentation\/midikit\/send-and-receive-on-ios-in-background","title":"Send and Receive on iOS While Your App is Backgrounded","type":"article"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDIManager Managed Objects","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/coremidiinputportref","title":"var coreMIDIInputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/endpoint","title":"var endpoint: MIDIInputEndpoint","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/endpointname","title":"var endpointName: String","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midiinput\/uniqueid","title":"var uniqueID: MIDIIdentifier?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/hide()","title":"func hide() throws","type":"method"},{"path":"\/documentation\/midikit\/midiinput\/setreceiver(_:)","title":"func setReceiver(MIDIReceiver)","type":"method"},{"path":"\/documentation\/midikit\/midiinput\/show()","title":"func show() throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinput\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiinput\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinput","title":"MIDIInput","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutput\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/endpoint","title":"var endpoint: MIDIOutputEndpoint","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/endpointname","title":"var endpointName: String","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midioutput\/uniqueid","title":"var uniqueID: MIDIIdentifier?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutput\/hide()","title":"func hide() throws","type":"method"},{"path":"\/documentation\/midikit\/midioutput\/show()","title":"func show() throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutput\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midioutput\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutput","title":"MIDIOutput","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/coremidiinputportref","title":"var coreMIDIInputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/coremidioutputendpointrefs","title":"var coreMIDIOutputEndpointRefs: Set<CoreMIDIEndpointRef>","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/endpoints","title":"var endpoints: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/filter","title":"var filter: MIDIEndpointFilter","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/mode","title":"var mode: MIDIInputConnectionMode","type":"property"},{"path":"\/documentation\/midikit\/midiinputconnection\/outputscriteria","title":"var outputsCriteria: Set<MIDIEndpointIdentity>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/add(outputs:)-39yyr","title":"func add(outputs: [MIDIOutputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/add(outputs:)-fshr","title":"func add(outputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/remove(outputs:)-158ab","title":"func remove(outputs: [MIDIOutputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/remove(outputs:)-7zf2d","title":"func remove(outputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/removealloutputs()","title":"func removeAllOutputs()","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnection\/setreceiver(_:)","title":"func setReceiver(MIDIReceiver)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiinputconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputconnection","title":"MIDIInputConnection","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/coremidiinputendpointrefs","title":"var coreMIDIInputEndpointRefs: Set<CoreMIDIEndpointRef>","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/endpoints","title":"var endpoints: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/filter","title":"var filter: MIDIEndpointFilter","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/inputscriteria","title":"var inputsCriteria: Set<MIDIEndpointIdentity>","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"path":"\/documentation\/midikit\/midioutputconnection\/mode","title":"var mode: MIDIOutputConnectionMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/add(inputs:)-3c7do","title":"func add(inputs: [MIDIInputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/add(inputs:)-4xbwz","title":"func add(inputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/remove(inputs:)-1medn","title":"func remove(inputs: [MIDIInputEndpoint])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/remove(inputs:)-66yrn","title":"func remove(inputs: [MIDIEndpointIdentity])","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnection\/removeallinputs()","title":"func removeAllInputs()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midioutputconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputconnection","title":"MIDIOutputConnection","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutallcontrols","title":"var filterOutAllControls: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutbeatclock","title":"var filterOutBeatClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutmtc","title":"var filterOutMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filteroutsysex","title":"var filterOutSysEx: Bool","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct\/filterouttunerequest","title":"var filterOutTuneRequest: Bool","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.struct","title":"MIDIThruConnection.Parameters","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/api","title":"var api: CoreMIDIAPIVersion","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/coremidithruconnectionref","title":"var coreMIDIThruConnectionRef: CoreMIDIThruConnectionRef?","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.property","title":"var lifecycle: MIDIThruConnection.Lifecycle","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midithruconnection\/parameters-swift.property","title":"var parameters: MIDIThruConnection.Parameters","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/nonpersistent","title":"case nonPersistent","type":"case"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/persistent(ownerid:)","title":"case persistent(ownerID: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/ispersistent","title":"var isPersistent: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midithruconnection\/lifecycle-swift.enum","title":"MIDIThruConnection.Lifecycle","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midithruconnection\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midithruconnection\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midithruconnection","title":"MIDIThruConnection","type":"class"},{"title":"Provider Classes and Types","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/devices","title":"var devices: [MIDIDevice]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/updatecachedproperties()","title":"func updateCachedProperties()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/mididevices\/==(_:_:)","title":"static func == (any MIDIDevicesProtocol, any MIDIDevicesProtocol) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mididevices\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/mididevices\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevices\/inputs","title":"var inputs: [MIDIDevice : [MIDIInputEndpoint]]","type":"property"},{"path":"\/documentation\/midikit\/mididevices\/outputs","title":"var outputs: [MIDIDevice : [MIDIOutputEndpoint]]","type":"property"}],"path":"\/documentation\/midikit\/mididevices\/mididevicesprotocol-implementations","title":"MIDIDevicesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mididevices","title":"MIDIDevices","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/inputsunowned","title":"var inputsUnowned: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpoints\/outputsunowned","title":"var outputsUnowned: [MIDIOutputEndpoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/updatecachedproperties()","title":"func updateCachedProperties()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midiendpoints\/==(_:_:)","title":"static func == (any MIDIEndpointsProtocol, any MIDIEndpointsProtocol) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpoints\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoints\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiendpoints\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpoints","title":"MIDIEndpoints","type":"struct"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/alloutputs","title":"case allOutputs","type":"case"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/outputs(matching:)-swift.enum.case","title":"case outputs(matching: Set<MIDIEndpointIdentity>)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/none","title":"static let none: MIDIInputConnectionMode","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/outputs(_:)","title":"static func outputs([MIDIOutputEndpoint]) -> MIDIInputConnectionMode","type":"method"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/outputs(matching:)-swift.type.method","title":"static func outputs(matching: [MIDIEndpointIdentity]) -> MIDIInputConnectionMode","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputconnectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiinputconnectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputconnectionmode","title":"MIDIInputConnectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/allinputs","title":"case allInputs","type":"case"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/inputs(matching:)-swift.enum.case","title":"case inputs(matching: Set<MIDIEndpointIdentity>)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/none","title":"static let none: MIDIOutputConnectionMode","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/inputs(_:)","title":"static func inputs([MIDIInputEndpoint]) -> MIDIOutputConnectionMode","type":"method"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/inputs(matching:)-swift.type.method","title":"static func inputs(matching: [MIDIEndpointIdentity]) -> MIDIOutputConnectionMode","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputconnectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midioutputconnectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputconnectionmode","title":"MIDIOutputConnectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiconnectionmode\/allendpoints","title":"case allEndpoints","type":"case"},{"path":"\/documentation\/midikit\/midiconnectionmode\/definedendpoints","title":"case definedEndpoints","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiconnectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiconnectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiconnectionmode","title":"MIDIConnectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointtype\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/midiendpointtype\/output","title":"case output","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointtype","title":"MIDIEndpointType","type":"enum"},{"title":"MIDI Packets and Parsing","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midipacketdata\/init(bytes:timestamp:source:)","title":"init(bytes: [UInt8], timeStamp: CoreMIDITimeStamp, source: MIDIOutputEndpoint?)","type":"init"}],"path":"\/documentation\/midikit\/midipacketdata","title":"MIDIPacketData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/init(bytes:timestamp:source:)","title":"init(bytes: [UInt8], timeStamp: CoreMIDITimeStamp, source: MIDIOutputEndpoint?)","type":"init"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/init(words:timestamp:source:)","title":"init(words: [UMPWord], timeStamp: CoreMIDITimeStamp, source: MIDIOutputEndpoint?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/bytes","title":"var bytes: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/universalmidipacketdata\/timestamp","title":"let timeStamp: CoreMIDITimeStamp","type":"property"}],"path":"\/documentation\/midikit\/universalmidipacketdata","title":"UniversalMIDIPacketData","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data128bit","title":"case data128bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/data64bit","title":"case data64bit","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi1channelvoice","title":"case midi1ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/midi2channelvoice","title":"case midi2ChannelVoice","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/systemrealtimeandcommon","title":"case systemRealTimeAndCommon","type":"case"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/utility","title":"case utility","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/wordlength","title":"var wordLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmessagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmessagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmessagetype","title":"MIDIUMPMessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/complete","title":"case complete","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/start","title":"case start","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpsysexstatusfield","title":"MIDIUMPSysExStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/noop","title":"case noOp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumputilitystatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumputilitystatusfield","title":"MIDIUMPUtilityStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/header","title":"case header","type":"case"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/payload","title":"case payload","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/init(rawvalue:)","title":"init?(rawValue: UInt4)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiumpmixeddatasetstatusfield","title":"MIDIUMPMixedDataSetStatusField","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidipacket\/packet(_:)","title":"case packet(MIDIPacketData)","type":"case"},{"path":"\/documentation\/midikit\/anymidipacket\/universalpacket(_:)","title":"case universalPacket(UniversalMIDIPacketData)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidipacket\/bytes","title":"var bytes: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/anymidipacket\/source","title":"var source: MIDIOutputEndpoint?","type":"property"},{"path":"\/documentation\/midikit\/anymidipacket\/timestamp","title":"var timeStamp: CoreMIDITimeStamp","type":"property"}],"path":"\/documentation\/midikit\/anymidipacket","title":"AnyMIDIPacket","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi1parser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi1parser\/parsedevents(in:umpgroup:)-4y23l","title":"func parsedEvents(in: [UInt8], umpGroup: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midi1parser\/parsedevents(in:umpgroup:)-96m2","title":"func parsedEvents(in: MIDIPacketData, umpGroup: UInt4) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midi1parser","title":"MIDI1Parser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parser\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parser\/parsedevents(in:)-4a87n","title":"func parsedEvents(in: [UInt8]) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midi2parser\/parsedevents(in:)-9yes6","title":"func parsedEvents(in: UniversalMIDIPacketData) -> [MIDIEvent]","type":"method"}],"path":"\/documentation\/midikit\/midi2parser","title":"MIDI2Parser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/init(handleevents:)","title":"init(handleEvents: AdvancedMIDI2Parser.EventsHandler)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/bundlerpnandnrpndataentrylsb","title":"var bundleRPNAndNRPNDataEntryLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/handleevents","title":"var handleEvents: AdvancedMIDI2Parser.EventsHandler","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/parseevents(in:)","title":"func parseEvents(in: UniversalMIDIPacketData)","type":"method"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/parseevents(in:timestamp:source:)","title":"func parseEvents(in: [UInt8], timeStamp: CoreMIDITimeStamp, source: MIDIOutputEndpoint?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/advancedmidi2parser\/eventshandler","title":"AdvancedMIDI2Parser.EventsHandler","type":"typealias"}],"path":"\/documentation\/midikit\/advancedmidi2parser","title":"AdvancedMIDI2Parser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/parameternumbereventbundler\/init(handleevents:)","title":"init(handleEvents: ParameterNumberEventBundler.EventsHandler)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/parameternumbereventbundler\/bundlerpnandnrpndataentrylsb","title":"var bundleRPNAndNRPNDataEntryLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/parameternumbereventbundler\/handleevents","title":"var handleEvents: ParameterNumberEventBundler.EventsHandler","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/parameternumbereventbundler\/process(events:timestamp:source:)","title":"func process(events: inout [MIDIEvent], timeStamp: CoreMIDITimeStamp, source: MIDIOutputEndpoint?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/parameternumbereventbundler\/eventshandler","title":"ParameterNumberEventBundler.EventsHandler","type":"typealias"}],"path":"\/documentation\/midikit\/parameternumbereventbundler","title":"ParameterNumberEventBundler","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/midi1_0","title":"case midi1_0","type":"case"},{"path":"\/documentation\/midikit\/midiprotocolversion\/midi2_0","title":"case midi2_0","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiprotocolversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiprotocolversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiprotocolversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiprotocolversion","title":"MIDIProtocolVersion","type":"enum"},{"title":"Core MIDI Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/legacycoremidi","title":"case legacyCoreMIDI","type":"case"},{"path":"\/documentation\/midikit\/coremidiapiversion\/newcoremidi(_:)","title":"case newCoreMIDI(MIDIProtocolVersion)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/isvalidoncurrentplatform","title":"var isValidOnCurrentPlatform: Bool","type":"property"},{"path":"\/documentation\/midikit\/coremidiapiversion\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/bestforplatform()","title":"static func bestForPlatform() -> CoreMIDIAPIVersion","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/coremidiapiversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremidiapiversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/coremidiapiversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/coremidiapiversion","title":"CoreMIDIAPIVersion","type":"enum"},{"path":"\/documentation\/midikit\/coremidiclientref","title":"CoreMIDIClientRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiobjectref","title":"CoreMIDIObjectRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiportref","title":"CoreMIDIPortRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidideviceref","title":"CoreMIDIDeviceRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidientityref","title":"CoreMIDIEntityRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiendpointref","title":"CoreMIDIEndpointRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremidithruconnectionref","title":"CoreMIDIThruConnectionRef","type":"typealias"},{"path":"\/documentation\/midikit\/coremiditimestamp","title":"CoreMIDITimeStamp","type":"typealias"},{"path":"\/documentation\/midikit\/coremidiosstatus","title":"CoreMIDIOSStatus","type":"typealias"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/connectionerror(_:)","title":"case connectionError(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/internalinconsistency(_:)","title":"case internalInconsistency(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/notsupported(_:)","title":"case notSupported(String)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/osstatus(_:)-swift.enum.case","title":"case osStatus(MIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiioerror\/readerror(_:)","title":"case readError(String)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/osstatus(_:)-swift.type.method","title":"static func osStatus(CoreMIDIOSStatus) -> MIDIIOError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiioerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midiioerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiioerror","title":"MIDIIOError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/idnotunique","title":"case idNotUnique","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidclient","title":"case invalidClient","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/invalidport","title":"case invalidPort","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/ioerror","title":"case ioError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/messagesenderr","title":"case messageSendErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/noconnection","title":"case noConnection","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/nocurrentsetup","title":"case noCurrentSetup","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/notpermitted","title":"case notPermitted","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/objectnotfound","title":"case objectNotFound","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/other(_:)","title":"case other(CoreMIDIOSStatus)","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/serverstarterr","title":"case serverStartErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/setupformaterr","title":"case setupFormatErr","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownendpoint","title":"case unknownEndpoint","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownerror","title":"case unknownError","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/unknownproperty","title":"case unknownProperty","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongendpointtype","title":"case wrongEndpointType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongpropertytype","title":"case wrongPropertyType","type":"case"},{"path":"\/documentation\/midikit\/midiosstatus\/wrongthread","title":"case wrongThread","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/init(rawvalue:)","title":"init(rawValue: CoreMIDIOSStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/rawvalue","title":"var rawValue: CoreMIDIOSStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiosstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midiosstatus\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiosstatus\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midiosstatus\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midiosstatus\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiosstatus","title":"MIDIOSStatus","type":"enum"},{"title":"I\/O","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiendpoint\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"title":"MIDIEndpoint Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/midikit\/midiioobject\/==(_:_:)-3jrk3","title":"static func == (Self, Self) -> Bool","type":"op"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/==(_:_:)-47sj0","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/advancescheduletimemusec-5h9dk","title":"var advanceScheduleTimeMuSec: String?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/advancescheduletimemusec-602y3","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/canroute-ggbe","title":"var canRoute: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/canroute-3o5gb","title":"var canRoute: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/connectionuniqueid-8tndb","title":"var connectionUniqueID: MIDIIdentifier","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/connectionuniqueid-14q3t","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/coremidiobjectref","title":"var coreMIDIObjectRef: CoreMIDIObjectRef","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/devicemanufacturerid-7kaz3","title":"var deviceManufacturerID: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/devicemanufacturerid-5yj62","title":"var deviceManufacturerID: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/displayname-7u7g1","title":"var displayName: String?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/displayname-80pp5","title":"var displayName: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/driverdeviceeditorapp-5aqku","title":"var driverDeviceEditorApp: URL?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/driverdeviceeditorapp-9jc6g","title":"var driverDeviceEditorApp: URL?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/driverowner-1oo2n","title":"var driverOwner: String?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/driverowner-573bf","title":"var driverOwner: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/driverversion-1aap5","title":"var driverVersion: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/driverversion-8nwr5","title":"var driverVersion: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/image-46xbz","title":"var image: Image?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/image-2wgjz","title":"var image: Image?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/imageasnsimage-66fnm","title":"var imageAsNSImage: NSImage?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/imageasnsimage-19vv2","title":"var imageAsNSImage: NSImage?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/imagefileurl-6ltjy","title":"var imageFileURL: URL?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/imagefileurl-5xfqp","title":"var imageFileURL: URL?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/isbroadcast-5fkvq","title":"var isBroadcast: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/isbroadcast-6p88i","title":"var isBroadcast: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/isdrummachine-5rcxj","title":"var isDrumMachine: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/isdrummachine-zvnm","title":"var isDrumMachine: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/iseffectunit-90ceb","title":"var isEffectUnit: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/iseffectunit-1kj15","title":"var isEffectUnit: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/isembeddedentity-1lzwc","title":"var isEmbeddedEntity: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/isembeddedentity-1m95p","title":"var isEmbeddedEntity: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/ismixer-3ufrr","title":"var isMixer: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/ismixer-7a9mf","title":"var isMixer: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/isoffline-96hcb","title":"var isOffline: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/isoffline-86t2q","title":"var isOffline: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/isprivate-1hq1k","title":"var isPrivate: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/isprivate-3fkxb","title":"var isPrivate: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/issampler-g4f5","title":"var isSampler: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/issampler-1cobf","title":"var isSampler: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/manufacturer-8zo8g","title":"var manufacturer: String?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/manufacturer-2wqne","title":"var manufacturer: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/maxreceivechannels-22ykg","title":"var maxReceiveChannels: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/maxreceivechannels-242ao","title":"var maxReceiveChannels: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/maxsysexspeed-1x153","title":"var maxSysExSpeed: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/maxsysexspeed-1lvu9","title":"var maxSysExSpeed: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/maxtransmitchannels-3wepj","title":"var maxTransmitChannels: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/maxtransmitchannels-7hz6g","title":"var maxTransmitChannels: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/model-8m21g","title":"var model: String?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/model-9avla","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/name","title":"var name: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/nameconfigurationdictionary-6uzt8","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/nameconfigurationdictionary-2arem","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/pandisruptsstereo-433du","title":"var panDisruptsStereo: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/pandisruptsstereo-11w3z","title":"var panDisruptsStereo: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/protocolid-109hv","title":"var protocolID: MIDIProtocolVersion?","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/protocolid-9oyvi","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivechannels-4krln","title":"var receiveChannels: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivechannels-8jqv1","title":"var receiveChannels: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesbankselectlsb-373ce","title":"var receivesBankSelectLSB: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesbankselectlsb-xnk0","title":"var receivesBankSelectLSB: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesbankselectmsb-51ry3","title":"var receivesBankSelectMSB: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesbankselectmsb-412mq","title":"var receivesBankSelectMSB: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesclock-9vfj4","title":"var receivesClock: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesclock-9mwo3","title":"var receivesClock: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesmtc-20pad","title":"var receivesMTC: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesmtc-59jlc","title":"var receivesMTC: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesnotes-7p5ia","title":"var receivesNotes: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesnotes-928fp","title":"var receivesNotes: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/receivesprogramchanges-i910","title":"var receivesProgramChanges: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/receivesprogramchanges-8974c","title":"var receivesProgramChanges: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/singlerealtimeentity-9oz88","title":"var singleRealtimeEntity: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/singlerealtimeentity-1k1ry","title":"var singleRealtimeEntity: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/supportsgeneralmidi-5ll54","title":"var supportsGeneralMIDI: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/supportsgeneralmidi-90dgv","title":"var supportsGeneralMIDI: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/supportsmmc-6as5v","title":"var supportsMMC: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/supportsmmc-37yl8","title":"var supportsMMC: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/supportsshowcontrol-4sn8b","title":"var supportsShowControl: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/supportsshowcontrol-6nyic","title":"var supportsShowControl: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitchannels-4ybre","title":"var transmitChannels: Int32","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitchannels-49z5h","title":"var transmitChannels: Int32","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsbankselectlsb-79gkx","title":"var transmitsBankSelectLSB: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsbankselectlsb-9cdz3","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsbankselectmsb-7pak7","title":"var transmitsBankSelectMSB: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsbankselectmsb-3de6f","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsclock-3oxmd","title":"var transmitsClock: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsclock-33mv9","title":"var transmitsClock: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsmtc-6pcxz","title":"var transmitsMTC: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsmtc-dfqq","title":"var transmitsMTC: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsnotes-2h8vw","title":"var transmitsNotes: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsnotes-9set0","title":"var transmitsNotes: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/transmitsprogramchanges-3fjp8","title":"var transmitsProgramChanges: Bool","type":"property"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/transmitsprogramchanges-48sq1","title":"var transmitsProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiioobject\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobject\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiendpoint\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"MIDIEndpoint Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/midikit\/midiioobject\/hash(into:)-9ezjn","title":"func hash(into: inout Hasher)","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/hash(into:)-3goh4","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/midikit\/midiioobject\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/propertystringvalue(for:)-3cjuo","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/propertystringvalue(for:)-93tk7","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/midiioobject\/propertystringvalues(relevantonly:)-l67o","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"title":"MIDIIOObject Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/midiioobject\/propertystringvalues(relevantonly:)-1try0","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/midiioobject","title":"MIDIIOObject","type":"protocol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobjecttype\/device","title":"case device","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/entity","title":"case entity","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/inputendpoint","title":"case inputEndpoint","type":"case"},{"path":"\/documentation\/midikit\/midiioobjecttype\/outputendpoint","title":"case outputEndpoint","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiioobjecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiioobjecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiioobjecttype","title":"MIDIIOObjectType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/device(_:)","title":"case device(MIDIDevice)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/entity(_:)","title":"case entity(MIDIEntity)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/inputendpoint(_:)","title":"case inputEndpoint(MIDIInputEndpoint)","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/outputendpoint(_:)","title":"case outputEndpoint(MIDIOutputEndpoint)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/advancescheduletimemusec","title":"case advanceScheduleTimeMuSec","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/canroute","title":"case canRoute","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/connectionuniqueid","title":"case connectionUniqueID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/deviceid","title":"case deviceID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/displayname","title":"case displayName","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverdeviceeditorapp","title":"case driverDeviceEditorApp","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverowner","title":"case driverOwner","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/driverversion","title":"case driverVersion","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/image","title":"case image","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isbroadcast","title":"case isBroadcast","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isdrummachine","title":"case isDrumMachine","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/iseffectunit","title":"case isEffectUnit","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isembeddedentity","title":"case isEmbeddedEntity","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/ismixer","title":"case isMixer","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isoffline","title":"case isOffline","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/isprivate","title":"case isPrivate","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/issampler","title":"case isSampler","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/manufacturer","title":"case manufacturer","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxreceivechannels","title":"case maxReceiveChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxsysexspeed","title":"case maxSysExSpeed","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/maxtransmitchannels","title":"case maxTransmitChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/model","title":"case model","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/name-swift.enum.case","title":"case name","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/nameconfigurationdictionary","title":"case nameConfigurationDictionary","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/pandisruptsstereo","title":"case panDisruptsStereo","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/protocolid","title":"case protocolID","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivechannels","title":"case receiveChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesbankselectlsb","title":"case receivesBankSelectLSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesbankselectmsb","title":"case receivesBankSelectMSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesclock","title":"case receivesClock","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesmtc","title":"case receivesMTC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesnotes","title":"case receivesNotes","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/receivesprogramchanges","title":"case receivesProgramChanges","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/singlerealtimeentity","title":"case singleRealtimeEntity","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsgeneralmidi","title":"case supportsGeneralMIDI","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsmmc","title":"case supportsMMC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/supportsshowcontrol","title":"case supportsShowControl","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitchannels","title":"case transmitChannels","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsbankselectlsb","title":"case transmitsBankSelectLSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsbankselectmsb","title":"case transmitsBankSelectMSB","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsclock","title":"case transmitsClock","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsmtc","title":"case transmitsMTC","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsnotes","title":"case transmitsNotes","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/transmitsprogramchanges","title":"case transmitsProgramChanges","type":"case"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/uniqueid","title":"case uniqueID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/init(_:)","title":"init?(CFString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/coremidicfstring","title":"var coreMIDICFString: CFString","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/name-swift.property","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/anymidiioobject\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiioobject\/property","title":"AnyMIDIIOObject.Property","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/anymidiioobject\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/anymidiioobject\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/id-swift.property","title":"var id: AnyMIDIIOObject.ID","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/id-swift.typealias","title":"AnyMIDIIOObject.ID","type":"typealias"}],"path":"\/documentation\/midikit\/anymidiioobject\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/advancescheduletimemusec","title":"var advanceScheduleTimeMuSec: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/canroute","title":"var canRoute: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/connectionuniqueid","title":"var connectionUniqueID: MIDIIdentifier","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/coremidiobjectref","title":"var coreMIDIObjectRef: CoreMIDIObjectRef","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/devicemanufacturerid","title":"var deviceManufacturerID: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/displayname","title":"var displayName: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/driverdeviceeditorapp","title":"var driverDeviceEditorApp: URL?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/driverowner","title":"var driverOwner: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/driverversion","title":"var driverVersion: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/image","title":"var image: Image?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/imageasnsimage","title":"var imageAsNSImage: NSImage?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/imagefileurl","title":"var imageFileURL: URL?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/isbroadcast","title":"var isBroadcast: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/isdrummachine","title":"var isDrumMachine: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/iseffectunit","title":"var isEffectUnit: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/isembeddedentity","title":"var isEmbeddedEntity: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/ismixer","title":"var isMixer: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/isoffline","title":"var isOffline: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/isprivate","title":"var isPrivate: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/issampler","title":"var isSampler: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/manufacturer","title":"var manufacturer: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/maxreceivechannels","title":"var maxReceiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/maxsysexspeed","title":"var maxSysExSpeed: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/maxtransmitchannels","title":"var maxTransmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/nameconfigurationdictionary","title":"var nameConfigurationDictionary: NSDictionary?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/objecttype","title":"var objectType: MIDIIOObjectType","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/pandisruptsstereo","title":"var panDisruptsStereo: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/protocolid","title":"var protocolID: MIDIProtocolVersion?","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivechannels","title":"var receiveChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesbankselectlsb","title":"var receivesBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesbankselectmsb","title":"var receivesBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesclock","title":"var receivesClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesmtc","title":"var receivesMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesnotes","title":"var receivesNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/receivesprogramchanges","title":"var receivesProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/singlerealtimeentity","title":"var singleRealtimeEntity: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/supportsgeneralmidi","title":"var supportsGeneralMIDI: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/supportsmmc","title":"var supportsMMC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/supportsshowcontrol","title":"var supportsShowControl: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitchannels","title":"var transmitChannels: Int32","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsbankselectlsb","title":"var transmitsBankSelectLSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsbankselectmsb","title":"var transmitsBankSelectMSB: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsclock","title":"var transmitsClock: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsmtc","title":"var transmitsMTC: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsnotes","title":"var transmitsNotes: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/transmitsprogramchanges","title":"var transmitsProgramChanges: Bool","type":"property"},{"path":"\/documentation\/midikit\/anymidiioobject\/uniqueid","title":"var uniqueID: MIDIIdentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/anymidiioobject\/asanymidiioobject()","title":"func asAnyMIDIIOObject() -> AnyMIDIIOObject","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getadvancescheduletimemusec()","title":"func getAdvanceScheduleTimeMuSec() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getcanroute()","title":"func getCanRoute() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getconnectionuniqueid()","title":"func getConnectionUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getdevicemanufacturerid()","title":"func getDeviceManufacturerID() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getdisplayname()","title":"func getDisplayName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getdriverdeviceeditorapp()","title":"func getDriverDeviceEditorApp() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getdriverowner()","title":"func getDriverOwner() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getdriverversion()","title":"func getDriverVersion() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getimageasnsimage()","title":"func getImageAsNSImage() -> NSImage?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getimagefileurl()","title":"func getImageFileURL() -> URL?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getisbroadcast()","title":"func getIsBroadcast() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getisdrummachine()","title":"func getIsDrumMachine() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getiseffectunit()","title":"func getIsEffectUnit() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getisembeddedentity()","title":"func getIsEmbeddedEntity() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getismixer()","title":"func getIsMixer() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getisoffline()","title":"func getIsOffline() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getisprivate()","title":"func getIsPrivate() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getissampler()","title":"func getIsSampler() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getmanufacturer()","title":"func getManufacturer() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getmaxreceivechannels()","title":"func getMaxReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getmaxsysexspeed()","title":"func getMaxSysExSpeed() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getmaxtransmitchannels()","title":"func getMaxTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getmodel()","title":"func getModel() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getname()","title":"func getName() -> String?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getnameconfigurationdictionary()","title":"func getNameConfigurationDictionary() -> NSDictionary?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getpandisruptsstereo()","title":"func getPanDisruptsStereo() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getprotocolid()","title":"func getProtocolID() -> MIDIProtocolVersion?","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivechannels()","title":"func getReceiveChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesbankselectlsb()","title":"func getReceivesBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesbankselectmsb()","title":"func getReceivesBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesclock()","title":"func getReceivesClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesmtc()","title":"func getReceivesMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesnotes()","title":"func getReceivesNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getreceivesprogramchanges()","title":"func getReceivesProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getsinglerealtimeentity()","title":"func getSingleRealtimeEntity() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getsupportsgeneralmidi()","title":"func getSupportsGeneralMIDI() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getsupportsmmc()","title":"func getSupportsMMC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getsupportsshowcontrol()","title":"func getSupportsShowControl() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitchannels()","title":"func getTransmitChannels() -> Int32","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsbankselectlsb()","title":"func getTransmitsBankSelectLSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsbankselectmsb()","title":"func getTransmitsBankSelectMSB() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsclock()","title":"func getTransmitsClock() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsmtc()","title":"func getTransmitsMTC() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsnotes()","title":"func getTransmitsNotes() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/gettransmitsprogramchanges()","title":"func getTransmitsProgramChanges() -> Bool","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/getuniqueid()","title":"func getUniqueID() -> MIDIIdentifier","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/propertiesasstrings(onlyincluderelevant:)","title":"func propertiesAsStrings(onlyIncludeRelevant: Bool) -> [(key: String, value: String)]","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/propertystringvalue(for:)","title":"func propertyStringValue(for: AnyMIDIIOObject.Property) -> String","type":"method"},{"path":"\/documentation\/midikit\/anymidiioobject\/propertystringvalues(relevantonly:)","title":"func propertyStringValues(relevantOnly: Bool) -> [(key: String, value: String)]","type":"method"}],"path":"\/documentation\/midikit\/anymidiioobject\/midiioobject-implementations","title":"MIDIIOObject Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/anymidiioobject","title":"AnyMIDIIOObject","type":"enum"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoint\/device","title":"var device: MIDIDevice?","type":"property"},{"path":"\/documentation\/midikit\/midiendpoint\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/midikit\/midiendpoint\/entity","title":"var entity: MIDIEntity?","type":"property"},{"path":"\/documentation\/midikit\/midiendpoint\/exists","title":"var exists: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiendpoint\/id-swift.property","title":"var id: Self.ID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoint\/asanyendpoint()","title":"func asAnyEndpoint() -> AnyMIDIEndpoint","type":"method"},{"path":"\/documentation\/midikit\/midiendpoint\/asidentity()","title":"func asIdentity() -> MIDIEndpointIdentity","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpoint\/id-swift.typealias","title":"MIDIEndpoint.ID","type":"typealias"}],"path":"\/documentation\/midikit\/midiendpoint","title":"MIDIEndpoint","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/devices","title":"var devices: [MIDIDevice]","type":"property"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/inputs","title":"var inputs: [MIDIDevice : [MIDIInputEndpoint]]","type":"property"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/outputs","title":"var outputs: [MIDIDevice : [MIDIOutputEndpoint]]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/updatecachedproperties()","title":"func updateCachedProperties()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/==(_:_:)","title":"static func == (any MIDIDevicesProtocol, any MIDIDevicesProtocol) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mididevicesprotocol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mididevicesprotocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/mididevicesprotocol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mididevicesprotocol","title":"MIDIDevicesProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/inputs","title":"var inputs: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/inputsunowned","title":"var inputsUnowned: [MIDIInputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/outputs","title":"var outputs: [MIDIOutputEndpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/outputsunowned","title":"var outputsUnowned: [MIDIOutputEndpoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/updatecachedproperties()","title":"func updateCachedProperties()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/==(_:_:)","title":"static func == (any MIDIEndpointsProtocol, any MIDIEndpointsProtocol) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiendpointsprotocol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsprotocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midiendpointsprotocol\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiendpointsprotocol","title":"MIDIEndpointsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanaged\/api","title":"var api: CoreMIDIAPIVersion","type":"property"}],"path":"\/documentation\/midikit\/midimanaged","title":"MIDIManaged","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanagedreceivesmessages\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"}],"path":"\/documentation\/midikit\/midimanagedreceivesmessages","title":"MIDIManagedReceivesMessages","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midimanagedsendsmessages\/coremidioutputportref","title":"var coreMIDIOutputPortRef: CoreMIDIPortRef?","type":"property"},{"path":"\/documentation\/midikit\/midimanagedsendsmessages\/midiprotocol","title":"var midiProtocol: MIDIProtocolVersion","type":"property"}],"path":"\/documentation\/midikit\/midimanagedsendsmessages","title":"MIDIManagedSendsMessages","type":"protocol"}],"path":"\/documentation\/midikit\/midikitio-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitio","title":"MIDIKitIO","type":"symbol"},{"children":[{"title":"SwiftUI Views","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputslist\/init(selectionid:selectiondisplayname:showicons:hideowned:)","title":"init(selectionID: Binding<MIDIIdentifier?>, selectionDisplayName: Binding<String?>, showIcons: Bool, hideOwned: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputslist\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/midikit\/midiinputslist\/hideowned","title":"var hideOwned: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputslist\/selectiondisplayname","title":"var selectionDisplayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputslist\/selectionid","title":"var selectionID: MIDIIdentifier?","type":"property"},{"path":"\/documentation\/midikit\/midiinputslist\/showicons","title":"var showIcons: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(activationpoint:)-1ewnm","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(activationpoint:)-924u7","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaction(named:_:)-2u4u6","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaction(named:_:)-7f1jc","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaction(named:_:)-96dni","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityactivationpoint(_:)-5w0u0","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityactivationpoint(_:)-6panm","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-38pvt","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-69xbp","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-6ig5f","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-7oyhy","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-7wbx2","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-81std","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-92gmg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitycustomcontent(_:_:importance:)-9g9h4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityhint(_:)-3d8fq","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityhint(_:)-9llgi","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityhint(_:)-9mcap","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityinputlabels(_:)-3sxlv","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityinputlabels(_:)-8qxn0","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityinputlabels(_:)-uh9n","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitylabel(_:)-4ijbq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitylabel(_:)-5f9fq","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitylabel(_:)-6ye5c","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:)-4mbuz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:)-5n2pj","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:)-7fwjp","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:)-9i9qh","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-2ge6h","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-44e04","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-48oc1","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-5w04v","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entrylabel:)-1c1us","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entrylabel:)-3josb","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entrylabel:)-5ou55","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:entries:entrylabel:)-64iwq","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:textranges:)-3hi4f","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:textranges:)-68ols","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:textranges:)-8exu3","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotor(_:textranges:)-8w4s9","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityvalue(_:)-42w6d","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityvalue(_:)-6i2ij","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityvalue(_:)-9p4","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:)-281pq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:)-3tf4c","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:)-7586v","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:message:)-1vbml","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:message:)-2nvzv","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:actions:message:)-gf8v","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:)-1isd8","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:)-1mura","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:)-63bnh","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:message:)-14v4q","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:message:)-77106","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(_:ispresented:presenting:actions:message:)-abc2","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alignmentguide(_:computevalue:)-3l5mv","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alignmentguide(_:computevalue:)-xfxp","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/aspectratio(_:contentmode:)-7i5bg","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/aspectratio(_:contentmode:)-8a7p7","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(_:in:fillstyle:)-8bt1g","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(_:in:fillstyle:)-8g3oy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(in:fillstyle:)-7a7st","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/background(in:fillstyle:)-8f9iv","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/badge(_:)-1h9az","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/badge(_:)-20e8i","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/badge(_:)-4rybq","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/badge(_:)-4ujb","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/buttonstyle(_:)-1n915","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/buttonstyle(_:)-76sre","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2b0qh","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-42pwr","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6stq2","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5hvww","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-78xop","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7eqpg","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-53a5b","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-82asf","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9caze","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6iivy","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7614t","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8c8rp","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contentmargins(_:_:for:)-5by3h","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contentmargins(_:_:for:)-9rizt","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogsuppressiontoggle(_:issuppressed:)-1ny9b","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogsuppressiontoggle(_:issuppressed:)-7xcau","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogsuppressiontoggle(_:issuppressed:)-8ybo0","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogconfirmationlabel(_:)-55l4l","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogconfirmationlabel(_:)-6csai","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogconfirmationlabel(_:)-87grk","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogmessage(_:)-3xuln","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogmessage(_:)-6ql97","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogmessage(_:)-9j58r","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2p874","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8csgo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-19nhe","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8idz1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2d1ga","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9262w","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3pzbz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-74jza","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporterfilenamelabel(_:)-5acri","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporterfilenamelabel(_:)-657fn","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileexporterfilenamelabel(_:)-syc6","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedobject(_:)-1oibm","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedobject(_:)-3zbea","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedsceneobject(_:)-39u1x","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedsceneobject(_:)-6azk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedscenevalue(_:_:)-6s6mt","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedscenevalue(_:_:)-8uwem","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedvalue(_:_:)-4bjbz","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/focusedvalue(_:_:)-590oc","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/help(_:)-7uvvk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/help(_:)-8i5av","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/help(_:)-9wlv6","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyboardshortcut(_:)-7b1tu","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyboardshortcut(_:)-q6ax","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linelimit(_:)-4r66s","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linelimit(_:)-5hzdv","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linelimit(_:)-5pvsb","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linelimit(_:)-89qqq","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listitemtint(_:)-2ww50","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listitemtint(_:)-9ae9z","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:)-3lxzm","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:)-3pybf","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:)-9c1ed","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:displaymode:)-17uff","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:displaymode:)-1xfkm","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationbartitle(_:displaymode:)-3iv5l","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdocument(_:preview:)-1crhg","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdocument(_:preview:)-24hyu","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdocument(_:preview:)-i1d","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationdocument(_:preview:)-mmwk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsubtitle(_:)-3vx2t","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsubtitle(_:)-4xscv","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationsubtitle(_:)-8m20u","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationtitle(_:)-3ljpd","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationtitle(_:)-4suru","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationtitle(_:)-5v1ae","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationtitle(_:)-9watu","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/navigationtitle(_:)-bpv7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onchange(of:initial:_:)-5jd2h","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onchange(of:initial:_:)-c7g6","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:delegate:)-2xujj","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:delegate:)-8q79w","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:istargeted:perform:)-5yqia","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:istargeted:perform:)-7pd4z","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:istargeted:perform:)-8czyq","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ondrop(of:istargeted:perform:)-9so8z","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/onpastecommand(of:perform:)-84ty2","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onpastecommand(of:perform:)-88i4","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/onpastecommand(of:validator:perform:)-27231","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onpastecommand(of:validator:perform:)-4jn2b","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/padding(_:)-47doq","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/padding(_:)-9p2f8","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/renameaction(_:)-1o4at","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/renameaction(_:)-7h3ut","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/safeareainset(edge:alignment:spacing:content:)-50r18","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/safeareainset(edge:alignment:spacing:content:)-57k3o","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/safeareapadding(_:)-829zj","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/safeareapadding(_:)-sgbo","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scaleeffect(_:anchor:)-55g5i","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scaleeffect(_:anchor:)-61584","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4x6ka","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5nv6u","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-lc0i","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:placement:prompt:token:)-2vpso","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:placement:prompt:token:)-373ui","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:editabletokens:placement:prompt:token:)-8wk5g","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:ispresented:placement:prompt:)-488bp","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:ispresented:placement:prompt:)-4w2pz","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:ispresented:placement:prompt:)-5b07g","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:)-1vpai","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:)-60m4l","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:)-6eiks","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:suggestions:)-26onh","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:suggestions:)-2l7uo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:placement:prompt:suggestions:)-8o7qk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-9n5d2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-9sueb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-wbgj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:placement:prompt:token:)-7z1le","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:placement:prompt:token:)-9i0so","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:placement:prompt:token:)-o455","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1q9kh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-82tw1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-qoqj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1cok8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3sdzw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5mw76","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbar(content:)-700vp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbar(content:)-96udn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/typeselectequivalent(_:)-1cban","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/typeselectequivalent(_:)-4ydk3","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/typeselectequivalent(_:)-6z8ts","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/typesettinglanguage(_:isenabled:)-2t1q1","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/typesettinglanguage(_:isenabled:)-968ck","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputslist\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/midikit\/midiinputslist\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputslist","title":"MIDIInputsList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputslist\/init(selectionid:selectiondisplayname:showicons:hideowned:)","title":"init(selectionID: Binding<MIDIIdentifier?>, selectionDisplayName: Binding<String?>, showIcons: Bool, hideOwned: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputslist\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/midikit\/midioutputslist\/hideowned","title":"var hideOwned: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputslist\/selectiondisplayname","title":"var selectionDisplayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputslist\/selectionid","title":"var selectionID: MIDIIdentifier?","type":"property"},{"path":"\/documentation\/midikit\/midioutputslist\/showicons","title":"var showIcons: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(activationpoint:)-6flpp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(activationpoint:)-tdkz","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaction(named:_:)-1jp4n","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaction(named:_:)-47d62","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaction(named:_:)-g4nf","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityactivationpoint(_:)-2b0d3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityactivationpoint(_:)-7xvey","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-17xza","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-1flgq","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-3ox9c","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-551rk","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-5kpbw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-8rwx3","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-9ihhw","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitycustomcontent(_:_:importance:)-9o474","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityhint(_:)-6718p","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityhint(_:)-8ekh7","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityhint(_:)-9c3fk","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityinputlabels(_:)-6onwa","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityinputlabels(_:)-8dt8n","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityinputlabels(_:)-9dzut","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitylabel(_:)-719qp","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitylabel(_:)-9pc9f","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitylabel(_:)-x1r0","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:)-2j7q7","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:)-74byt","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:)-7sq8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:)-hrvx","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-2ywcl","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-3me0a","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-80g7w","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entryid:entrylabel:)-97vz1","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entrylabel:)-4x3al","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entrylabel:)-55guo","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entrylabel:)-642kn","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:entries:entrylabel:)-6zbzx","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:textranges:)-3lznj","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:textranges:)-5d5b4","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:textranges:)-6edbk","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotor(_:textranges:)-9vaaz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityvalue(_:)-1csui","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityvalue(_:)-2i0s3","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityvalue(_:)-7xl1","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:)-4zwrn","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:)-9thx9","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:)-fw6y","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:message:)-3lgqr","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:message:)-81iba","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:actions:message:)-pb50","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:)-29yjg","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:)-5f18m","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:)-8gs0z","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:message:)-10h9f","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:message:)-30wrr","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(_:ispresented:presenting:actions:message:)-93ovp","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alignmentguide(_:computevalue:)-1j6fa","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alignmentguide(_:computevalue:)-7rbfv","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/aspectratio(_:contentmode:)-7fo1p","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/aspectratio(_:contentmode:)-8cmby","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(_:in:fillstyle:)-1ypnh","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(_:in:fillstyle:)-6t3g8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(in:fillstyle:)-783z6","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/background(in:fillstyle:)-7nnuz","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/badge(_:)-1fqae","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/badge(_:)-2h12t","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/badge(_:)-8s0m4","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/badge(_:)-9vm2l","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/buttonstyle(_:)-22c7i","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/buttonstyle(_:)-36jpe","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4kxc8","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-73o6q","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7nv8g","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3zktp","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5hvr2","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5r5t","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2hyx5","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6q3gu","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-l29r","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-67t6","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7a8z0","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-lton","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contentmargins(_:_:for:)-47hfe","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contentmargins(_:_:for:)-70y0e","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogsuppressiontoggle(_:issuppressed:)-11zqf","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogsuppressiontoggle(_:issuppressed:)-3c3o","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogsuppressiontoggle(_:issuppressed:)-3h4dj","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogconfirmationlabel(_:)-4t0li","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogconfirmationlabel(_:)-5f9fg","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogconfirmationlabel(_:)-8vk1h","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogmessage(_:)-3h04i","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogmessage(_:)-6u5dr","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogmessage(_:)-7lrpq","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4l1b8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-p97r","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2pm9x","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7slf9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5ixa","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8oslt","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6tg3x","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7skb5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporterfilenamelabel(_:)-1qtr","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporterfilenamelabel(_:)-5gmpb","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileexporterfilenamelabel(_:)-5gpiz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedobject(_:)-2a8gw","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedobject(_:)-6i03i","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedsceneobject(_:)-1puxx","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedsceneobject(_:)-5da5l","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedscenevalue(_:_:)-2wyc6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedscenevalue(_:_:)-7r845","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedvalue(_:_:)-3e2pt","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/focusedvalue(_:_:)-83mhv","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/help(_:)-1bltv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/help(_:)-23gay","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/help(_:)-oih3","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyboardshortcut(_:)-1potp","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyboardshortcut(_:)-60jqk","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linelimit(_:)-33eo7","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linelimit(_:)-6jn5k","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linelimit(_:)-6qlte","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linelimit(_:)-uqnu","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listitemtint(_:)-1qqbh","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listitemtint(_:)-4b4u5","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:)-12gcz","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:)-4gxcr","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:)-80xrs","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:displaymode:)-7e2va","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:displaymode:)-c4dc","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationbartitle(_:displaymode:)-dsc8","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdocument(_:preview:)-13el9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdocument(_:preview:)-1zvtq","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdocument(_:preview:)-31w6b","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationdocument(_:preview:)-59cp9","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsubtitle(_:)-10fwu","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsubtitle(_:)-6texx","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationsubtitle(_:)-9gifr","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationtitle(_:)-20c1o","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationtitle(_:)-61n5b","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationtitle(_:)-6ke9m","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationtitle(_:)-7dm5k","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/navigationtitle(_:)-81l4l","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onchange(of:initial:_:)-8d9xq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onchange(of:initial:_:)-9wz2b","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:delegate:)-2o2p6","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:delegate:)-4knsg","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:istargeted:perform:)-11arw","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:istargeted:perform:)-4hb91","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:istargeted:perform:)-6o4zu","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ondrop(of:istargeted:perform:)-94x9x","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/onpastecommand(of:perform:)-6xayd","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onpastecommand(of:perform:)-91i7a","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/onpastecommand(of:validator:perform:)-3upti","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onpastecommand(of:validator:perform:)-z17j","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/padding(_:)-7nqwh","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/padding(_:)-dzwo","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/renameaction(_:)-9fcpf","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/renameaction(_:)-9kskf","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/safeareainset(edge:alignment:spacing:content:)-489wp","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/safeareainset(edge:alignment:spacing:content:)-82rl5","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/safeareapadding(_:)-3e761","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/safeareapadding(_:)-770t","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scaleeffect(_:anchor:)-6jsr7","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scaleeffect(_:anchor:)-7c9xs","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2epak","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-83twr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9q5i0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:placement:prompt:token:)-4h2xw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:placement:prompt:token:)-5wsll","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:editabletokens:placement:prompt:token:)-653fi","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:ispresented:placement:prompt:)-6flfb","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:ispresented:placement:prompt:)-7tq3l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:ispresented:placement:prompt:)-up39","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:)-343nv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:)-6vkdg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:)-9ipio","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:suggestions:)-55qvm","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:suggestions:)-6cwvg","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:placement:prompt:suggestions:)-6qqz4","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-4c6vp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-57uby","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:ispresented:placement:prompt:token:)-5gzyh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:placement:prompt:token:)-1w1fg","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:placement:prompt:token:)-4mk3e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:placement:prompt:token:)-4n4x3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1bcd5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-41buw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-557dy","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-265u7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8r5ux","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9dst0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbar(content:)-4iu0l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbar(content:)-9iddt","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/typeselectequivalent(_:)-2gc2b","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/typeselectequivalent(_:)-44awu","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/typeselectequivalent(_:)-8h4m5","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/typesettinglanguage(_:isenabled:)-31ln0","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/typesettinglanguage(_:isenabled:)-4sxnt","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputslist\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/midikit\/midioutputslist\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputslist","title":"MIDIOutputsList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputspicker\/init(title:selectionid:selectiondisplayname:showicons:hideowned:)","title":"init(title: String, selectionID: Binding<MIDIIdentifier?>, selectionDisplayName: Binding<String?>, showIcons: Bool, hideOwned: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputspicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/midikit\/midiinputspicker\/hideowned","title":"var hideOwned: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputspicker\/selectiondisplayname","title":"var selectionDisplayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midiinputspicker\/selectionid","title":"var selectionID: MIDIIdentifier?","type":"property"},{"path":"\/documentation\/midikit\/midiinputspicker\/showicons","title":"var showIcons: Bool","type":"property"},{"path":"\/documentation\/midikit\/midiinputspicker\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(activationpoint:)-2onl8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(activationpoint:)-5qbiy","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaction(named:_:)-1htfy","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaction(named:_:)-3849i","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaction(named:_:)-68gvd","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityactivationpoint(_:)-2h4id","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityactivationpoint(_:)-6tu1u","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-13k0b","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-1cj0p","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-38z6f","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-3ex6w","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-3hh8x","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-4yzx4","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-551n6","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitycustomcontent(_:_:importance:)-8bxkn","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityhint(_:)-4max2","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityhint(_:)-7f1em","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityhint(_:)-88kvi","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityinputlabels(_:)-2wr8p","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityinputlabels(_:)-7fwiy","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityinputlabels(_:)-9qkxs","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitylabel(_:)-1gtzp","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitylabel(_:)-9xtcl","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitylabel(_:)-rvul","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:)-1jn8g","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:)-22ii","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:)-92lpz","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:)-zs0","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-2mthp","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-7g8p0","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-7l567","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-y2s","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entrylabel:)-31qpp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entrylabel:)-5o9xb","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entrylabel:)-7ob8c","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:entries:entrylabel:)-8r11s","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:textranges:)-145lp","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:textranges:)-28d8w","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:textranges:)-5fss2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotor(_:textranges:)-8dsvj","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityvalue(_:)-6udsf","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityvalue(_:)-7lbgm","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityvalue(_:)-8jsq0","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:)-1083f","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:)-1s2e","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:)-4u2g8","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:message:)-2wcpu","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:message:)-6fdve","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:actions:message:)-95faj","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:)-2p5ds","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:)-5qwx1","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:)-7h1eo","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:message:)-15os8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:message:)-2f090","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(_:ispresented:presenting:actions:message:)-57ln4","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alignmentguide(_:computevalue:)-3wa8j","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alignmentguide(_:computevalue:)-6skru","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/aspectratio(_:contentmode:)-2c9rp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/aspectratio(_:contentmode:)-7c0t6","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(_:in:fillstyle:)-8kdz3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(_:in:fillstyle:)-9bv3q","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(in:fillstyle:)-1cjl2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/background(in:fillstyle:)-2lea3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/badge(_:)-38rcj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/badge(_:)-3nbus","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/badge(_:)-3yh1r","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/badge(_:)-t2p","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/buttonstyle(_:)-2b2u","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/buttonstyle(_:)-4r6wm","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-22xrr","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6lpww","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8e0zj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6yek3","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7bbp3","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9clll","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7a0xk","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9yx3v","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-et9m","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6sc1f","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8d8fo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-kbn5","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contentmargins(_:_:for:)-4qtmi","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contentmargins(_:_:for:)-91ax2","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogsuppressiontoggle(_:issuppressed:)-17f1z","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogsuppressiontoggle(_:issuppressed:)-241wb","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogsuppressiontoggle(_:issuppressed:)-7t1di","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogconfirmationlabel(_:)-39brx","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogconfirmationlabel(_:)-75a7k","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogconfirmationlabel(_:)-7l7cz","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogmessage(_:)-45rgm","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogmessage(_:)-g53f","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogmessage(_:)-mmhc","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1ddyg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9rlul","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5znjo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-79gwa","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6z5d0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-70mvb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1k663","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5t1u","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporterfilenamelabel(_:)-4h733","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporterfilenamelabel(_:)-6dl6n","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileexporterfilenamelabel(_:)-94dm3","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedobject(_:)-2yy0u","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedobject(_:)-hmt6","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedsceneobject(_:)-6v20u","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedsceneobject(_:)-8hbnc","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedscenevalue(_:_:)-854kf","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedscenevalue(_:_:)-zpli","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedvalue(_:_:)-4k9ug","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/focusedvalue(_:_:)-7lrgz","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/help(_:)-4ppal","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/help(_:)-9a8ne","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/help(_:)-illf","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyboardshortcut(_:)-1csg4","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyboardshortcut(_:)-1tfmi","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linelimit(_:)-2fdzl","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linelimit(_:)-3ewaj","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linelimit(_:)-769fx","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linelimit(_:)-84ksl","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listitemtint(_:)-9eejg","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listitemtint(_:)-yckb","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:)-2wsyu","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:)-2xo05","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:)-4xsru","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:displaymode:)-55pqg","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:displaymode:)-6nyup","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationbartitle(_:displaymode:)-7ajmj","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdocument(_:preview:)-2tmqw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdocument(_:preview:)-3ylw1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdocument(_:preview:)-7evt8","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationdocument(_:preview:)-9ij77","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsubtitle(_:)-251o1","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsubtitle(_:)-5w5jk","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationsubtitle(_:)-8hmyv","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationtitle(_:)-15usp","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationtitle(_:)-66qf2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationtitle(_:)-691q8","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationtitle(_:)-jcm5","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/navigationtitle(_:)-yws5","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onchange(of:initial:_:)-1rwk1","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onchange(of:initial:_:)-3jo0j","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:delegate:)-4sacd","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:delegate:)-9f9pr","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:istargeted:perform:)-43ge4","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:istargeted:perform:)-72g6x","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:istargeted:perform:)-76ds","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ondrop(of:istargeted:perform:)-9h3xm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/onpastecommand(of:perform:)-5drv3","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onpastecommand(of:perform:)-8r7wg","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onpastecommand(of:validator:perform:)-25qbl","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/onpastecommand(of:validator:perform:)-72chc","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/padding(_:)-70ick","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/padding(_:)-7djth","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/renameaction(_:)-2rlkz","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/renameaction(_:)-4yt9q","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/safeareainset(edge:alignment:spacing:content:)-4c9yk","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/safeareainset(edge:alignment:spacing:content:)-9kpjf","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/safeareapadding(_:)-3fkj6","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/safeareapadding(_:)-6dpy","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scaleeffect(_:anchor:)-3ptrk","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scaleeffect(_:anchor:)-3z0qq","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3ccwp","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-69nwl","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8fi8z","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:placement:prompt:token:)-6ki62","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:placement:prompt:token:)-6q7fz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:editabletokens:placement:prompt:token:)-9mvto","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:ispresented:placement:prompt:)-18zcn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:ispresented:placement:prompt:)-45zgs","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:ispresented:placement:prompt:)-5zb2q","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:)-3c42h","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:)-497s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:)-8obsc","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:suggestions:)-21cw5","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:suggestions:)-9eggg","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:placement:prompt:suggestions:)-pzf4","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-4pzm9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-4z0uo","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-9jhzj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:placement:prompt:token:)-3wd5p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:placement:prompt:token:)-45u2h","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:placement:prompt:token:)-7q4fn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-49vit","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4dir3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6ymgq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1rczp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-28jzm","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2d0i2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbar(content:)-2s5b","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbar(content:)-5ofun","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/typeselectequivalent(_:)-2kov2","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/typeselectequivalent(_:)-6q2b6","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/typeselectequivalent(_:)-93y5x","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/typesettinglanguage(_:isenabled:)-2v7nz","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/typesettinglanguage(_:isenabled:)-3r0h4","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midiinputspicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/midikit\/midiinputspicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiinputspicker","title":"MIDIInputsPicker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputspicker\/init(title:selectionid:selectiondisplayname:showicons:hideowned:)","title":"init(title: String, selectionID: Binding<MIDIIdentifier?>, selectionDisplayName: Binding<String?>, showIcons: Bool, hideOwned: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputspicker\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/midikit\/midioutputspicker\/hideowned","title":"var hideOwned: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputspicker\/selectiondisplayname","title":"var selectionDisplayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midioutputspicker\/selectionid","title":"var selectionID: MIDIIdentifier?","type":"property"},{"path":"\/documentation\/midikit\/midioutputspicker\/showicons","title":"var showIcons: Bool","type":"property"},{"path":"\/documentation\/midikit\/midioutputspicker\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(activationpoint:)-1gvll","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(activationpoint:)-8ck9e","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaction(named:_:)-1sfew","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaction(named:_:)-6vjde","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaction(named:_:)-9yeg5","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityactivationpoint(_:)-2dxma","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityactivationpoint(_:)-6nmdf","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-11tw2","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-26dvx","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-45ghv","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-74hiw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-7v9fd","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-8ax70","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-90nfk","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitycustomcontent(_:_:importance:)-evsc","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityhint(_:)-2f4pk","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityhint(_:)-5jay5","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityhint(_:)-9a4ky","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityinputlabels(_:)-2w4nv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityinputlabels(_:)-5gp7l","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityinputlabels(_:)-8d5mz","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitylabel(_:)-1cdtm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitylabel(_:)-5yktr","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitylabel(_:)-6fm0o","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:)-3mmlr","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:)-54pi","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:)-5gv3b","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:)-6os0e","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-1rlqz","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-57yi4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-6z9bk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entryid:entrylabel:)-98h6q","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entrylabel:)-19cj2","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entrylabel:)-2e902","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entrylabel:)-3sbgy","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:entries:entrylabel:)-49rzk","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:textranges:)-4c0je","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:textranges:)-60ngp","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:textranges:)-65t2h","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotor(_:textranges:)-8bc6u","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityvalue(_:)-46671","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityvalue(_:)-4s7td","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityvalue(_:)-6ru7r","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:)-2s5xa","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:)-4fmfz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:)-9khpb","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:message:)-26y6x","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:message:)-975p9","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:actions:message:)-9j5xq","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:)-356io","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:)-4amqb","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:)-7n1mj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:message:)-632si","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:message:)-8wtq7","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(_:ispresented:presenting:actions:message:)-itpl","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alignmentguide(_:computevalue:)-7522f","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alignmentguide(_:computevalue:)-7bdh8","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/aspectratio(_:contentmode:)-19sv3","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/aspectratio(_:contentmode:)-3obzc","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(_:in:fillstyle:)-7tn2x","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(_:in:fillstyle:)-99un3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(in:fillstyle:)-2a4yb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/background(in:fillstyle:)-3sh8z","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/badge(_:)-2gsvh","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/badge(_:)-8bkil","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/badge(_:)-8jw63","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/badge(_:)-8uwo6","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/buttonstyle(_:)-4q9oo","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/buttonstyle(_:)-8j4zh","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4u034","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4v17m","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4zt9q","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3d90l","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5dk13","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6zzem","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3unle","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6om35","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7fdo6","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1b0mo","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4vh5t","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5jsnd","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contentmargins(_:_:for:)-10h4","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contentmargins(_:_:for:)-8my0u","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogsuppressiontoggle(_:issuppressed:)-175bw","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogsuppressiontoggle(_:issuppressed:)-66iwt","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogsuppressiontoggle(_:issuppressed:)-9cfqa","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogconfirmationlabel(_:)-2sl08","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogconfirmationlabel(_:)-4kmxh","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogconfirmationlabel(_:)-9917q","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogmessage(_:)-6smws","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogmessage(_:)-84mvb","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogmessage(_:)-93fwv","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4h77a","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-611h5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5ti4s","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6ivi0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3ds4n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9g4hj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-21kzo","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9j35v","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporterfilenamelabel(_:)-1rlrn","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporterfilenamelabel(_:)-9fkiz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileexporterfilenamelabel(_:)-kb3l","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedobject(_:)-26dk2","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedobject(_:)-54wru","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedsceneobject(_:)-3m33b","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedsceneobject(_:)-69tf4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedscenevalue(_:_:)-3ai1n","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedscenevalue(_:_:)-4t0tc","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedvalue(_:_:)-4xj24","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/focusedvalue(_:_:)-73km3","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/help(_:)-2x99f","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/help(_:)-3mi33","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/help(_:)-90eml","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyboardshortcut(_:)-44ghq","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyboardshortcut(_:)-6y3cv","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linelimit(_:)-3a7q2","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linelimit(_:)-4gc4o","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linelimit(_:)-4jyh6","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linelimit(_:)-6h1ik","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listitemtint(_:)-h8f2","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listitemtint(_:)-onz3","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:)-1pws7","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:)-1s0x5","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:)-7r8ps","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:displaymode:)-1m79t","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:displaymode:)-2q75l","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationbartitle(_:displaymode:)-77yli","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdocument(_:preview:)-127hv","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdocument(_:preview:)-73cfi","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdocument(_:preview:)-823or","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationdocument(_:preview:)-95f3x","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsubtitle(_:)-38e9f","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsubtitle(_:)-55tw6","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationsubtitle(_:)-758h0","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationtitle(_:)-1qxic","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationtitle(_:)-6fr8g","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationtitle(_:)-6i4s8","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationtitle(_:)-7jber","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/navigationtitle(_:)-95z5h","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onchange(of:initial:_:)-57yew","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onchange(of:initial:_:)-687tk","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:delegate:)-80id9","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:delegate:)-9pdvj","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:istargeted:perform:)-2ygme","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:istargeted:perform:)-3k299","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:istargeted:perform:)-4o1rz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ondrop(of:istargeted:perform:)-9rs59","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/onpastecommand(of:perform:)-63g0h","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onpastecommand(of:perform:)-tdel","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onpastecommand(of:validator:perform:)-57mz5","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/onpastecommand(of:validator:perform:)-61ckz","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/padding(_:)-5di9j","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/padding(_:)-9nhc8","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/renameaction(_:)-503mf","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/renameaction(_:)-8aby","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/safeareainset(edge:alignment:spacing:content:)-3nfnm","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/safeareainset(edge:alignment:spacing:content:)-7cs91","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/safeareapadding(_:)-1epvf","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/safeareapadding(_:)-5izek","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scaleeffect(_:anchor:)-76zzd","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scaleeffect(_:anchor:)-9h688","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1ak0f","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2z840","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6et3w","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:placement:prompt:token:)-1jk5u","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:placement:prompt:token:)-544s7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:editabletokens:placement:prompt:token:)-8k2vd","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:ispresented:placement:prompt:)-4upk9","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:ispresented:placement:prompt:)-j4oj","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:ispresented:placement:prompt:)-m6eq","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:)-1oa37","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:)-5zxbg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:)-94lzp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:suggestions:)-1kwlt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:suggestions:)-9na4x","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:placement:prompt:suggestions:)-9nllh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-102i1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-2pg7p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:ispresented:placement:prompt:token:)-2roo2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:placement:prompt:token:)-52rxd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:placement:prompt:token:)-977l2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:placement:prompt:token:)-9uqql","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-13udk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4zm85","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8f02g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2bvmh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-83e9d","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8rzi5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbar(content:)-8ge42","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbar(content:)-9bq5v","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/typeselectequivalent(_:)-2f24y","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/typeselectequivalent(_:)-6ihe5","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/typeselectequivalent(_:)-9dkj1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/typesettinglanguage(_:isenabled:)-5e7ja","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/typesettinglanguage(_:isenabled:)-60goj","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/midikit\/midioutputspicker\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/midikit\/midioutputspicker\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midioutputspicker","title":"MIDIOutputsPicker","type":"struct"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/endpoint","title":"Endpoint","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/endpoints","title":"var endpoints: [Self.Endpoint]","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/ids","title":"var ids: [MIDIIdentifier]","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/maskedfilter","title":"var maskedFilter: MIDIEndpointMaskedFilter?","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/selectiondisplayname","title":"var selectionDisplayName: String?","type":"property"},{"path":"\/documentation\/midikit\/midiendpointsselectable\/selectionid","title":"var selectionID: MIDIIdentifier?","type":"property"}],"path":"\/documentation\/midikit\/midiendpointsselectable","title":"MIDIEndpointsSelectable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiinputsselectable\/updatingoutputconnection(withtag:)","title":"func updatingOutputConnection(withTag: String?) -> Self","type":"method"}],"path":"\/documentation\/midikit\/midiinputsselectable","title":"MIDIInputsSelectable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midioutputsselectable\/updatinginputconnection(withtag:)","title":"func updatingInputConnection(withTag: String?) -> Self","type":"method"}],"path":"\/documentation\/midikit\/midioutputsselectable","title":"MIDIOutputsSelectable","type":"protocol"}],"path":"\/documentation\/midikit\/midikitui-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitui","title":"MIDIKitUI","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitsmf-getting-started","title":"Getting Started","type":"article"},{"title":"Working with MIDI Files","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(format:timebase:chunks:)","title":"init(format: MIDIFile.Format, timeBase: MIDIFile.TimeBase, chunks: [MIDIFile.Chunk])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(midifile:)-4801k","title":"init(midiFile: String) throws","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(midifile:)-6nmrf","title":"init(midiFile: URL) throws","type":"init"},{"path":"\/documentation\/midikit\/midifile\/init(rawdata:)","title":"init(rawData: Data) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunks","title":"var chunks: [MIDIFile.Chunk]","type":"property"},{"path":"\/documentation\/midikit\/midifile\/format-swift.property","title":"var format: MIDIFile.Format","type":"property"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.property","title":"var timeBase: MIDIFile.TimeBase","type":"property"},{"path":"\/documentation\/midikit\/midifile\/tracks","title":"var tracks: [MIDIFile.Chunk.Track]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/rawdata()","title":"func rawData() throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/init(format:timebase:)","title":"init(format: MIDIFile.Format, timeBase: MIDIFile.TimeBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/format","title":"var format: MIDIFile.Format","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/timebase","title":"var timeBase: MIDIFile.TimeBase","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/staticidentifier","title":"static let staticIdentifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/header\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/header","title":"MIDIFile.Chunk.Header","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init(events:)","title":"init(events: [MIDIFileEvent])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/init(midi1smfrawbytesstream:)","title":"init<D>(midi1SMFRawBytesStream: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/events","title":"var events: [MIDIFileEvent]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/eventsatbeatpositions(ppq:)","title":"func eventsAtBeatPositions(ppq: UInt16) -> [(beat: Double, event: MIDIFileEvent)]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/staticidentifier","title":"static let staticIdentifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/track","title":"MIDIFile.Chunk.Track","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/init(id:rawdata:)","title":"init(id: String, rawData: Data?)","type":"init"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/init(midi1smfrawbytesstream:)","title":"init<D>(midi1SMFRawBytesStream: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/rawdata","title":"var rawData: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk\/midifilechunk-implementations","title":"MIDIFileChunk Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk\/unrecognizedchunk","title":"MIDIFile.Chunk.UnrecognizedChunk","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/other(_:)","title":"case other(MIDIFile.Chunk.UnrecognizedChunk)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track(_:)-swift.enum.case","title":"case track(MIDIFile.Chunk.Track)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/unwrappedchunk","title":"var unwrappedChunk: any MIDIFileChunk","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/other(id:rawdata:)","title":"static func other(id: String, rawData: Data?) -> MIDIFile.Chunk","type":"method"},{"path":"\/documentation\/midikit\/midifile\/chunk\/track(_:)-swift.type.method","title":"static func track([MIDIFileEvent]) -> MIDIFile.Chunk","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/chunk\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/chunk\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/chunk\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/chunk","title":"MIDIFile.Chunk","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/filenotfound","title":"case fileNotFound","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/filereaderror","title":"case fileReadError","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/malformedurl","title":"case malformedURL","type":"case"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/notimplemented","title":"case notImplemented","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/decodeerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midifile\/decodeerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midifile\/decodeerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/decodeerror","title":"MIDIFile.DecodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/internalinconsistency(_:)","title":"case internalInconsistency(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/encodeerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midifile\/encodeerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midifile\/encodeerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/encodeerror","title":"MIDIFile.EncodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/multipletracksasynchronous","title":"case multipleTracksAsynchronous","type":"case"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/multipletrackssynchronous","title":"case multipleTracksSynchronous","type":"case"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/singletrack","title":"case singleTrack","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/format-swift.enum","title":"MIDIFile.Format","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/fps24","title":"case fps24","type":"case"},{"path":"\/documentation\/midikit\/midifile\/framerate\/fps25","title":"case fps25","type":"case"},{"path":"\/documentation\/midikit\/midifile\/framerate\/fps29_97d","title":"case fps29_97d","type":"case"},{"path":"\/documentation\/midikit\/midifile\/framerate\/fps30","title":"case fps30","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/framerate\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/framerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/framerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/framerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/framerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/framerate","title":"MIDIFile.FrameRate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/fps24","title":"case fps24","type":"case"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/fps25","title":"case fps25","type":"case"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/fps29_97d","title":"case fps29_97d","type":"case"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/fps30","title":"case fps30","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/timecoderate","title":"var timecodeRate: TimecodeFrameRate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/smpteoffsetframerate","title":"MIDIFile.SMPTEOffsetFrameRate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/musical(ticksperquarternote:)","title":"case musical(ticksPerQuarterNote: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/timecode(smpteformat:ticksperframe:)","title":"case timecode(smpteFormat: MIDIFile.FrameRate, ticksPerFrame: UInt8)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/init(rawbytes:)","title":"init?(rawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/init(rawdata:)","title":"init?(rawData: Data)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/default()","title":"static func `default`() -> MIDIFile.TimeBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile\/timebase-swift.enum","title":"MIDIFile.TimeBase","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifile\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midifile\/==(_:_:)","title":"static func == (MIDIFile, MIDIFile) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifile\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifile\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifile\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifile","title":"MIDIFile","type":"struct"},{"children":[{"title":"MIDI Track Leading","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix(delta:port:)","title":"static func portPrefix(delta: MIDIFileEvent.DeltaTime, port: UInt7) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix(delta:event:)","title":"case portPrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.PortPrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/init(port:)","title":"init(port: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/port","title":"var port: UInt7","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/portprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.PortPrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/portprefix","title":"MIDIFileEvent.PortPrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-portprefix","title":"Port Prefix","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix(delta:channel:)","title":"static func channelPrefix(delta: MIDIFileEvent.DeltaTime, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix(delta:event:)","title":"case channelPrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.ChannelPrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/init(channel:)","title":"init(channel: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/channel","title":"var channel: UInt4","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.ChannelPrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/channelprefix","title":"MIDIFileEvent.ChannelPrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-channelprefix","title":"Channel Prefix","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:hr:min:sec:fr:subfr:frrate:)","title":"static func smpteOffset(delta: MIDIFileEvent.DeltaTime, hr: UInt8, min: UInt8, sec: UInt8, fr: UInt8, subFr: UInt8, frRate: MIDIFile.SMPTEOffsetFrameRate) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:scaling:)","title":"static func smpteOffset(delta: MIDIFileEvent.DeltaTime, scaling: Timecode) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset(delta:event:)","title":"case smpteOffset(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SMPTEOffset)","type":"case"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/components","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/framerate","title":"var frameRate: MIDIFile.SMPTEOffsetFrameRate","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/frames","title":"var frames: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/hours","title":"var hours: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/minutes","title":"var minutes: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/seconds","title":"var seconds: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/subframes","title":"var subframes: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.SMPTEOffset.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/smpteoffset","title":"MIDIFileEvent.SMPTEOffset","type":"struct"},{"title":"Types","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-14zf4","title":"convenience init(using: Timecode, stringFormat: Timecode.StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-2uon2","title":"init(using: Timecode.Properties?, stringFormat: Timecode.StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/framerate","title":"var frameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/timecodeproperties","title":"var timecodeProperties: Timecode.Properties?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/midikit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/*(_:_:)","title":"static func * (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/+(_:_:)","title":"static func + (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/-(_:_:)","title":"static func - (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-3wywy","title":"static func \/ (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/init(_:base:)","title":"init(Timecode.FrameCount.Value, base: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/iszero","title":"var isZero: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframesbase","title":"let subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.property","title":"var value: Timecode.FrameCount.Value","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/wholeframes","title":"var wholeFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/adding(_:)","title":"func adding(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/dividing(by:)","title":"func dividing(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/multiplying(by:)","title":"func multiplying(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subtracting(_:)","title":"func subtracting(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/combined(frames:)","title":"case combined(frames: Double)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/frames(_:)","title":"case frames(Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/split(frames:subframes:)","title":"case split(frames: Int, subFrames: Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/splitunitinterval(frames:subframesunitinterval:)","title":"case splitUnitInterval(frames: Int, subFramesUnitInterval: Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum","title":"Timecode.FrameCount.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:)-99vn3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:)-tl76","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-21k75","title":"static func > (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-6zfr9","title":"static func < (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-9h0wy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_=(_:_:)-1hukx","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_=(_:_:)-5h95v","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-1ly37","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-1vtbw","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-3t6b","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/==(_:_:)","title":"static func == (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct","title":"Timecode.FrameCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/init(rate:base:limit:)","title":"init(rate: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/upperlimit","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct","title":"Timecode.Properties","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-2408u","title":"static func * (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-31yyg","title":"static func * <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-8a2na","title":"static func *= (inout Timecode, Double)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-9nsob","title":"static func *= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:)","title":"static func + (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:_:)","title":"static func + (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+=(_:_:)","title":"static func += (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:)","title":"static func - (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:_:)","title":"static func - (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-=(_:_:)","title":"static func -= (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-323qu","title":"static func \/ (Timecode, Timecode) -> Double","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-563ih","title":"static func \/ <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-5s440","title":"static func \/ (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-3n4p4","title":"static func \/= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-hpkf","title":"static func \/= (inout Timecode, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(_:)-3i5yx","title":"init(RichTimecodeSourceValue) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:)-6vdaz","title":"init(GuaranteedRichTimecodeSourceValue)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-5c83i","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-6c3tu","title":"init(GuaranteedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-w372","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:by:)-1mmhx","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit, by: Timecode.ValidationRule) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:by:)-7ini4","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit, by: Timecode.ValidationRule)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-41kgh","title":"init(FormattedTimecodeSourceValue, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-7lle2","title":"init(GuaranteedTimecodeSourceValue, using: Timecode.Properties)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-91fix","title":"init(TimecodeSourceValue, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:by:)-62c6g","title":"init(TimecodeSourceValue, using: Timecode.Properties, by: Timecode.ValidationRule)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:by:)-vi3i","title":"init(FormattedTimecodeSourceValue, using: Timecode.Properties, by: Timecode.ValidationRule) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.property","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/timecode\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/feetandframesvalue","title":"var feetAndFramesValue: FeetAndFrames","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.property","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Timecode.Component>","type":"property"},{"path":"\/documentation\/midikit\/timecode\/iszero","title":"var isZero: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressible","title":"var maxFrameCountExpressible: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframecountexpressible","title":"var maxSubFrameCountExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframesexpressible","title":"var maxSubFramesExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.property","title":"var properties: Timecode.Properties","type":"property"},{"path":"\/documentation\/midikit\/timecode\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecode\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecode\/scaledtomidifilesmpteframerate","title":"var scaledToMIDIFileSMPTEFrameRate: (scaledTimecode: Timecode?, smpteFR: MIDIFile.SMPTEOffsetFrameRate)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.property","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.property","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"path":"\/documentation\/midikit\/timecode\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-14tde","title":"func add(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-3240f","title":"func add(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-55w29","title":"func add(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-71xxo","title":"func add(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-857gw","title":"func add(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-88aua","title":"func add(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-9m8xq","title":"func add(Timecode) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-14dcw","title":"func add(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-1yniv","title":"func add(TimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-2njan","title":"func add(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-42lw","title":"func add(Timecode, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-4lww7","title":"func add(Timecode.Components, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-4nkq8","title":"func add(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-6fwhs","title":"func add(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-1o83k","title":"func adding(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-5bv1","title":"func adding(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-7b8yj","title":"func adding(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-8rxca","title":"func adding(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-904hr","title":"func adding(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-qlqv","title":"func adding(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-z5j7","title":"func adding(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-19lr1","title":"func adding(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-6awjq","title":"func adding(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-74tzs","title":"func adding(TimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-7fcyg","title":"func adding(Timecode.Components, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-8pf7p","title":"func adding(Timecode, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-91bfw","title":"func adding(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-9o39d","title":"func adding(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/asinterval(_:)","title":"func asInterval(FloatingPointSign) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/clampcomponents()","title":"func clampComponents()","type":"method"},{"path":"\/documentation\/midikit\/timecode\/cmformatdescription(extensions:)","title":"func cmFormatDescription(extensions: CMFormatDescription.Extensions?) throws -> CMTimeCodeFormatDescription","type":"method"},{"path":"\/documentation\/midikit\/timecode\/compare(to:timelinestart:)","title":"func compare(to: Timecode, timelineStart: Timecode?) -> ComparisonResult","type":"method"},{"path":"\/documentation\/midikit\/timecode\/converted(to:preservingvalues:)","title":"func converted(to: TimecodeFrameRate, preservingValues: Bool) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:)","title":"func divide(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:by:)","title":"func divide(Double, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-4bgmz","title":"func dividing(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-96rdz","title":"func dividing(Timecode.Components) throws -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-9pfge","title":"func dividing(Timecode) throws -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:by:)","title":"func dividing(Double, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/interval(to:)","title":"func interval(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:)","title":"func multiply(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:by:)","title":"func multiply(Double, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:)","title":"func multiplying(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:by:)","title":"func multiplying(Double, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offset(by:)","title":"func offset(by: TimecodeInterval)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offsetting(by:)","title":"func offsetting(by: TimecodeInterval) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/rounddown(tonearest:)","title":"func roundDown(toNearest: Timecode.Component)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundup(tonearest:)","title":"func roundUp(toNearest: Timecode.Component) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundeddown(tonearest:)","title":"func roundedDown(toNearest: Timecode.Component) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundedup(tonearest:)","title":"func roundedUp(toNearest: Timecode.Component) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesdoublevalue(samplerate:)","title":"func samplesDoubleValue(sampleRate: Int) -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesvalue(samplerate:)","title":"func samplesValue(sampleRate: Int) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-22ndo","title":"func set(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-2rc5m","title":"func set(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-3p8ei","title":"func set(GuaranteedTimecodeSourceValue)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-5y7su","title":"func set(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-89p8h","title":"func set(GuaranteedRichTimecodeSourceValue) -> Timecode.Properties","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:by:)-1goc0","title":"func set(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:by:)-92yoi","title":"func set(TimecodeSourceValue, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-1dhd5","title":"func setting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-3akbp","title":"func setting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-5q0hp","title":"func setting(GuaranteedRichTimecodeSourceValue) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-81hub","title":"func setting(GuaranteedTimecodeSourceValue) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-95f3c","title":"func setting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:by:)-2fpos","title":"func setting(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:by:)-42wj3","title":"func setting(TimecodeSourceValue, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvalue(format:)","title":"func stringValue(format: Timecode.StringFormat) -> String","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: Timecode.StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-1rf5l","title":"func subtract(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-3j57f","title":"func subtract(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-5gp46","title":"func subtract(Timecode) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-7furw","title":"func subtract(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-9js9a","title":"func subtract(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-9oxpu","title":"func subtract(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-ocmj","title":"func subtract(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-33g0h","title":"func subtract(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-3onj2","title":"func subtract(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-4l96x","title":"func subtract(Timecode, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-508dt","title":"func subtract(TimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-857ne","title":"func subtract(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-8cjf8","title":"func subtract(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-9n8ue","title":"func subtract(Timecode.Components, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-1o05d","title":"func subtracting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-29zr6","title":"func subtracting(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-3ovst","title":"func subtracting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-49fu","title":"func subtracting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-4k13k","title":"func subtracting(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-8mzxx","title":"func subtracting(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-9gs31","title":"func subtracting(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-17ava","title":"func subtracting(Timecode.Components, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-2gt9c","title":"func subtracting(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-3pd2x","title":"func subtracting(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-42lpp","title":"func subtracting(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-4i08g","title":"func subtracting(Timecode, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-92c0s","title":"func subtracting(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-p5la","title":"func subtracting(TimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transform(using:)","title":"func transform(using: TimecodeTransformer)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transformed(using:)","title":"func transformed(using: TimecodeTransformer) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/validrange(of:)","title":"func validRange(of: Timecode.Component) -> ClosedRange<Int>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformat","title":"Timecode.StringFormat","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components(of:at:)","title":"static func components(of: Timecode.FrameCount, at: TimecodeFrameRate) -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount(of:at:base:)","title":"static func frameCount(of: Timecode.Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:at:base:limit:)","title":"static func invalidComponents(in: Timecode.Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:using:)","title":"static func invalidComponents(in: Timecode.Components, using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/days","title":"case days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/subframes","title":"case subFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/component\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/component","title":"Timecode.Component","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/missingornonstandardframerate","title":"case missingOrNonStandardFrameRate","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/unknowntimecode","title":"case unknownTimecode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror","title":"Timecode.MediaParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/internalerror","title":"case internalError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror","title":"Timecode.MediaWriteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/filenamecompatible","title":"case filenameCompatible","type":"case"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/showsubframes","title":"case showSubFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption","title":"Timecode.StringFormatOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/malformed","title":"case malformed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror","title":"Timecode.StringParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/max100subframes","title":"case max100SubFrames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/max80subframes","title":"case max80SubFrames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/quarterframes","title":"case quarterFrames","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/convert(subframes:to:)","title":"func convert(subFrames: Int, to: Timecode.SubFramesBase) -> Int","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/default()","title":"static func `default`() -> Timecode.SubFramesBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/id","title":"var id: Timecode.SubFramesBase.RawValue","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum","title":"Timecode.SubFramesBase","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/max100days","title":"case max100Days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/max24hours","title":"case max24Hours","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum","title":"Timecode.UpperLimit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationerror","title":"Timecode.ValidationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/allowinginvalid","title":"case allowingInvalid","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/clamping","title":"case clamping","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/clampingcomponents","title":"case clampingComponents","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/wrapping","title":"case wrapping","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationrule","title":"Timecode.ValidationRule","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/'...(_:)-4oa40","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'...(_:)-9ilrc","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-9emui","title":"static func < (Timecode, Timecode) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-9wjp4","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-l1q2","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-68szz","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-9myg4","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)-2mxw7","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)-91sym","title":"static func == (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/advanced(by:)","title":"func advanced(by: Timecode.Stride) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/distance(to:)","title":"func distance(to: Timecode) -> Timecode.Stride","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stride","title":"Timecode.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/timecode\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode","title":"Timecode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(at:base:limit:)","title":"func invalidComponents(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(using:)","title":"func invalidComponents(using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:at:base:limit:)","title":"func validRange(of: Timecode.Component, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> ClosedRange<Int>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:using:)","title":"func validRange(of: Timecode.Component, using: Timecode.Properties) -> ClosedRange<Int>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/zero","title":"static let zero: Timecode.Components","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-smpteoffset","title":"SMPTE Offset","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber(delta:sequence:)","title":"static func sequenceNumber(delta: MIDIFileEvent.DeltaTime, sequence: UInt16) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber(delta:event:)","title":"case sequenceNumber(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SequenceNumber)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/init(sequence:)","title":"init(sequence: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/sequence","title":"var sequence: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.SequenceNumber.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/sequencenumber","title":"MIDIFileEvent.SequenceNumber","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-sequencenumber","title":"Sequence Number","type":"symbol"},{"title":"Temporal","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature(delta:flatsorsharps:majorkey:)","title":"static func keySignature(delta: MIDIFileEvent.DeltaTime, flatsOrSharps: Int8, majorKey: Bool) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature(delta:event:)","title":"case keySignature(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.KeySignature)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/init(flatsorsharps:majorkey:)","title":"init(flatsOrSharps: Int8, majorKey: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/flatsorsharps","title":"var flatsOrSharps: Int8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/majorkey","title":"var majorKey: Bool","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/keysignature\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.KeySignature.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/keysignature","title":"MIDIFileEvent.KeySignature","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-keysignature","title":"Key Signature","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature(delta:numerator:denominator:)","title":"static func timeSignature(delta: MIDIFileEvent.DeltaTime, numerator: UInt8, denominator: UInt8) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature(delta:event:)","title":"case timeSignature(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.TimeSignature)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init(numerator:denominator:midiclocksbetweenmetronomeclicks:numberof32ndnotesinaquarternote:)","title":"init(numerator: UInt8, denominator: UInt8, midiClocksBetweenMetronomeClicks: UInt8, numberOf32ndNotesInAQuarterNote: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/denominator","title":"var denominator: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midiclocksbetweenmetronomeclicks","title":"var midiClocksBetweenMetronomeClicks: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/numberof32ndnotesinaquarternote","title":"var numberOf32ndNotesInAQuarterNote: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/numerator","title":"var numerator: UInt8","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/timesignature\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.TimeSignature.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/timesignature","title":"MIDIFileEvent.TimeSignature","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-timesignature","title":"Time Signature","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo(delta:bpm:)","title":"static func tempo(delta: MIDIFileEvent.DeltaTime, bpm: Double) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo(delta:event:)","title":"case tempo(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Tempo)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/init(bpm:)","title":"init(bpm: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/bpm","title":"var bpm: Double","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/bpmencoded","title":"var bpmEncoded: Double","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/microseconds","title":"var microseconds: UInt32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/tempo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/tempo\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.Tempo.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/tempo\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/tempo","title":"MIDIFileEvent.Tempo","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-tempo","title":"Tempo","type":"symbol"},{"title":"Channel Voice","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:note:velocity:channel:)-560m","title":"static func noteOn(delta: MIDIFileEvent.DeltaTime, note: UInt7, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:note:velocity:channel:)-4jcss","title":"static func noteOn(delta: MIDIFileEvent.DeltaTime, note: MIDINote, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteon(delta:event:)","title":"case noteOn(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NoteOn)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/noteon","title":"MIDIFileEvent.NoteOn","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-noteon","title":"Note On","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:note:velocity:channel:)-6eth4","title":"static func noteOff(delta: MIDIFileEvent.DeltaTime, note: UInt7, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:note:velocity:channel:)-3m9r7","title":"static func noteOff(delta: MIDIFileEvent.DeltaTime, note: MIDINote, velocity: MIDIEvent.NoteVelocity, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff(delta:event:)","title":"case noteOff(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NoteOff)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/noteoff","title":"MIDIFileEvent.NoteOff","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-noteoff","title":"Note Off","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:note:amount:channel:)-71uo5","title":"static func notePressure(delta: MIDIFileEvent.DeltaTime, note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:note:amount:channel:)-2ioo1","title":"static func notePressure(delta: MIDIFileEvent.DeltaTime, note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure(delta:event:)","title":"case notePressure(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NotePressure)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/notepressure","title":"MIDIFileEvent.NotePressure","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-notepressure","title":"Note Pressure (Poly Aftertouch)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:controller:value:channel:)-145k9","title":"static func cc(delta: MIDIFileEvent.DeltaTime, controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:controller:value:channel:)-3m14a","title":"static func cc(delta: MIDIFileEvent.DeltaTime, controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/cc(delta:event:)","title":"case cc(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.CC)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/cc","title":"MIDIFileEvent.CC","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-cc","title":"CC (Control Change)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:value:channel:)","title":"static func pitchBend(delta: MIDIFileEvent.DeltaTime, value: MIDIEvent.PitchBend.Value, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:lsb:msb:channel:)","title":"static func pitchBend(delta: MIDIFileEvent.DeltaTime, lsb: UInt8, msb: UInt8, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend(delta:event:)","title":"case pitchBend(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.PitchBend)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/pitchbend","title":"MIDIFileEvent.PitchBend","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-pitchbend","title":"Pitch Bend","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pressure(delta:amount:channel:)","title":"static func pressure(delta: MIDIFileEvent.DeltaTime, amount: MIDIEvent.Pressure.Amount, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/pressure(delta:event:)","title":"case pressure(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Pressure)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/pressure","title":"MIDIFileEvent.Pressure","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-pressure","title":"Pressure (Channel Aftertouch)","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/programchange(delta:program:channel:)","title":"static func programChange(delta: MIDIFileEvent.DeltaTime, program: UInt7, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/programchange(delta:event:)","title":"case programChange(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.ProgramChange)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/programchange","title":"MIDIFileEvent.ProgramChange","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-programchange","title":"Program Change","type":"symbol"},{"title":"System Exclusive","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7(delta:manufacturer:data:)-6xiv7","title":"static func sysEx7(delta: MIDIFileEvent.DeltaTime, manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8]) throws -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7(delta:manufacturer:data:)-oc22","title":"static func sysEx7(delta: MIDIFileEvent.DeltaTime, manufacturer: MIDIEvent.SysExManufacturer, data: [UInt7]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7(delta:event:)","title":"case sysEx7(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SysEx7)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/sysex7","title":"MIDIFileEvent.SysEx7","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-sysex7","title":"System Exclusive 7","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7(delta:universaltype:deviceid:subid1:subid2:data:)-728aw","title":"static func universalSysEx7(delta: MIDIFileEvent.DeltaTime, universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8]) throws -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7(delta:universaltype:deviceid:subid1:subid2:data:)-4kjpc","title":"static func universalSysEx7(delta: MIDIFileEvent.DeltaTime, universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt7]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7(delta:event:)","title":"case universalSysEx7(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.UniversalSysEx7)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/universalsysex7","title":"MIDIFileEvent.UniversalSysEx7","type":"typealias"}],"path":"\/documentation\/midikit\/midifileevent-universalsysex7","title":"Universal System Exclusive 7","type":"symbol"},{"title":"Text","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text(delta:type:string:)","title":"static func text(delta: MIDIFileEvent.DeltaTime, type: MIDIFileEvent.Text.EventType, string: String) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text(delta:event:)","title":"case text(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.Text)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(copyright:)","title":"init(copyright: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(cuepoint:)","title":"init(cuePoint: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(devicename:)","title":"init(deviceName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(instrumentname:)","title":"init(instrumentName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(lyric:)","title":"init(lyric: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(marker:)","title":"init(marker: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(programname:)","title":"init(programName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(text:)","title":"init(text: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(trackorsequencename:)","title":"init(trackOrSequenceName: String)","type":"init"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(type:string:)","title":"init(type: MIDIFileEvent.Text.EventType, string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/texttype","title":"var textType: MIDIFileEvent.Text.EventType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/copyright","title":"case copyright","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/cuepoint","title":"case cuePoint","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/devicename","title":"case deviceName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/instrumentname","title":"case instrumentName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/lyric","title":"case lyric","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/marker","title":"case marker","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/programname","title":"case programName","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/text","title":"case text","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/trackorsequencename","title":"case trackOrSequenceName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/text\/eventtype","title":"MIDIFileEvent.Text.EventType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/text\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/text\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.Text.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/text\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/text","title":"MIDIFileEvent.Text","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-text","title":"Text","type":"symbol"},{"title":"Additional","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific(delta:data:)","title":"static func sequencerSpecific(delta: MIDIFileEvent.DeltaTime, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific(delta:event:)","title":"case sequencerSpecific(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.SequencerSpecific)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/init(data:)","title":"init(data: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/data","title":"var data: [UInt8]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.SequencerSpecific.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/sequencerspecific","title":"MIDIFileEvent.SequencerSpecific","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-sequencerspecific","title":"Sequencer Specific","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix(delta:patchset:)","title":"static func xmfPatchTypePrefix(delta: MIDIFileEvent.DeltaTime, patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix(delta:event:)","title":"case xmfPatchTypePrefix(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.XMFPatchTypePrefix)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/init(patchset:)","title":"init(patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.property","title":"var patchSet: MIDIFileEvent.XMFPatchTypePrefix.PatchSet","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/dls","title":"case DLS","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/generalmidi1","title":"case generalMIDI1","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/generalmidi2","title":"case generalMIDI2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/patchset-swift.enum","title":"MIDIFileEvent.XMFPatchTypePrefix.PatchSet","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.XMFPatchTypePrefix.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/xmfpatchtypeprefix","title":"MIDIFileEvent.XMFPatchTypePrefix","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-xmfpatchtypeprefix","title":"XMF Patch Type Prefix","type":"symbol"},{"title":"Orphan Events","type":"groupMarker"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta(delta:metatype:data:)","title":"static func unrecognizedMeta(delta: MIDIFileEvent.DeltaTime, metaType: UInt8, data: [UInt8]) -> MIDIFileEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta(delta:event:)","title":"case unrecognizedMeta(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.UnrecognizedMeta)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/init(metatype:data:)","title":"init(metaType: UInt8, data: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/metatype","title":"var metaType: UInt8","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIFileEvent.UnrecognizedMeta.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/unrecognizedmeta","title":"MIDIFileEvent.UnrecognizedMeta","type":"struct"}],"path":"\/documentation\/midikit\/midifileevent-unrecognizedmeta","title":"Unrecognized Meta","type":"symbol"},{"title":"Translation between MIDIKit.MIDIEvent","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/event()","title":"func event() -> MIDIEvent?","type":"method"},{"path":"\/documentation\/midikit\/midievent\/smfevent(delta:)","title":"func smfEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent?","type":"method"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/nrpn(delta:event:)","title":"case nrpn(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.NRPN)","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/rpn(delta:event:)","title":"case rpn(delta: MIDIFileEvent.DeltaTime, event: MIDIFileEvent.RPN)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/concretetype","title":"var concreteType: any MIDIFileEventPayload.Type","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/delta","title":"var delta: MIDIFileEvent.DeltaTime","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/eventtype","title":"var eventType: MIDIFileEventType","type":"property"},{"path":"\/documentation\/midikit\/midifileevent\/smfunwrappedevent","title":"var smfUnwrappedEvent: (delta: MIDIFileEvent.DeltaTime, event: any MIDIFileEventPayload)","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/nrpn","title":"MIDIFileEvent.NRPN","type":"typealias"},{"path":"\/documentation\/midikit\/midifileevent\/rpn","title":"MIDIFileEvent.RPN","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/nrpn(delta:parameter:change:channel:)","title":"static func nrpn(delta: MIDIFileEvent.DeltaTime, parameter: MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4) -> MIDIFileEvent","type":"method"},{"path":"\/documentation\/midikit\/midifileevent\/rpn(delta:parameter:change:channel:)","title":"static func rpn(delta: MIDIFileEvent.DeltaTime, parameter: MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4) -> MIDIFileEvent","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent","title":"MIDIFileEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note128th","title":"case note128th","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note16th","title":"case note16th","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note256th","title":"case note256th","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note32nd","title":"case note32nd","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note64th","title":"case note64th","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/note8th","title":"case note8th","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/notehalf","title":"case noteHalf","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/notequarter","title":"case noteQuarter","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/notewhole","title":"case noteWhole","type":"case"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/ticks(_:)","title":"case ticks(UInt32)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/init(ticks:using:)","title":"init?(ticks: UInt32, using: MIDIFile.TimeBase)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/ticksvalue(using:)","title":"func ticksValue(using: MIDIFile.TimeBase) -> UInt32","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midifileevent\/deltatime\/==(_:_:)","title":"static func == (MIDIFileEvent.DeltaTime, MIDIFileEvent.DeltaTime) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileevent\/deltatime","title":"MIDIFileEvent.DeltaTime","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/init(_:octave:style:)","title":"init(MIDINote.Name, octave: Int, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-34opv","title":"init(some BinaryInteger, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-51azh","title":"init(String, style: MIDINote.Style) throws","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(_:style:)-5uo8y","title":"init(UInt7, style: MIDINote.Style)","type":"init"},{"path":"\/documentation\/midikit\/midinote\/init(frequency:style:)","title":"init(frequency: Double, style: MIDINote.Style) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.property","title":"var name: MIDINote.Name","type":"property"},{"path":"\/documentation\/midikit\/midinote\/number","title":"var number: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midinote\/octave","title":"var octave: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.property","title":"var style: MIDINote.Style","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/frequencyvalue(tuning:)","title":"func frequencyValue(tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/allnotes(style:)","title":"static func allNotes(style: MIDINote.Style) -> [MIDINote]","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatefrequency(midinote:tuning:)","title":"static func calculateFrequency(midiNote: Int, tuning: Double) -> Double","type":"method"},{"path":"\/documentation\/midikit\/midinote\/calculatemidinotenumber(frequency:tuning:)","title":"static func calculateMIDINoteNumber(frequency: Double, tuning: Double) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/a_sharp","title":"case A_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/b","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/c_sharp","title":"case C_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/d_sharp","title":"case D_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/e","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/f_sharp","title":"case F_sharp","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/g_sharp","title":"case G_sharp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/init(_:)","title":"init?(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/issharp","title":"var isSharp: Bool","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/scaleoffset","title":"var scaleOffset: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/stringvalue(respellsharpasflat:unicodeaccidental:)","title":"func stringValue(respellSharpAsFlat: Bool, unicodeAccidental: Bool) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidental","title":"static let flatAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/flataccidentalunicode","title":"static let flatAccidentalUnicode: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidental","title":"static let sharpAccidental: Character","type":"property"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/sharpaccidentalunicode","title":"static let sharpAccidentalUnicode: Character","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/name-swift.enum","title":"MIDINote.Name","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/malformednotename","title":"case malformedNoteName","type":"case"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midinote\/noteerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midinote\/noteerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/noteerror","title":"MIDINote.NoteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/cakewalk","title":"case cakewalk","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/roland","title":"case roland","type":"case"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/yamaha","title":"case yamaha","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/firstoctaveoffset","title":"var firstOctaveOffset: Int","type":"property"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote\/style-swift.enum","title":"MIDINote.Style","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/'...(_:)-53mgq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'...(_:)-pq8m","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-42s7d","title":"static func < (MIDINote, MIDINote) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-6fg7k","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_(_:_:)-9lyjc","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_=(_:_:)-14zjh","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/_=(_:_:)-7exwe","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midinote\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)-78rax","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midinote\/==(_:_:)-aa41","title":"static func == (MIDINote, MIDINote) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midinote\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/advanced(by:)","title":"func advanced(by: Int) -> MIDINote","type":"method"},{"path":"\/documentation\/midikit\/midinote\/clamped(to:)","title":"func clamped(to: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/midinote\/distance(to:)","title":"func distance(to: MIDINote) -> Int","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midinote\/stride","title":"MIDINote.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/midinote\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midinote","title":"MIDINote","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifilechunk\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/midikit\/midifilechunk\/wrappedchunk","title":"var wrappedChunk: MIDIFile.Chunk","type":"property"}],"path":"\/documentation\/midikit\/midifilechunk","title":"MIDIFileChunk","type":"protocol"},{"title":"MIDIKit Protocol Conformances","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"title":"Related Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/init(bar:beat:beatdivision:ticks:beatsperbar:divisionsperbeat:ppq:isnegative:)","title":"init(bar: Int, beat: Int, beatDivision: Int, ticks: Int, beatsPerBar: Int, divisionsPerBeat: Int, ppq: Int, isNegative: Bool)","type":"init"},{"path":"\/documentation\/midikit\/musicaltimevalue\/init(elapsedticks:beatsperbar:divisionsperbeat:ppq:)","title":"init(elapsedTicks: Int, beatsPerBar: Int, divisionsPerBeat: Int, ppq: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/bar","title":"var bar: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/beat","title":"var beat: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/beatdivision","title":"var beatDivision: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/beatsperbar","title":"let beatsPerBar: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/divisionsperbeat","title":"let divisionsPerBeat: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/ppq","title":"let ppq: Int","type":"property"},{"path":"\/documentation\/midikit\/musicaltimevalue\/ticks","title":"var ticks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/elapsedbeats()","title":"func elapsedBeats() -> Double","type":"method"},{"path":"\/documentation\/midikit\/musicaltimevalue\/elapsedticks()","title":"func elapsedTicks() -> Int","type":"method"},{"path":"\/documentation\/midikit\/musicaltimevalue\/stringvalue(delimiter:forcebeatdivision:)","title":"func stringValue(delimiter: String, forceBeatDivision: Bool) -> String","type":"method"},{"path":"\/documentation\/midikit\/musicaltimevalue\/tickswithoutdivisions()","title":"func ticksWithoutDivisions() -> Int","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/'...(_:)-2yn69","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/'...(_:)-3yda2","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/_(_:_:)-4sr1b","title":"static func < (MusicalTimeValue, MusicalTimeValue) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/_(_:_:)-yl95","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/_=(_:_:)-80bxf","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/_=(_:_:)-tfpq","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/clamped(to:)-1rbdg","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/musicaltimevalue\/clamped(to:)-9ixg2","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/musicaltimevalue\/clamped(to:)-w0ew","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/musicaltimevalue\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/musicaltimevalue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/musicaltimevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/musicaltimevalue\/==(_:_:)","title":"static func == (MusicalTimeValue, MusicalTimeValue) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/musicaltimevalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/musicaltimevalue","title":"MusicalTimeValue","type":"struct"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"MIDI File Internals","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/channelprefix","title":"case channelPrefix","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/keysignature","title":"case keySignature","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/nrpn","title":"case nrpn","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/portprefix","title":"case portPrefix","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/programchange","title":"case programChange","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/rpn","title":"case rpn","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sequencenumber","title":"case sequenceNumber","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sequencerspecific","title":"case sequencerSpecific","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/smpteoffset","title":"case smpteOffset","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/tempo","title":"case tempo","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/text","title":"case text","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/timesignature","title":"case timeSignature","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/unrecognizedmeta","title":"case unrecognizedMeta","type":"case"},{"path":"\/documentation\/midikit\/midifileeventtype\/xmfpatchtypeprefix","title":"case xmfPatchTypePrefix","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/concretetype","title":"var concreteType: any MIDIFileEventPayload.Type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midifileeventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midifileeventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midifileeventtype","title":"MIDIFileEventType","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/init(midi1smfrawbytes:)","title":"init<D>(midi1SMFRawBytes: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/streamdecoderesult","title":"MIDIFileEventPayload.StreamDecodeResult","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/smfeventtype","title":"static var smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midifileeventpayload\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> Self.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midifileeventpayload","title":"MIDIFileEventPayload","type":"protocol"},{"title":"MIDIKit MIDI Note Related","type":"groupMarker"},{"children":[{"title":"Categories","type":"groupMarker"},{"children":[{"title":"Constructors (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-5hwd6","title":"static func noteOn(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-3aq0d","title":"static func noteOn(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-9ntbn","title":"static func noteOff(UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:velocity:attribute:channel:group:)-40eu2","title":"static func noteOff(MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-8m6c8","title":"static func notePressure(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure(note:amount:channel:group:)-9knkb","title":"static func notePressure(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-1r3oe","title":"static func cc(UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc(_:value:channel:group:)-7k06z","title":"static func cc(MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccrpn(_:channel:group:)","title":"static func ccRPN(MIDIEvent.RegisteredController, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ccnrpn(_:channel:group:)","title":"static func ccNRPN(MIDIEvent.AssignableController, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(value:channel:group:)","title":"static func pitchBend(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure(amount:channel:group:)","title":"static func pressure(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange(program:bank:channel:group:)","title":"static func programChange(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(_:change:channel:group:)","title":"static func rpn(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-9unrb","title":"static func rpn(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?), change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-7chyn","title":"static func rpn(parameter: UInt7Pair, data: UInt14, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn(parameter:data:change:channel:group:)-9ju8k","title":"static func rpn(parameter: UInt7Pair, data: UInt32, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1rpn(_:change:channel:group:)","title":"static func midi1RPN(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(_:change:channel:group:)","title":"static func nrpn(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-tpej","title":"static func nrpn(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?), change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-nib6","title":"static func nrpn(parameter: UInt7Pair, data: UInt14, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn(parameter:data:change:channel:group:)-u0a","title":"static func nrpn(parameter: UInt7Pair, data: UInt32, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1nrpn(_:change:channel:group:)","title":"static func midi1NRPN(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-91ea3","title":"static func noteCC(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notecc(note:controller:value:channel:group:)-8vd58","title":"static func noteCC(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qoa8","title":"static func notePitchBend(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(note:value:channel:group:)-5qk4i","title":"static func notePitchBend(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-9f1cj","title":"static func noteManagement(note: UInt7, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(note:flags:channel:group:)-3o4c8","title":"static func noteManagement(note: MIDINote, flags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 1.0 and 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon(_:)","title":"case noteOn(MIDIEvent.NoteOn)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-25kbb","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(note:velocity:attribute:channel:group:midi1zerovelocityasnoteoff:)-4s0ia","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4, midi1ZeroVelocityAsNoteOff: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1zerovelocityasnoteoff","title":"var midi1ZeroVelocityAsNoteOff: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/noteon\/==(_:_:)","title":"static func == (MIDIEvent.NoteOn, MIDIEvent.NoteOn) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteon\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NoteOn.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteon\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteon","title":"MIDIEvent.NoteOn","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/noteoff(_:)","title":"case noteOff(MIDIEvent.NoteOff)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-8mn5r","title":"init(note: MIDINote, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(note:velocity:attribute:channel:group:)-99wpk","title":"init(note: UInt7, velocity: MIDIEvent.NoteVelocity, attribute: MIDIEvent.NoteAttribute, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/attribute","title":"var attribute: MIDIEvent.NoteAttribute","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/velocity","title":"var velocity: MIDIEvent.NoteVelocity","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteoff\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NoteOff.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/noteoff\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteoff","title":"MIDIEvent.NoteOff","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepressure(_:)","title":"case notePressure(MIDIEvent.NotePressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-4wnrd","title":"init(note: UInt7, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(note:amount:channel:group:)-5k2yu","title":"init(note: MIDINote, amount: MIDIEvent.NotePressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.property","title":"var amount: MIDIEvent.NotePressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/note","title":"var note: MIDINote","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amount-swift.typealias","title":"MIDIEvent.NotePressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/amountvalidated","title":"MIDIEvent.NotePressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NotePressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/notepressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepressure","title":"MIDIEvent.NotePressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/cc(_:)","title":"case cc(MIDIEvent.CC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-8rt6a","title":"init(controller: UInt7, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(controller:value:channel:group:)-b9q8","title":"init(controller: MIDIEvent.CC.Controller, value: MIDIEvent.CC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.property","title":"var controller: MIDIEvent.CC.Controller","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.property","title":"var value: MIDIEvent.CC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/value-swift.typealias","title":"MIDIEvent.CC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/cc\/valuevalidated","title":"MIDIEvent.CC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-6s3dq","title":"static func != (some BinaryInteger, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-9fgjo","title":"static func != (MIDIEvent.CC.Controller, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-5k5fh","title":"static func == (MIDIEvent.CC.Controller, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/==(_:_:)-6y8wz","title":"static func == (some BinaryInteger, MIDIEvent.CC.Controller) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/datadecrement","title":"case dataDecrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/dataincrement","title":"case dataIncrement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose5","title":"case generalPurpose5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose6","title":"case generalPurpose6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose7","title":"case generalPurpose7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/generalpurpose8","title":"case generalPurpose8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/highresolutionvelocityprefix","title":"case highResolutionVelocityPrefix","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/hold2","title":"case hold2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/legatofootswitch","title":"case legatoFootswitch","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb(for:)","title":"case lsb(for: MIDIEvent.CC.Controller.LSB)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode(_:)","title":"case mode(MIDIEvent.CC.Controller.Mode)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnlsb","title":"case nrpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/nrpnmsb","title":"case nrpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamento","title":"case portamento","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentocontrol","title":"case portamentoControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnlsb","title":"case rpnLSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/rpnmsb","title":"case rpnMSB","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/softpedal","title":"case softPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sostenutopedal","title":"case sostenutoPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/sustainpedal","title":"case sustainPedal","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/init(number:)","title":"init(number: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/number","title":"var number: UInt7","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/bankselect","title":"case bankSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/channelvolume","title":"case channelVolume","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/dataentry","title":"case dataEntry","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol1","title":"case effectControl1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/effectcontrol2","title":"case effectControl2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/footcontroller","title":"case footController","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose1","title":"case generalPurpose1","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose2","title":"case generalPurpose2","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose3","title":"case generalPurpose3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/generalpurpose4","title":"case generalPurpose4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/portamentotime","title":"case portamentoTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined(_:)","title":"case undefined(MIDIEvent.CC.Controller.LSB.Undefined)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/cc9","title":"case cc9","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/msbcontroller","title":"var msbController: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/undefined","title":"MIDIEvent.CC.Controller.LSB.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/lsb","title":"MIDIEvent.CC.Controller.LSB","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allnotesoff","title":"case allNotesOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/allsoundoff","title":"case allSoundOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/localcontrol","title":"case localControl","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/monomodeon","title":"case monoModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeoff","title":"case omniModeOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/omnimodeon","title":"case omniModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/polymodeon","title":"case polyModeOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/resetallcontrollers","title":"case resetAllControllers","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/mode","title":"MIDIEvent.CC.Controller.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc3","title":"case cc3","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/cc90","title":"case cc90","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/controller","title":"var controller: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/undefined","title":"MIDIEvent.CC.Controller.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.typealias","title":"MIDIEvent.CC.Controller.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.CC.Controller]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/!=(_:_:)-7fi2c","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc\/controller-swift.enum","title":"MIDIEvent.CC.Controller","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/cc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/cc\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.CC.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/cc\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/cc","title":"MIDIEvent.CC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pitchbend(_:)","title":"case pitchBend(MIDIEvent.PitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(value:channel:group:)","title":"init(value: MIDIEvent.PitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.property","title":"var value: MIDIEvent.PitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/value-swift.typealias","title":"MIDIEvent.PitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/valuevalidated","title":"MIDIEvent.PitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pitchbend\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.PitchBend.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pitchbend\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pitchbend","title":"MIDIEvent.PitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/pressure(_:)","title":"case pressure(MIDIEvent.Pressure)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(amount:channel:group:)","title":"init(amount: MIDIEvent.Pressure.Amount, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.property","title":"var amount: MIDIEvent.Pressure.Amount","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amount-swift.typealias","title":"MIDIEvent.Pressure.Amount","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/pressure\/amountvalidated","title":"MIDIEvent.Pressure.AmountValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/pressure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/pressure\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.Pressure.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/pressure\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/pressure","title":"MIDIEvent.Pressure","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/programchange(_:)","title":"case programChange(MIDIEvent.ProgramChange)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(program:bank:channel:group:)","title":"init(program: UInt7, bank: MIDIEvent.ProgramChange.Bank, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.property","title":"var bank: MIDIEvent.ProgramChange.Bank","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/program","title":"var program: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(_:)","title":"case bankSelect(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/nobankselect","title":"case noBankSelect","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/bankselect(msb:lsb:)","title":"static func bankSelect(msb: UInt7, lsb: UInt7) -> MIDIEvent.ProgramChange.Bank","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange\/bank-swift.enum","title":"MIDIEvent.ProgramChange.Bank","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/programchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/programchange\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.ProgramChange.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/programchange\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/programchange","title":"MIDIEvent.ProgramChange","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/rpn(_:)","title":"case rpn(MIDIEvent.RPN)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/init(_:change:channel:group:)","title":"init(MIDIEvent.RegisteredController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/change","title":"var change: MIDI2ParameterNumberChange","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/parameter","title":"var parameter: MIDIEvent.RegisteredController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/rpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/rpn\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.RPN.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/rpn\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/rpn","title":"MIDIEvent.RPN","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/channelcoarsetuning(_:)","title":"case channelCoarseTuning(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/channelfinetuning(_:)","title":"case channelFineTuning(UInt14)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/modulationdepthrange(dataentrymsb:dataentrylsb:)","title":"case modulationDepthRange(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/mpeconfigurationmessage(dataentrymsb:dataentrylsb:)","title":"case mpeConfigurationMessage(dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/pitchbendsensitivity(semitones:cents:)","title":"case pitchBendSensitivity(semitones: UInt7, cents: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalazimuthangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalAzimuthAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionaldistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalelevationangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalElevationAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalgain(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGain(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalgainatmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalGainAtMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalmaximumdistance(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalMaximumDistance(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalpanspreadangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalPanSpreadAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalreferencedistanceratio(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalReferenceDistanceRatio(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/threedimensionalrollangle(dataentrymsb:dataentrylsb:)","title":"case threeDimensionalRollAngle(dataEntryMSB: UInt7, dataEntryLSB: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/tuningbankselect(number:)","title":"case tuningBankSelect(number: UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/tuningprogramchange(number:)","title":"case tuningProgramChange(number: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/init(parameter:data:)","title":"init(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?))","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/parameterbytes","title":"var parameterBytes: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midi1events(channel:group:)","title":"func midi1Events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midi1rawbytes(channel:group:)","title":"func midi1RawBytes(channel: UInt4, group: UInt4) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/umprawwords(protocol:change:channel:group:)","title":"func umpRawWords(protocol: MIDIProtocolVersion, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [[UMPWord]]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/controllers","title":"static let controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/type","title":"static let type: MIDIParameterNumberType","type":"property"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller\/midiparameternumber-implementations","title":"MIDIParameterNumber Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/registeredcontroller","title":"MIDIEvent.RegisteredController","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/nrpn(_:)","title":"case nrpn(MIDIEvent.NRPN)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/init(_:change:channel:group:)","title":"init(MIDIEvent.AssignableController, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/change","title":"var change: MIDI2ParameterNumberChange","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/parameter","title":"var parameter: MIDIEvent.AssignableController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/nrpn\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/nrpn\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.NRPN.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/nrpn\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/nrpn","title":"MIDIEvent.NRPN","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/null","title":"case null","type":"case"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/raw(parameter:dataentrymsb:dataentrylsb:)","title":"case raw(parameter: UInt7Pair, dataEntryMSB: UInt7?, dataEntryLSB: UInt7?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/init(parameter:data:)","title":"init(parameter: UInt7Pair, data: (msb: UInt7?, lsb: UInt7?))","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/dataentrybytes","title":"var dataEntryBytes: (msb: UInt7?, lsb: UInt7?)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/parameterbytes","title":"var parameterBytes: UInt7Pair","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midi1events(channel:group:)","title":"func midi1Events(channel: UInt4, group: UInt4) -> [MIDIEvent]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midi1rawbytes(channel:group:)","title":"func midi1RawBytes(channel: UInt4, group: UInt4) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/umprawwords(protocol:change:channel:group:)","title":"func umpRawWords(protocol: MIDIProtocolVersion, change: MIDI2ParameterNumberChange, channel: UInt4, group: UInt4) -> [[UMPWord]]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/controllers","title":"static let controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/type","title":"static let type: MIDIParameterNumberType","type":"property"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller\/midiparameternumber-implementations","title":"MIDIParameterNumber Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/assignablecontroller","title":"MIDIEvent.AssignableController","type":"enum"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc(_:)","title":"case noteCC(MIDIEvent.NoteCC)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-1cswx","title":"init(note: UInt7, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notecc\/init(note:controller:value:channel:group:)-96y16","title":"init(note: MIDINote, controller: MIDIEvent.NoteCC.PerNoteController, value: MIDIEvent.NoteCC.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/controller","title":"var controller: MIDIEvent.NoteCC.PerNoteController","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.property","title":"var value: MIDIEvent.NoteCC.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/value-swift.typealias","title":"MIDIEvent.NoteCC.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notecc\/valuevalidated","title":"MIDIEvent.NoteCC.ValueValidated","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable(_:)","title":"case assignable(MIDIEvent.NoteCC.PerNoteController.Assignable)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)-swift.enum.case","title":"case registered(MIDIEvent.NoteCC.PerNoteController.Registered)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/number","title":"var number: UInt8","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/assignable","title":"MIDIEvent.NoteCC.PerNoteController.Assignable","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered(_:)-swift.type.method","title":"static func registered(UInt8) -> MIDIEvent.NoteCC.PerNoteController","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct\/fine","title":"var fine: UInt25","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.struct","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Pitch7_25","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-2iqvl","title":"static func != (some BinaryInteger, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4hg0e","title":"static func != (MIDIEvent.NoteCC.PerNoteController.Registered, some BinaryInteger) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-2j2mi","title":"static func == (some BinaryInteger, MIDIEvent.NoteCC.PerNoteController.Registered) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/==(_:_:)-3hpch","title":"static func == (MIDIEvent.NoteCC.PerNoteController.Registered, some BinaryInteger) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/balance","title":"case balance","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/breath","title":"case breath","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects1depth_reverbsendlevel","title":"case effects1Depth_reverbSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects2depth","title":"case effects2Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects3depth_chorussendlevel","title":"case effects3Depth_chorusSendLevel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects4depth","title":"case effects4Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/effects5depth","title":"case effects5Depth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/expression","title":"case expression","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/modwheel","title":"case modWheel","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/pitch7_25-swift.enum.case","title":"case pitch7_25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl10_defaultundefined","title":"case soundCtrl10_defaultUndefined","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl1_soundvariation","title":"case soundCtrl1_soundVariation","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl2_timbreintensity","title":"case soundCtrl2_timbreIntensity","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl3_releasetime","title":"case soundCtrl3_releaseTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl4_attacktime","title":"case soundCtrl4_attackTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl5_brightness","title":"case soundCtrl5_brightness","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl6_decaytime","title":"case soundCtrl6_decayTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl7_vibratorate","title":"case soundCtrl7_vibratoRate","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl8_vibratodepth","title":"case soundCtrl8_vibratoDepth","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/soundctrl9_vibratodelay","title":"case soundCtrl9_vibratoDelay","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined(_:)","title":"case undefined(MIDIEvent.NoteCC.PerNoteController.Registered.Undefined)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/volume","title":"case volume","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/init(number:)","title":"init(number: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/number","title":"var number: UInt8","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc0","title":"case cc0","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc100","title":"case cc100","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc101","title":"case cc101","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc102","title":"case cc102","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc103","title":"case cc103","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc104","title":"case cc104","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc105","title":"case cc105","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc106","title":"case cc106","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc107","title":"case cc107","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc108","title":"case cc108","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc109","title":"case cc109","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc110","title":"case cc110","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc111","title":"case cc111","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc112","title":"case cc112","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc113","title":"case cc113","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc114","title":"case cc114","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc115","title":"case cc115","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc116","title":"case cc116","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc117","title":"case cc117","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc118","title":"case cc118","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc119","title":"case cc119","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc12","title":"case cc12","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc120","title":"case cc120","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc121","title":"case cc121","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc122","title":"case cc122","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc123","title":"case cc123","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc124","title":"case cc124","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc125","title":"case cc125","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc126","title":"case cc126","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc127","title":"case cc127","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc128","title":"case cc128","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc129","title":"case cc129","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc13","title":"case cc13","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc130","title":"case cc130","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc131","title":"case cc131","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc132","title":"case cc132","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc133","title":"case cc133","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc134","title":"case cc134","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc135","title":"case cc135","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc136","title":"case cc136","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc137","title":"case cc137","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc138","title":"case cc138","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc139","title":"case cc139","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc14","title":"case cc14","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc140","title":"case cc140","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc141","title":"case cc141","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc142","title":"case cc142","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc143","title":"case cc143","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc144","title":"case cc144","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc145","title":"case cc145","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc146","title":"case cc146","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc147","title":"case cc147","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc148","title":"case cc148","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc149","title":"case cc149","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc15","title":"case cc15","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc150","title":"case cc150","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc151","title":"case cc151","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc152","title":"case cc152","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc153","title":"case cc153","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc154","title":"case cc154","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc155","title":"case cc155","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc156","title":"case cc156","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc157","title":"case cc157","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc158","title":"case cc158","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc159","title":"case cc159","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc16","title":"case cc16","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc160","title":"case cc160","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc161","title":"case cc161","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc162","title":"case cc162","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc163","title":"case cc163","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc164","title":"case cc164","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc165","title":"case cc165","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc166","title":"case cc166","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc167","title":"case cc167","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc168","title":"case cc168","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc169","title":"case cc169","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc17","title":"case cc17","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc170","title":"case cc170","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc171","title":"case cc171","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc172","title":"case cc172","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc173","title":"case cc173","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc174","title":"case cc174","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc175","title":"case cc175","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc176","title":"case cc176","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc177","title":"case cc177","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc178","title":"case cc178","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc179","title":"case cc179","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc18","title":"case cc18","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc180","title":"case cc180","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc181","title":"case cc181","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc182","title":"case cc182","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc183","title":"case cc183","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc184","title":"case cc184","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc185","title":"case cc185","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc186","title":"case cc186","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc187","title":"case cc187","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc188","title":"case cc188","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc189","title":"case cc189","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc19","title":"case cc19","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc190","title":"case cc190","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc191","title":"case cc191","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc192","title":"case cc192","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc193","title":"case cc193","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc194","title":"case cc194","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc195","title":"case cc195","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc196","title":"case cc196","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc197","title":"case cc197","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc198","title":"case cc198","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc199","title":"case cc199","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc20","title":"case cc20","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc200","title":"case cc200","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc201","title":"case cc201","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc202","title":"case cc202","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc203","title":"case cc203","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc204","title":"case cc204","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc205","title":"case cc205","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc206","title":"case cc206","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc207","title":"case cc207","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc208","title":"case cc208","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc209","title":"case cc209","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc21","title":"case cc21","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc210","title":"case cc210","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc211","title":"case cc211","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc212","title":"case cc212","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc213","title":"case cc213","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc214","title":"case cc214","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc215","title":"case cc215","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc216","title":"case cc216","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc217","title":"case cc217","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc218","title":"case cc218","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc219","title":"case cc219","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc22","title":"case cc22","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc220","title":"case cc220","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc221","title":"case cc221","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc222","title":"case cc222","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc223","title":"case cc223","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc224","title":"case cc224","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc225","title":"case cc225","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc226","title":"case cc226","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc227","title":"case cc227","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc228","title":"case cc228","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc229","title":"case cc229","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc23","title":"case cc23","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc230","title":"case cc230","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc231","title":"case cc231","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc232","title":"case cc232","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc233","title":"case cc233","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc234","title":"case cc234","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc235","title":"case cc235","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc236","title":"case cc236","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc237","title":"case cc237","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc238","title":"case cc238","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc239","title":"case cc239","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc24","title":"case cc24","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc240","title":"case cc240","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc241","title":"case cc241","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc242","title":"case cc242","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc243","title":"case cc243","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc244","title":"case cc244","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc245","title":"case cc245","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc246","title":"case cc246","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc247","title":"case cc247","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc248","title":"case cc248","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc249","title":"case cc249","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc25","title":"case cc25","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc250","title":"case cc250","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc251","title":"case cc251","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc252","title":"case cc252","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc253","title":"case cc253","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc254","title":"case cc254","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc255","title":"case cc255","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc26","title":"case cc26","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc27","title":"case cc27","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc28","title":"case cc28","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc29","title":"case cc29","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc30","title":"case cc30","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc31","title":"case cc31","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc32","title":"case cc32","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc33","title":"case cc33","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc34","title":"case cc34","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc35","title":"case cc35","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc36","title":"case cc36","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc37","title":"case cc37","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc38","title":"case cc38","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc39","title":"case cc39","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc4","title":"case cc4","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc40","title":"case cc40","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc41","title":"case cc41","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc42","title":"case cc42","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc43","title":"case cc43","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc44","title":"case cc44","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc45","title":"case cc45","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc46","title":"case cc46","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc47","title":"case cc47","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc48","title":"case cc48","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc49","title":"case cc49","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc5","title":"case cc5","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc50","title":"case cc50","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc51","title":"case cc51","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc52","title":"case cc52","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc53","title":"case cc53","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc54","title":"case cc54","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc55","title":"case cc55","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc56","title":"case cc56","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc57","title":"case cc57","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc58","title":"case cc58","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc59","title":"case cc59","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc6","title":"case cc6","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc60","title":"case cc60","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc61","title":"case cc61","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc62","title":"case cc62","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc63","title":"case cc63","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc64","title":"case cc64","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc65","title":"case cc65","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc66","title":"case cc66","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc67","title":"case cc67","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc68","title":"case cc68","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc69","title":"case cc69","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc80","title":"case cc80","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc81","title":"case cc81","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc82","title":"case cc82","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc83","title":"case cc83","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc84","title":"case cc84","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc85","title":"case cc85","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc86","title":"case cc86","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc87","title":"case cc87","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc88","title":"case cc88","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc89","title":"case cc89","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc9","title":"case cc9","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc90","title":"case cc90","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc96","title":"case cc96","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc97","title":"case cc97","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc98","title":"case cc98","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/cc99","title":"case cc99","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/controller","title":"var controller: UInt8","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/undefined","title":"MIDIEvent.NoteCC.PerNoteController.Registered.Undefined","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.typealias","title":"MIDIEvent.NoteCC.PerNoteController.Registered.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/allcases-swift.type.property","title":"static var allCases: [MIDIEvent.NoteCC.PerNoteController.Registered]","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/!=(_:_:)-4uipw","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/registered","title":"MIDIEvent.NoteCC.PerNoteController.Registered","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc\/pernotecontroller","title":"MIDIEvent.NoteCC.PerNoteController","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notecc\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notecc\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notecc","title":"MIDIEvent.NoteCC","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend(_:)","title":"case notePitchBend(MIDIEvent.NotePitchBend)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-3plbb","title":"init(note: UInt7, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/init(note:value:channel:group:)-50vvj","title":"init(note: MIDINote, value: MIDIEvent.NotePitchBend.Value, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.property","title":"var value: MIDIEvent.NotePitchBend.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/value-swift.typealias","title":"MIDIEvent.NotePitchBend.Value","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/valuevalidated","title":"MIDIEvent.NotePitchBend.ValueValidated","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notepitchbend\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notepitchbend","title":"MIDIEvent.NotePitchBend","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/notemanagement(_:)","title":"case noteManagement(MIDIEvent.NoteManagement)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-4ur90","title":"init(note: MIDINote, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/init(note:optionflags:channel:group:)-7mosa","title":"init(note: UInt7, optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>, channel: UInt4, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/channel","title":"var channel: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/note","title":"var note: MIDINote","type":"property"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflags","title":"var optionFlags: Set<MIDIEvent.NoteManagement.OptionFlag>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/detachpernotecontrollers","title":"case detachPerNoteControllers","type":"case"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/resetpernotecontrollers","title":"case resetPerNoteControllers","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/optionflag","title":"MIDIEvent.NoteManagement.OptionFlag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/notemanagement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/notemanagement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/notemanagement","title":"MIDIEvent.NoteManagement","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-2kk3a","title":"init(UInt16)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-3pzrg","title":"init(BytePair)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(_:)-7oxv7","title":"init(Double)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/init(coarse:fine:)","title":"init(coarse: UInt7, fine: UInt9)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/bytepair","title":"var bytePair: BytePair","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/coarse","title":"var coarse: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/fine","title":"var fine: UInt9","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/uint16value","title":"var uInt16Value: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9","title":"MIDIEvent.NoteAttribute.Pitch7_9","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/manufacturerspecific(data:)","title":"case manufacturerSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(_:)","title":"case pitch7_9(MIDIEvent.NoteAttribute.Pitch7_9)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/profilespecific(data:)","title":"case profileSpecific(data: UInt16)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/undefined(attributetype:data:)","title":"case undefined(attributeType: UInt8, data: UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/init(type:data:)","title":"init(type: UInt8, data: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributedata","title":"var attributeData: UInt16","type":"property"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/attributetype","title":"var attributeType: UInt8","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/pitch7_9(coarse:fine:)","title":"static func pitch7_9(coarse: UInt7, fine: UInt9) -> MIDIEvent.NoteAttribute","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noteattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noteattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noteattribute","title":"MIDIEvent.NoteAttribute","type":"enum"},{"path":"\/documentation\/midikit\/midievent\/notevelocity","title":"MIDIEvent.NoteVelocity","type":"typealias"},{"path":"\/documentation\/midikit\/midievent\/notevelocityvalidated","title":"MIDIEvent.NoteVelocityValidated","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/assignable","title":"case assignable","type":"case"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/registered","title":"case registered","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/controllers","title":"var controllers: (msb: MIDIEvent.CC.Controller, lsb: MIDIEvent.CC.Controller)","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midiparameternumbertype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midiparameternumbertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midiparameternumbertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midiparameternumbertype","title":"MIDIParameterNumberType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/absolute","title":"case absolute","type":"case"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/relative","title":"case relative","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midi2parameternumberchange\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midi2parameternumberchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midi2parameternumberchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midi2parameternumberchange","title":"MIDI2ParameterNumberChange","type":"enum"}],"path":"\/documentation\/midikit\/midievent-channel-voice","title":"Channel Voice","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(midibeat:group:)","title":"static func songPositionPointer(midiBeat: UInt14, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect(number:group:)","title":"static func songSelect(number: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(databyte:group:)","title":"static func timecodeQuarterFrame(dataByte: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(group:)","title":"static func tuneRequest(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(bus:group:)","title":"static func unofficialBusSelect(bus: UInt7, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer(_:)","title":"case songPositionPointer(MIDIEvent.SongPositionPointer)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/init(midibeat:group:)","title":"init(midiBeat: UInt14, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midibeat","title":"var midiBeat: UInt14","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8, data2: UInt8)","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songpositionpointer","title":"MIDIEvent.SongPositionPointer","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/songselect(_:)","title":"case songSelect(MIDIEvent.SongSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/init(number:group:)","title":"init(number: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/songselect\/number","title":"var number: UInt7","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/songselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/songselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/songselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/songselect","title":"MIDIEvent.SongSelect","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe(_:)","title":"case timecodeQuarterFrame(MIDIEvent.TimecodeQuarterFrame)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/init(databyte:group:)","title":"init(dataByte: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/databyte","title":"var dataByte: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timecodequarterframe","title":"MIDIEvent.TimecodeQuarterFrame","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/tunerequest(_:)","title":"case tuneRequest(MIDIEvent.TuneRequest)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/tunerequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/tunerequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/tunerequest","title":"MIDIEvent.TuneRequest","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect(_:)","title":"case unofficialBusSelect(MIDIEvent.UnofficialBusSelect)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/init(bus:group:)","title":"init(bus: UInt7, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/bus","title":"var bus: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/unofficialbusselect","title":"MIDIEvent.UnofficialBusSelect","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-common","title":"System Common","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)-2xian","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(manufacturer:data:group:)-8tnhw","title":"static func sysEx7(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt7], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawhexstring:group:)","title":"static func sysEx7(rawHexString: some StringProtocol, group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7(rawbytes:group:)","title":"static func sysEx7(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)-1p0x1","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(universaltype:deviceid:subid1:subid2:data:group:)-150x7","title":"static func universalSysEx7(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt7], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(manufacturer:data:group:)","title":"static func sysEx8(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex8(rawbytes:group:)","title":"static func sysEx8(rawBytes: [UInt8], group: UInt4) throws -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(universaltype:deviceid:subid1:subid2:data:group:)","title":"static func universalSysEx8(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7(_:)","title":"case sysEx7(MIDIEvent.SysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)-34spj","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt7], group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(manufacturer:data:group:)-evgw","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawhexstring(leadingf0:trailingf7:separator:)","title":"func midi1RawHexString(leadingF0: Bool, trailingF7: Bool, separator: String?) -> String","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.SysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/sysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex7","title":"MIDIEvent.SysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7(_:)","title":"case universalSysEx7(MIDIEvent.UniversalSysEx7)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)-15lzi","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt7], group: UInt4)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(universaltype:deviceid:subid1:subid2:data:group:)-5gbeo","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawbytes(leadingf0:trailingf7:)","title":"func midi1RawBytes(leadingF0: Bool, trailingF7: Bool) -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/init(midi1smfrawbytes:)","title":"init(midi1SMFRawBytes: some DataProtocol) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdebugdescription","title":"var smfDebugDescription: String","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfdescription","title":"var smfDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midi1smfrawbytes()","title":"func midi1SMFRawBytes<D>() -> D","type":"method"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfwrappedevent(delta:)","title":"func smfWrappedEvent(delta: MIDIFileEvent.DeltaTime) -> MIDIFileEvent","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/smfeventtype","title":"static let smfEventType: MIDIFileEventType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex7\/initfrom(midi1smfrawbytesstream:)","title":"static func initFrom(midi1SMFRawBytesStream: some DataProtocol) throws -> MIDIEvent.UniversalSysEx7.StreamDecodeResult","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7\/midifileeventpayload-implementations","title":"MIDIFileEventPayload Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex7","title":"MIDIEvent.UniversalSysEx7","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/sysex8(_:)","title":"case sysEx8(MIDIEvent.SysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/init(manufacturer:data:group:)","title":"init(manufacturer: MIDIEvent.SysExManufacturer, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/manufacturer","title":"var manufacturer: MIDIEvent.SysExManufacturer","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysex8","title":"MIDIEvent.SysEx8","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8(_:)","title":"case universalSysEx8(MIDIEvent.UniversalSysEx8)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/init(universaltype:deviceid:subid1:subid2:data:group:)","title":"init(universalType: MIDIEvent.UniversalSysExType, deviceID: UInt7, subID1: UInt7, subID2: UInt7, data: [UInt8], group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/data","title":"var data: [UInt8]","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/deviceid","title":"var deviceID: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid1","title":"var subID1: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/subid2","title":"var subID2: UInt7","type":"property"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/universaltype","title":"var universalType: MIDIEvent.UniversalSysExType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/umprawwords()","title":"func umpRawWords() -> [[UMPWord]]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysex8\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysex8","title":"MIDIEvent.UniversalSysEx8","type":"struct"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/manufacturer(_:)","title":"case manufacturer(MIDIEvent.SysExManufacturer)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/universal(_:)","title":"case universal(MIDIEvent.UniversalSysExType)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexid","title":"MIDIEvent.SysExID","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/onebyte(_:)","title":"case oneByte(UInt7)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/threebyte(byte2:byte3:)","title":"case threeByte(byte2: UInt7, byte3: UInt7)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex7rawbytes:)","title":"init?(sysEx7RawBytes: [UInt8])","type":"init"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/init(sysex8rawbytes:)","title":"init?(sysEx8RawBytes: [UInt8])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/name","title":"var name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex7rawbytes()","title":"func sysEx7RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/sysex8rawbytes()","title":"func sysEx8RawBytes() -> [UInt8]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/educational()","title":"static func educational() -> MIDIEvent.SysExManufacturer","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysexmanufacturer","title":"MIDIEvent.SysExManufacturer","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/nonrealtime","title":"case nonRealTime","type":"case"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/realtime","title":"case realTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawuint8value:)","title":"init?(rawUInt8Value: UInt8)","type":"init"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/init(rawvalue:)","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/universalsysextype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/universalsysextype","title":"MIDIEvent.UniversalSysExType","type":"enum"}],"path":"\/documentation\/midikit\/midievent-system-exclusive","title":"System Exclusive","type":"symbol"},{"children":[{"title":"Constructors","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(group:)","title":"static func start(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop(group:)","title":"static func stop(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue(group:)","title":"static func `continue`(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock(group:)","title":"static func timingClock(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset(group:)","title":"static func systemReset(group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start(_:)","title":"case start(MIDIEvent.Start)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/start\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/start\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/start\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/start","title":"MIDIEvent.Start","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/stop(_:)","title":"case stop(MIDIEvent.Stop)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/stop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/stop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/stop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/stop","title":"MIDIEvent.Stop","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/continue(_:)","title":"case `continue`(MIDIEvent.Continue)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/continue\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/continue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/continue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/continue","title":"MIDIEvent.Continue","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/timingclock(_:)","title":"case timingClock(MIDIEvent.TimingClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/timingclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/timingclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/timingclock","title":"MIDIEvent.TimingClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/systemreset(_:)","title":"case systemReset(MIDIEvent.SystemReset)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/systemreset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/systemreset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/systemreset","title":"MIDIEvent.SystemReset","type":"struct"},{"title":"Deprecated in MIDI 2.0","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing(group:)","title":"static func activeSensing(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing(_:)","title":"case activeSensing(MIDIEvent.ActiveSensing)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8","type":"method"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/activesensing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/activesensing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/activesensing","title":"MIDIEvent.ActiveSensing","type":"struct"}],"path":"\/documentation\/midikit\/midievent-system-real-time","title":"System Real-Time","type":"symbol"},{"children":[{"title":"Constructors (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(group:)","title":"static func noOp(group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrclock(time:group:)","title":"static func jrClock(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(time:group:)","title":"static func jrTimestamp(time: UInt16, group: UInt4) -> MIDIEvent","type":"method"},{"title":"Switch Case Unwrapping (MIDI 2.0)","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop(_:)","title":"case noOp(MIDIEvent.NoOp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/init(group:)","title":"init(group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/group","title":"var group: UInt4","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/noop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/noop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/noop","title":"MIDIEvent.NoOp","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrclock(_:)","title":"case jrClock(MIDIEvent.JRClock)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrclock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrclock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrclock","title":"MIDIEvent.JRClock","type":"struct"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp(_:)","title":"case jrTimestamp(MIDIEvent.JRTimestamp)","type":"case"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/init(time:group:)","title":"init(time: UInt16, group: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/group","title":"var group: UInt4","type":"property"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/time","title":"var time: UInt16","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/umprawwords()","title":"func umpRawWords() -> [UMPWord]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/jrtimestamp","title":"MIDIEvent.JRTimestamp","type":"struct"}],"path":"\/documentation\/midikit\/midievent-utility","title":"Utility Messages","type":"symbol"},{"title":"General Properties","type":"groupMarker"},{"children":[{"title":"Channel Voice","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/channel","title":"var channel: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/group","title":"var group: UInt4","type":"property"}],"path":"\/documentation\/midikit\/midievent-general-properties","title":"General Properties","type":"symbol"},{"title":"Event Filtering","type":"groupMarker"},{"children":[{"title":"Filtering","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice","title":"var isChannelVoice: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftype:)","title":"func isChannelVoice(ofType: MIDIEvent.ChanVoiceType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/ischannelvoice(oftypes:)","title":"func isChannelVoice(ofTypes: Set<MIDIEvent.ChanVoiceType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon","title":"var isSystemCommon: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftype:)","title":"func isSystemCommon(ofType: MIDIEvent.SysCommonType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemcommon(oftypes:)","title":"func isSystemCommon(ofTypes: Set<MIDIEvent.SysCommonType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive","title":"var isSystemExclusive: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftype:)","title":"func isSystemExclusive(ofType: MIDIEvent.SysExType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemexclusive(oftypes:)","title":"func isSystemExclusive(ofTypes: Set<MIDIEvent.SysExType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime","title":"var isSystemRealTime: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftype:)","title":"func isSystemRealTime(ofType: MIDIEvent.SysRealTimeType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/issystemrealtime(oftypes:)","title":"func isSystemRealTime(ofTypes: Set<MIDIEvent.SysRealTimeType>) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility","title":"var isUtility: Bool","type":"property"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftype:)","title":"func isUtility(ofType: MIDIEvent.UtilityType) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/midievent\/isutility(oftypes:)","title":"func isUtility(ofTypes: Set<MIDIEvent.UtilityType>) -> Bool","type":"method"},{"title":"Related","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notecc","title":"case noteCC","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notemanagement","title":"case noteManagement","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteoff","title":"case noteOff","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/noteon","title":"case noteOn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepitchbend","title":"case notePitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/notepressure","title":"case notePressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/nrpn","title":"case nrpn","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pitchbend","title":"case pitchBend","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/pressure","title":"case pressure","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/programchange","title":"case programChange","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/rpn","title":"case rpn","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetype","title":"MIDIEvent.ChanVoiceType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.enum.case","title":"case dropCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.enum.case","title":"case dropCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannel(_:)","title":"case dropChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropchannels(_:)","title":"case dropChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinrange(_:)","title":"case dropNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropnotesinranges(_:)","title":"case dropNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptype(_:)","title":"case dropType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.enum.case","title":"case keepCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.enum.case","title":"case keepCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannel(_:)","title":"case keepChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepchannels(_:)","title":"case keepChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinrange(_:)","title":"case keepNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepnotesinranges(_:)","title":"case keepNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.enum.case","title":"case onlyCC(MIDIEvent.CC.Controller)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.enum.case","title":"case onlyCCs([MIDIEvent.CC.Controller])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannel(_:)","title":"case onlyChannel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlychannels(_:)","title":"case onlyChannels([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinrange(_:)","title":"case onlyNotesInRange(ClosedRange<UInt7>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlynotesinranges(_:)","title":"case onlyNotesInRanges([ClosedRange<UInt7>])","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.ChanVoiceType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.ChanVoiceType>)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropcc(_:)-swift.type.method","title":"static func dropCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/dropccs(_:)-swift.type.method","title":"static func dropCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepcc(_:)-swift.type.method","title":"static func keepCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/keepccs(_:)-swift.type.method","title":"static func keepCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlycc(_:)-swift.type.method","title":"static func onlyCC(UInt7) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/onlyccs(_:)-swift.type.method","title":"static func onlyCCs([UInt7]) -> MIDIEvent.ChanVoiceTypes","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/chanvoicetypes","title":"MIDIEvent.ChanVoiceTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songpositionpointer","title":"case songPositionPointer","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/songselect","title":"case songSelect","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/timecodequarterframe","title":"case timecodeQuarterFrame","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/tunerequest","title":"case tuneRequest","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/unofficialbusselect","title":"case unofficialBusSelect","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontype","title":"MIDIEvent.SysCommonType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysCommonType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysCommonType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/syscommontypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/syscommontypes","title":"MIDIEvent.SysCommonTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex7","title":"case sysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/sysex8","title":"case sysEx8","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex7","title":"case universalSysEx7","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/universalsysex8","title":"case universalSysEx8","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextype","title":"MIDIEvent.SysExType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysExType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysExType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysextypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysextypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysextypes","title":"MIDIEvent.SysExTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/activesensing","title":"case activeSensing","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/start","title":"case start","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/systemreset","title":"case systemReset","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/timingclock","title":"case timingClock","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetype","title":"MIDIEvent.SysRealTimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptype(_:)","title":"case dropType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptype(_:)","title":"case keepType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.SysRealTimeType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.SysRealTimeType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/sysrealtimetypes","title":"MIDIEvent.SysRealTimeTypes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrclock","title":"case jrClock","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/jrtimestamp","title":"case jrTimestamp","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/noop","title":"case noOp","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytype","title":"MIDIEvent.UtilityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptype(_:)","title":"case dropType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/droptypes(_:)","title":"case dropTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptype(_:)","title":"case keepType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/keeptypes(_:)","title":"case keepTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/only","title":"case only","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytype(_:)","title":"case onlyType(MIDIEvent.UtilityType)","type":"case"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/onlytypes(_:)","title":"case onlyTypes(Set<MIDIEvent.UtilityType>)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/utilitytypes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/utilitytypes","title":"MIDIEvent.UtilityTypes","type":"enum"}],"path":"\/documentation\/midikit\/midievent-event-filtering","title":"Event Filtering","type":"symbol"},{"title":"Raw Data Encoding","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawbytes()","title":"func midi1RawBytes() -> [UInt8]","type":"method"},{"path":"\/documentation\/midikit\/midievent\/umprawwords(protocol:)","title":"func umpRawWords(protocol: MIDIProtocolVersion) -> [[UMPWord]]","type":"method"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/invalidtype","title":"case invalidType","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/malformed","title":"case malformed","type":"case"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/rawbytesempty","title":"case rawBytesEmpty","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/midievent\/parseerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/midievent\/parseerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent\/parseerror","title":"MIDIEvent.ParseError","type":"enum"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/midi1rawdatabytes()","title":"func midi1RawDataBytes() -> (data1: UInt8?, data2: UInt8?)?","type":"method"},{"path":"\/documentation\/midikit\/midievent\/midi1rawstatusbyte()","title":"func midi1RawStatusByte() -> UInt8?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/deviceinquiryrequest(deviceid:)","title":"static func deviceInquiryRequest(deviceID: UInt7) -> MIDIEvent","type":"method"},{"path":"\/documentation\/midikit\/midievent\/deviceinquiryresponse(deviceid:manufacturer:devicefamilycode:devicefamilymembercode:softwarerevision:)","title":"static func deviceInquiryResponse(deviceID: UInt7, manufacturer: MIDIEvent.SysExManufacturer, deviceFamilyCode: UInt14, deviceFamilyMemberCode: UInt14, softwareRevision: (UInt7, UInt7, UInt7, UInt7)) -> MIDIEvent","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/midievent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midievent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midievent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midievent","title":"MIDIEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/chanvoice(_:)","title":"case chanVoice(MIDIEvent.ChanVoiceTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/group(_:)","title":"case group(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/groups(_:)","title":"case groups([UInt4])","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/syscommon(_:)","title":"case sysCommon(MIDIEvent.SysCommonTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysex(_:)","title":"case sysEx(MIDIEvent.SysExTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/sysrealtime(_:)","title":"case sysRealTime(MIDIEvent.SysRealTimeTypes)","type":"case"},{"path":"\/documentation\/midikit\/midieventfilter\/utility(_:)","title":"case utility(MIDIEvent.UtilityTypes)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/apply(to:)","title":"func apply(to: [MIDIEvent]) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfilter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midieventfilter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midieventfilter","title":"MIDIEventFilter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filter:)","title":"init(filter: MIDIEventFilter)","type":"init"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/init(filters:)","title":"init(filters: [MIDIEventFilter])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filters","title":"var filters: [MIDIEventFilter]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/filter(events:)","title":"func filter(events: [MIDIEvent]) -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/==(_:_:)","title":"static func == (MIDIEventFilterGroup, MIDIEventFilterGroup) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/midieventfiltergroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/midieventfiltergroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/midieventfiltergroup\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/midieventfiltergroup","title":"MIDIEventFilterGroup","type":"struct"},{"path":"\/documentation\/midikit\/midinoterange","title":"MIDINoteRange","type":"typealias"},{"path":"\/documentation\/midikit\/midinotenumberrange","title":"MIDINoteNumberRange","type":"typealias"},{"title":"Timecode Related","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(at:base:limit:)","title":"func invalidComponents(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(using:)","title":"func invalidComponents(using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:at:base:limit:)","title":"func validRange(of: Timecode.Component, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> ClosedRange<Int>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:using:)","title":"func validRange(of: Timecode.Component, using: Timecode.Properties) -> ClosedRange<Int>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/zero","title":"static let zero: Timecode.Components","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:_:)","title":"init(Timecode, FloatingPointSign)","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:at:base:limit:)-9q4rx","title":"init(CMTime, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:at:base:limit:)-9qp4j","title":"init(Fraction, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:using:)-44vat","title":"init(CMTime, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:using:)-62nk","title":"init(Fraction, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(realtime:at:base:limit:)","title":"init(realTime: TimeInterval, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(realtime:using:)","title":"init(realTime: TimeInterval, using: Timecode.Properties) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/absoluteinterval","title":"let absoluteInterval: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign","title":"let sign: FloatingPointSign","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/flattened()","title":"func flattened() -> Timecode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/negative(_:)","title":"static func negative(Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecodeinterval\/positive(_:)","title":"static func positive(Timecode) -> TimecodeInterval","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeinterval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval","title":"TimecodeInterval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-8olp0","title":"init(TimecodeTransformer.Transform)","type":"init"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-972h3","title":"init([TimecodeTransformer.Transform])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodetransformer\/transforms","title":"var transforms: [TimecodeTransformer.Transform]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform(_:)","title":"func transform(Timecode) -> Timecode","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/custom(_:)","title":"case custom((Timecode) -> Timecode)","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/offset(by:)","title":"case offset(by: TimecodeInterval)","type":"case"}],"path":"\/documentation\/midikit\/timecodetransformer\/transform","title":"TimecodeTransformer.Transform","type":"enum"}],"path":"\/documentation\/midikit\/timecodetransformer","title":"TimecodeTransformer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/init(order:timelinestart:)","title":"init(order: SortOrder, timelineStart: Timecode?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/order","title":"var order: SortOrder","type":"property"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/timelinestart","title":"var timelineStart: Timecode?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/compare(_:_:)","title":"func compare(Timecode, Timecode) -> ComparisonResult","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/compared","title":"TimecodeSortComparator.Compared","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodesortcomparator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodesortcomparator","title":"TimecodeSortComparator","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/+(_:_:)","title":"static func + (Fraction, Fraction) -> Fraction","type":"op"},{"path":"\/documentation\/midikit\/fraction\/-(_:_:)","title":"static func - (Fraction, Fraction) -> Fraction","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/init(_:)","title":"init(CMTime)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(double:decimalprecision:)","title":"init(double: Double, decimalPrecision: Int)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(fcpxmlstring:)","title":"init?(fcpxmlString: String)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(reducing:_:)","title":"init(reducing: Int, Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/fraction\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/fraction\/denominator","title":"let denominator: Int","type":"property"},{"path":"\/documentation\/midikit\/fraction\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/fraction\/fcpxmlstringvalue","title":"var fcpxmlStringValue: String","type":"property"},{"path":"\/documentation\/midikit\/fraction\/floatvalue","title":"var floatValue: Float","type":"property"},{"path":"\/documentation\/midikit\/fraction\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/isreduced","title":"var isReduced: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/iswholeinteger","title":"var isWholeInteger: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/numerator","title":"let numerator: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/abs()","title":"func abs() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/isequal(to:)","title":"func isEqual(to: Fraction) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/fraction\/isidentical(to:)","title":"func isIdentical(to: Fraction) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/fraction\/negate()","title":"func negate()","type":"method"},{"path":"\/documentation\/midikit\/fraction\/negated()","title":"func negated() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/reduced()","title":"func reduced() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/fraction\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/zero","title":"static let zero: Fraction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/'...(_:)-2gltq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'...(_:)-8fyrw","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_(_:_:)-2i9kt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_(_:_:)-5pyzg","title":"static func < (Fraction, Fraction) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_=(_:_:)-95mmi","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_=(_:_:)-9erul","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-94gmp","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-jywp","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-xe2q","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/fraction\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/fraction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/==(_:_:)","title":"static func == (Fraction, Fraction) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/fraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/fraction\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/fraction","title":"Fraction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/framerateprotocol\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/framerateprotocol\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/framerateprotocol","title":"FrameRateProtocol","type":"protocol"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps23_976","title":"case fps23_976","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps24","title":"case fps24","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps24_98","title":"case fps24_98","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps25","title":"case fps25","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps29_97","title":"case fps29_97","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps29_97d","title":"case fps29_97d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps30","title":"case fps30","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps30d","title":"case fps30d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps47_952","title":"case fps47_952","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps48","title":"case fps48","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps50","title":"case fps50","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps59_94","title":"case fps59_94","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps59_94d","title":"case fps59_94d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps60","title":"case fps60","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps60d","title":"case fps60d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps95_904","title":"case fps95_904","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps96","title":"case fps96","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps100","title":"case fps100","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps119_88","title":"case fps119_88","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps119_88d","title":"case fps119_88d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps120","title":"case fps120","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps120d","title":"case fps120d","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/string\/timecodeframerate","title":"var timecodeFrameRate: TimecodeFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(frameduration:drop:)-57qbd","title":"init?(frameDuration: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(frameduration:drop:)-5r5jx","title":"init?(frameDuration: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rate:drop:)-1l2o5","title":"init?(rate: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rate:drop:)-3vf3a","title":"init?(rate: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/aafmetadata","title":"var aafMetadata: (editRate: String, dropFrame: String, framesPerSecond: String)","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.property","title":"var compatibleGroup: TimecodeFrameRate.CompatibleGroup","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegrouprates","title":"var compatibleGroupRates: [TimecodeFrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/fcpxmlmetadata","title":"var fcpXMLMetadata: (frameDuration: String, tcFormat: String)","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxframenumberdisplayable","title":"var maxFrameNumberDisplayable: Int","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/midifilesmpteoffsetrate","title":"var midiFileSMPTEOffsetRate: MIDIFile.SMPTEOffsetFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/iscompatible(with:)","title":"func isCompatible(with: TimecodeFrameRate) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxsubframecountexpressible(in:base:)","title":"func maxSubFrameCountExpressible(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalframes(in:)","title":"func maxTotalFrames(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalframesexpressible(in:)","title":"func maxTotalFramesExpressible(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalsubframes(in:base:)","title":"func maxTotalSubFrames(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/transmitsmtc(using:)","title":"func transmitsMTC(using: MTCFrameRate) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/videoframerate(interlaced:)","title":"func videoFrameRate(interlaced: Bool) -> VideoFrameRate?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/alldrop","title":"static let allDrop: [TimecodeFrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/allnondrop","title":"static let allNonDrop: [TimecodeFrameRate]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolor","title":"case ntscColor","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolorwalltime","title":"case ntscColorWallTime","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntscdrop","title":"case ntscDrop","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/whole","title":"case whole","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/table","title":"static var table: [TimecodeFrameRate.CompatibleGroup : [TimecodeFrameRate]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum","title":"TimecodeFrameRate.CompatibleGroup","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecodeframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeframerate","title":"TimecodeFrameRate","type":"enum"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/fps23_98p","title":"case fps23_98p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps24p","title":"case fps24p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps25p","title":"case fps25p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps25i","title":"case fps25i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps29_97p","title":"case fps29_97p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps29_97i","title":"case fps29_97i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps30p","title":"case fps30p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps47_95p","title":"case fps47_95p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps48p","title":"case fps48p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps50p","title":"case fps50p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps50i","title":"case fps50i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps59_94p","title":"case fps59_94p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps59_94i","title":"case fps59_94i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps60p","title":"case fps60p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps60i","title":"case fps60i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps95_9p","title":"case fps95_9p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps96p","title":"case fps96p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps100p","title":"case fps100p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps119_88p","title":"case fps119_88p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps120p","title":"case fps120p","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/string\/videoframerate","title":"var videoFrameRate: VideoFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(asset:)","title":"init(asset: AVAsset) throws","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(fps:interlaced:strict:)-22g3w","title":"init?(fps: Float, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(fps:interlaced:strict:)-6nlpc","title":"init?(fps: Double, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(frameduration:interlaced:)-2u2tt","title":"init?(frameDuration: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(frameduration:interlaced:)-5nhrn","title":"init?(frameDuration: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rate:interlaced:)-1aago","title":"init?(rate: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rate:interlaced:)-6g3q9","title":"init?(rate: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/fps","title":"var fps: Double","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/isinterlaced","title":"var isInterlaced: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/timecodeframerate(drop:)","title":"func timecodeFrameRate(drop: Bool) -> TimecodeFrameRate?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/videoframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/videoframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/videoframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/videoframerate","title":"VideoFrameRate","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/init(_:subframesbase:)","title":"init<S>(S, subFramesBase: Timecode.SubFramesBase) throws","type":"init"},{"path":"\/documentation\/midikit\/feetandframes\/init(feet:frames:subframes:subframesbase:)","title":"init(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/feet","title":"var feet: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/framecount","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/feetandframes\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/feetandframes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/feetandframes","title":"FeetAndFrames","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/rangeattribute\/duration","title":"case duration","type":"case"},{"path":"\/documentation\/midikit\/rangeattribute\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/rangeattribute\/start","title":"case start","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/rangeattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/rangeattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/rangeattribute","title":"RangeAttribute","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/cmtime(_:)","title":"static func cmTime(CMTime) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/components(_:)","title":"static func components(Timecode.Components) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/components(d:h:m:s:f:sf:)","title":"static func components(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(_:)","title":"static func feetAndFrames(FeetAndFrames) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(_:subframesbase:)","title":"static func feetAndFrames<S>(S, subFramesBase: Timecode.SubFramesBase) throws -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(feet:frames:subframes:subframesbase:)","title":"static func feetAndFrames(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-3ut2p","title":"static func frames(Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-74ujv","title":"static func frames(Timecode.FrameCount.Value) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-w8ob","title":"static func frames(Timecode.FrameCount) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:subframes:)","title":"static func frames(Int, subFrames: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:subframesunitinterval:)","title":"static func frames(Int, subFramesUnitInterval: Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/rational(_:)","title":"static func rational(Fraction) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/rational(_:_:)","title":"static func rational(Int, Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/realtime(seconds:)","title":"static func realTime(seconds: TimeInterval) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/samples(_:samplerate:)-34bbq","title":"static func samples(Double, sampleRate: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/samples(_:samplerate:)-8oidp","title":"static func samples(Int, sampleRate: Int) -> TimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/timecodesourcevalue","title":"TimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/richtimecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> RichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/richtimecodesourcevalue","title":"RichTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/formattedtimecodesourcevalue\/string(_:)-5prc4","title":"static func string(String) -> FormattedTimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/formattedtimecodesourcevalue\/string(_:)-7c5zh","title":"static func string<S>(S) -> FormattedTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/formattedtimecodesourcevalue","title":"FormattedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/guaranteedtimecodesourcevalue\/zero","title":"static let zero: GuaranteedTimecodeSourceValue","type":"property"}],"path":"\/documentation\/midikit\/guaranteedtimecodesourcevalue","title":"GuaranteedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/guaranteedrichtimecodesourcevalue\/interval(flattening:)","title":"static func interval(flattening: TimecodeInterval) -> GuaranteedRichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/guaranteedrichtimecodesourcevalue","title":"GuaranteedRichTimecodeSourceValue","type":"struct"}],"path":"\/documentation\/midikit\/midikitsmf-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitsmf","title":"MIDIKitSMF","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitsync-getting-started","title":"Getting Started","type":"article"},{"title":"MTC Abstractions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/init(lockframes:dropoutframes:)","title":"init(lockFrames: Int, dropOutFrames: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/dropoutframes","title":"var dropOutFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/lockframes","title":"var lockFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/dropoutduration(at:)","title":"func dropOutDuration(at: TimecodeFrameRate) -> TimeInterval","type":"method"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/lockduration(at:)","title":"func lockDuration(at: TimecodeFrameRate) -> TimeInterval","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.struct","title":"MTCReceiver.SyncPolicy","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/init(name:initiallocalframerate:syncpolicy:timecodechanged:statechanged:)","title":"init(name: String?, initialLocalFrameRate: TimecodeFrameRate?, syncPolicy: MTCReceiver.SyncPolicy?, timecodeChanged: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?, stateChanged: ((MTCReceiver.State) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/direction","title":"var direction: MTCDirection","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/localframerate","title":"var localFrameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.property","title":"var state: MTCReceiver.State","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/statechangedhandler","title":"var stateChangedHandler: ((MTCReceiver.State) -> Void)?","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/syncpolicy-swift.property","title":"var syncPolicy: MTCReceiver.SyncPolicy","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/timecode","title":"var timecode: Timecode","type":"property"},{"path":"\/documentation\/midikit\/mtcreceiver\/timecodechangedhandler","title":"var timecodeChangedHandler: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/freewheeling","title":"case freewheeling","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/incompatibleframerate","title":"case incompatibleFrameRate","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/presync(predictedlocktime:locktimecode:)","title":"case preSync(predictedLockTime: DispatchTime, lockTimecode: Timecode)","type":"case"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/sync","title":"case sync","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver\/state-swift.enum","title":"MTCReceiver.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcreceiver\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcreceiver\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcreceiver\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcreceiver","title":"MTCReceiver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/init(name:midiouthandler:)","title":"init(name: String?, midiOutHandler: MTCGenerator.MIDIOutHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/localframerate","title":"var localFrameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/locatebehavior","title":"var locateBehavior: MTCEncoder.FullFrameBehavior","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiouthandler","title":"var midiOutHandler: MTCGenerator.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.property","title":"var state: MTCGenerator.State","type":"property"},{"path":"\/documentation\/midikit\/mtcgenerator\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/locate(to:)-1u162","title":"func locate(to: Timecode)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/locate(to:)-9shcu","title":"func locate(to: Timecode.Components)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:)","title":"func start(now: Timecode)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:framerate:)","title":"func start(now: TimeInterval, frameRate: TimecodeFrameRate)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/start(now:framerate:base:)","title":"func start(now: Timecode.Components, frameRate: TimecodeFrameRate, base: Timecode.SubFramesBase)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/stop()","title":"func stop()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/generating","title":"case generating","type":"case"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/idle","title":"case idle","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcgenerator\/state-swift.enum","title":"MTCGenerator.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiout(_:)-6rjgb","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcgenerator\/midiout(_:)-9ogs3","title":"func midiOut([MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcgenerator\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcgenerator","title":"MTCGenerator","type":"class"},{"title":"MTC Encoding and Decoding","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/init(initiallocalframerate:timecodechanged:mtcframeratechanged:)","title":"init(initialLocalFrameRate: TimecodeFrameRate?, timecodeChanged: ((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?, mtcFrameRateChanged: ((MTCFrameRate) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/direction","title":"var direction: MTCDirection","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/localframerate","title":"var localFrameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcdecoder\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/resetqfbuffer()","title":"func resetQFBuffer()","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/resettimecodevalues()","title":"func resetTimecodeValues()","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/setmtcframeratechangedhandler(_:)","title":"func setMTCFrameRateChangedHandler(((MTCFrameRate) -> Void)?)","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/settimecodechangedhandler(_:)","title":"func setTimecodeChangedHandler(((Timecode, MTCMessageType, MTCDirection, Bool) -> Void)?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdecoder\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcdecoder\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcdecoder\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcdecoder","title":"MTCDecoder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/localframerate","title":"var localFrameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/midiouthandler","title":"var midiOutHandler: MTCEncoder.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtccomponents","title":"var mtcComponents: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/mtcquarterframe","title":"var mtcQuarterFrame: UInt8","type":"property"},{"path":"\/documentation\/midikit\/mtcencoder\/timecode","title":"var timecode: Timecode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/decrement()","title":"func decrement()","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/increment()","title":"func increment()","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/locate(to:framerate:transmitfullframe:)","title":"func locate(to: Timecode.Components, frameRate: TimecodeFrameRate?, transmitFullFrame: MTCEncoder.FullFrameBehavior)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/locate(to:transmitfullframe:)","title":"func locate(to: Timecode, transmitFullFrame: MTCEncoder.FullFrameBehavior)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/sendfullframemidimessage()","title":"func sendFullFrameMIDIMessage()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/always","title":"case always","type":"case"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/ifdifferent","title":"case ifDifferent","type":"case"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/never","title":"case never","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcencoder\/fullframebehavior","title":"MTCEncoder.FullFrameBehavior","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcencoder\/midiout(_:)-7k1vl","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/mtcencoder\/midiout(_:)-8pb2p","title":"func midiOut([MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/mtcencoder\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcencoder","title":"MTCEncoder","type":"class"},{"title":"Supporting Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc24","title":"case mtc24","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc25","title":"case mtc25","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc2997d","title":"case mtc2997d","type":"case"},{"path":"\/documentation\/midikit\/mtcframerate\/mtc30","title":"case mtc30","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/bitvalue","title":"var bitValue: UInt8","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/derivedframerates","title":"var derivedFrameRates: [TimecodeFrameRate]","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/directequivalentframerate","title":"var directEquivalentFrameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/midikit\/mtcframerate\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcframerate","title":"MTCFrameRate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/ambiguous","title":"case ambiguous","type":"case"},{"path":"\/documentation\/midikit\/mtcdirection\/backwards","title":"case backwards","type":"case"},{"path":"\/documentation\/midikit\/mtcdirection\/forwards","title":"case forwards","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/init(previousqf:newqf:)","title":"init(previousQF: UInt8, newQF: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcdirection","title":"MTCDirection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcmessagetype\/fullframe","title":"case fullFrame","type":"case"},{"path":"\/documentation\/midikit\/mtcmessagetype\/quarterframe","title":"case quarterFrame","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/mtcmessagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/mtcmessagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/mtcmessagetype","title":"MTCMessageType","type":"enum"},{"title":"TimecodeKit Types","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-14zf4","title":"convenience init(using: Timecode, stringFormat: Timecode.StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/init(using:stringformat:showsvalidation:validationattributes:)-2uon2","title":"init(using: Timecode.Properties?, stringFormat: Timecode.StringFormat?, showsValidation: Bool, validationAttributes: [NSAttributedString.Key : Any]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/alignment","title":"var alignment: NSTextAlignment","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/framerate","title":"var frameRate: TimecodeFrameRate?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/showsvalidation","title":"var showsValidation: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/stringformat","title":"var stringFormat: Timecode.StringFormat","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/timecodeproperties","title":"var timecodeProperties: Timecode.Properties?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/upperlimit","title":"var upperLimit: Timecode.UpperLimit?","type":"property"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/validationattributes","title":"var validationAttributes: [NSAttributedString.Key : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/attributedstring(for:withdefaultattributes:)","title":"func attributedString(for: Any, withDefaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString?","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/getobjectvalue(_:for:errordescription:)","title":"func getObjectValue(AutoreleasingUnsafeMutablePointer<AnyObject?>?, for: String, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/inheritproperties(from:)","title":"func inheritProperties(from: Timecode.TextFormatter)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/ispartialstringvalid(_:proposedselectedrange:originalstring:originalselectedrange:errordescription:)","title":"func isPartialStringValid(AutoreleasingUnsafeMutablePointer<NSString>, proposedSelectedRange: NSRangePointer?, originalString: String, originalSelectedRange: NSRange, errorDescription: AutoreleasingUnsafeMutablePointer<NSString?>?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecode\/textformatter\/string(for:)","title":"func string(for: Any?) -> String?","type":"method"}],"path":"\/documentation\/midikit\/timecode\/textformatter","title":"Timecode.TextFormatter","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/*(_:_:)","title":"static func * (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/+(_:_:)","title":"static func + (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/-(_:_:)","title":"static func - (Timecode.FrameCount, Timecode.FrameCount) -> Timecode.FrameCount","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-3wywy","title":"static func \/ (Timecode.FrameCount, Double) -> Timecode.FrameCount","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/init(_:base:)","title":"init(Timecode.FrameCount.Value, base: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/iszero","title":"var isZero: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subframesbase","title":"let subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.property","title":"var value: Timecode.FrameCount.Value","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/wholeframes","title":"var wholeFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/adding(_:)","title":"func adding(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/dividing(by:)","title":"func dividing(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/multiplying(by:)","title":"func multiplying(by: Double) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/subtracting(_:)","title":"func subtracting(Timecode.FrameCount) -> Timecode.FrameCount","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/combined(frames:)","title":"case combined(frames: Double)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/frames(_:)","title":"case frames(Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/split(frames:subframes:)","title":"case split(frames: Int, subFrames: Int)","type":"case"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/splitunitinterval(frames:subframesunitinterval:)","title":"case splitUnitInterval(frames: Int, subFramesUnitInterval: Double)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/iszero","title":"var isZero: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/value-swift.enum","title":"Timecode.FrameCount.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:)-99vn3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:)-tl76","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-21k75","title":"static func > (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-6zfr9","title":"static func < (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_(_:_:)-9h0wy","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_=(_:_:)-1hukx","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/_=(_:_:)-5h95v","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-1ly37","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-1vtbw","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/clamped(to:)-3t6b","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/==(_:_:)","title":"static func == (Timecode.FrameCount, Timecode.FrameCount) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/framecount-swift.struct","title":"Timecode.FrameCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/init(rate:base:limit:)","title":"init(rate: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/upperlimit","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/properties-swift.struct","title":"Timecode.Properties","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-2408u","title":"static func * (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*(_:_:)-31yyg","title":"static func * <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-8a2na","title":"static func *= (inout Timecode, Double)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/*=(_:_:)-9nsob","title":"static func *= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:)","title":"static func + (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+(_:_:)","title":"static func + (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/+=(_:_:)","title":"static func += (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:)","title":"static func - (Timecode) -> TimecodeInterval","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-(_:_:)","title":"static func - (Timecode, Timecode) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/-=(_:_:)","title":"static func -= (inout Timecode, Timecode)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-323qu","title":"static func \/ (Timecode, Timecode) -> Double","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-563ih","title":"static func \/ <T>(Timecode, T) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-5s440","title":"static func \/ (Timecode, Double) -> Timecode","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-3n4p4","title":"static func \/= <T>(inout Timecode, T)","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-hpkf","title":"static func \/= (inout Timecode, Double)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(_:)-3i5yx","title":"init(RichTimecodeSourceValue) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:)-6vdaz","title":"init(GuaranteedRichTimecodeSourceValue)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-5c83i","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-6c3tu","title":"init(GuaranteedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:)-w372","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:by:)-1mmhx","title":"init(FormattedTimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit, by: Timecode.ValidationRule) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:at:base:limit:by:)-7ini4","title":"init(TimecodeSourceValue, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit, by: Timecode.ValidationRule)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-41kgh","title":"init(FormattedTimecodeSourceValue, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-7lle2","title":"init(GuaranteedTimecodeSourceValue, using: Timecode.Properties)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:)-91fix","title":"init(TimecodeSourceValue, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:by:)-62c6g","title":"init(TimecodeSourceValue, using: Timecode.Properties, by: Timecode.ValidationRule)","type":"init"},{"path":"\/documentation\/midikit\/timecode\/init(_:using:by:)-vi3i","title":"init(FormattedTimecodeSourceValue, using: Timecode.Properties, by: Timecode.ValidationRule) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.property","title":"var components: Timecode.Components","type":"property"},{"path":"\/documentation\/midikit\/timecode\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/feetandframesvalue","title":"var feetAndFramesValue: FeetAndFrames","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framecount-swift.property","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/framerate","title":"var frameRate: TimecodeFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecode\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents","title":"var invalidComponents: Set<Timecode.Component>","type":"property"},{"path":"\/documentation\/midikit\/timecode\/iszero","title":"var isZero: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxframecountexpressible","title":"var maxFrameCountExpressible: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframecountexpressible","title":"var maxSubFrameCountExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/maxsubframesexpressible","title":"var maxSubFramesExpressible: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/properties-swift.property","title":"var properties: Timecode.Properties","type":"property"},{"path":"\/documentation\/midikit\/timecode\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecode\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecode\/scaledtomidifilesmpteframerate","title":"var scaledToMIDIFileSMPTEFrameRate: (scaledTimecode: Timecode?, smpteFR: MIDIFile.SMPTEOffsetFrameRate)","type":"property"},{"path":"\/documentation\/midikit\/timecode\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.property","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.property","title":"var upperLimit: Timecode.UpperLimit","type":"property"},{"path":"\/documentation\/midikit\/timecode\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-14tde","title":"func add(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-3240f","title":"func add(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-55w29","title":"func add(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-71xxo","title":"func add(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-857gw","title":"func add(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-88aua","title":"func add(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:)-9m8xq","title":"func add(Timecode) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-14dcw","title":"func add(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-1yniv","title":"func add(TimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-2njan","title":"func add(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-42lw","title":"func add(Timecode, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-4lww7","title":"func add(Timecode.Components, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-4nkq8","title":"func add(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/add(_:by:)-6fwhs","title":"func add(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-1o83k","title":"func adding(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-5bv1","title":"func adding(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-7b8yj","title":"func adding(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-8rxca","title":"func adding(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-904hr","title":"func adding(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-qlqv","title":"func adding(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:)-z5j7","title":"func adding(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-19lr1","title":"func adding(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-6awjq","title":"func adding(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-74tzs","title":"func adding(TimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-7fcyg","title":"func adding(Timecode.Components, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-8pf7p","title":"func adding(Timecode, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-91bfw","title":"func adding(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/adding(_:by:)-9o39d","title":"func adding(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/asinterval(_:)","title":"func asInterval(FloatingPointSign) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/clampcomponents()","title":"func clampComponents()","type":"method"},{"path":"\/documentation\/midikit\/timecode\/cmformatdescription(extensions:)","title":"func cmFormatDescription(extensions: CMFormatDescription.Extensions?) throws -> CMTimeCodeFormatDescription","type":"method"},{"path":"\/documentation\/midikit\/timecode\/compare(to:timelinestart:)","title":"func compare(to: Timecode, timelineStart: Timecode?) -> ComparisonResult","type":"method"},{"path":"\/documentation\/midikit\/timecode\/converted(to:preservingvalues:)","title":"func converted(to: TimecodeFrameRate, preservingValues: Bool) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:)","title":"func divide(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/divide(_:by:)","title":"func divide(Double, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-4bgmz","title":"func dividing(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-96rdz","title":"func dividing(Timecode.Components) throws -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:)-9pfge","title":"func dividing(Timecode) throws -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/dividing(_:by:)","title":"func dividing(Double, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/interval(to:)","title":"func interval(to: Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:)","title":"func multiply(Double) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiply(_:by:)","title":"func multiply(Double, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:)","title":"func multiplying(Double) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/multiplying(_:by:)","title":"func multiplying(Double, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offset(by:)","title":"func offset(by: TimecodeInterval)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/offsetting(by:)","title":"func offsetting(by: TimecodeInterval) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/rounddown(tonearest:)","title":"func roundDown(toNearest: Timecode.Component)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundup(tonearest:)","title":"func roundUp(toNearest: Timecode.Component) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundeddown(tonearest:)","title":"func roundedDown(toNearest: Timecode.Component) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/roundedup(tonearest:)","title":"func roundedUp(toNearest: Timecode.Component) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesdoublevalue(samplerate:)","title":"func samplesDoubleValue(sampleRate: Int) -> Double","type":"method"},{"path":"\/documentation\/midikit\/timecode\/samplesvalue(samplerate:)","title":"func samplesValue(sampleRate: Int) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-22ndo","title":"func set(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-2rc5m","title":"func set(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-3p8ei","title":"func set(GuaranteedTimecodeSourceValue)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-5y7su","title":"func set(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:)-89p8h","title":"func set(GuaranteedRichTimecodeSourceValue) -> Timecode.Properties","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:by:)-1goc0","title":"func set(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/set(_:by:)-92yoi","title":"func set(TimecodeSourceValue, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-1dhd5","title":"func setting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-3akbp","title":"func setting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-5q0hp","title":"func setting(GuaranteedRichTimecodeSourceValue) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-81hub","title":"func setting(GuaranteedTimecodeSourceValue) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:)-95f3c","title":"func setting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:by:)-2fpos","title":"func setting(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/setting(_:by:)-42wj3","title":"func setting(TimecodeSourceValue, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvalue(format:)","title":"func stringValue(format: Timecode.StringFormat) -> String","type":"method"},{"path":"\/documentation\/midikit\/timecode\/stringvaluevalidated(format:invalidattributes:defaultattributes:)","title":"func stringValueValidated(format: Timecode.StringFormat, invalidAttributes: [NSAttributedString.Key : Any]?, defaultAttributes: [NSAttributedString.Key : Any]?) -> NSAttributedString","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-1rf5l","title":"func subtract(FormattedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-3j57f","title":"func subtract(GuaranteedRichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-5gp46","title":"func subtract(Timecode) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-7furw","title":"func subtract(Timecode.Components) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-9js9a","title":"func subtract(GuaranteedTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-9oxpu","title":"func subtract(TimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:)-ocmj","title":"func subtract(RichTimecodeSourceValue) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-33g0h","title":"func subtract(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-3onj2","title":"func subtract(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-4l96x","title":"func subtract(Timecode, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-508dt","title":"func subtract(TimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-857ne","title":"func subtract(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-8cjf8","title":"func subtract(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtract(_:by:)-9n8ue","title":"func subtract(Timecode.Components, by: Timecode.ValidationRule)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-1o05d","title":"func subtracting(FormattedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-29zr6","title":"func subtracting(GuaranteedRichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-3ovst","title":"func subtracting(TimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-49fu","title":"func subtracting(RichTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-4k13k","title":"func subtracting(Timecode.Components) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-8mzxx","title":"func subtracting(GuaranteedTimecodeSourceValue) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:)-9gs31","title":"func subtracting(Timecode) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-17ava","title":"func subtracting(Timecode.Components, by: Timecode.ValidationRule) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-2gt9c","title":"func subtracting(RichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-3pd2x","title":"func subtracting(GuaranteedRichTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-42lpp","title":"func subtracting(FormattedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-4i08g","title":"func subtracting(Timecode, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-92c0s","title":"func subtracting(GuaranteedTimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subtracting(_:by:)-p5la","title":"func subtracting(TimecodeSourceValue, by: Timecode.ValidationRule) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transform(using:)","title":"func transform(using: TimecodeTransformer)","type":"method"},{"path":"\/documentation\/midikit\/timecode\/transformed(using:)","title":"func transformed(using: TimecodeTransformer) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/validrange(of:)","title":"func validRange(of: Timecode.Component) -> ClosedRange<Int>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformat","title":"Timecode.StringFormat","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components(of:at:)","title":"static func components(of: Timecode.FrameCount, at: TimecodeFrameRate) -> Timecode.Components","type":"method"},{"path":"\/documentation\/midikit\/timecode\/framecount(of:at:base:)","title":"static func frameCount(of: Timecode.Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase) -> Timecode.FrameCount","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:at:base:limit:)","title":"static func invalidComponents(in: Timecode.Components, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/invalidcomponents(in:using:)","title":"static func invalidComponents(in: Timecode.Components, using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/days","title":"case days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/frames","title":"case frames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/hours","title":"case hours","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/minutes","title":"case minutes","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/seconds","title":"case seconds","type":"case"},{"path":"\/documentation\/midikit\/timecode\/component\/subframes","title":"case subFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/component\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/component\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/component","title":"Timecode.Component","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/internalerror","title":"case internalError","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/missingornonstandardframerate","title":"case missingOrNonStandardFrameRate","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/unknowntimecode","title":"case unknownTimecode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/mediaparseerror","title":"Timecode.MediaParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/internalerror","title":"case internalError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/mediawriteerror","title":"Timecode.MediaWriteError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/filenamecompatible","title":"case filenameCompatible","type":"case"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/showsubframes","title":"case showSubFrames","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringformatoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringformatoption","title":"Timecode.StringFormatOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/malformed","title":"case malformed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stringparseerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/stringparseerror","title":"Timecode.StringParseError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/max100subframes","title":"case max100SubFrames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/max80subframes","title":"case max80SubFrames","type":"case"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/quarterframes","title":"case quarterFrames","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/convert(subframes:to:)","title":"func convert(subFrames: Int, to: Timecode.SubFramesBase) -> Int","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/default()","title":"static func `default`() -> Timecode.SubFramesBase","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/id","title":"var id: Timecode.SubFramesBase.RawValue","type":"property"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/subframesbase-swift.enum","title":"Timecode.SubFramesBase","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/max100days","title":"case max100Days","type":"case"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/max24hours","title":"case max24Hours","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/upperlimit-swift.enum","title":"Timecode.UpperLimit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/outofbounds","title":"case outOfBounds","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/validationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationerror","title":"Timecode.ValidationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/allowinginvalid","title":"case allowingInvalid","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/clamping","title":"case clamping","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/clampingcomponents","title":"case clampingComponents","type":"case"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/wrapping","title":"case wrapping","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/validationrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/validationrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/validationrule","title":"Timecode.ValidationRule","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/'...(_:)-4oa40","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'...(_:)-9ilrc","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-9emui","title":"static func < (Timecode, Timecode) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-9wjp4","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_(_:_:)-l1q2","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-68szz","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/_=(_:_:)-9myg4","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/midikit\/timecode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)-2mxw7","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/timecode\/==(_:_:)-91sym","title":"static func == (Timecode, Timecode) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecode\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/advanced(by:)","title":"func advanced(by: Timecode.Stride) -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/timecode\/distance(to:)","title":"func distance(to: Timecode) -> Timecode.Stride","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/stride","title":"Timecode.Stride","type":"typealias"}],"path":"\/documentation\/midikit\/timecode\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode","title":"Timecode","type":"struct"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps23_976","title":"case fps23_976","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps24","title":"case fps24","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps24_98","title":"case fps24_98","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps25","title":"case fps25","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps29_97","title":"case fps29_97","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps29_97d","title":"case fps29_97d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps30","title":"case fps30","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps30d","title":"case fps30d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps47_952","title":"case fps47_952","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps48","title":"case fps48","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps50","title":"case fps50","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps59_94","title":"case fps59_94","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps59_94d","title":"case fps59_94d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps60","title":"case fps60","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps60d","title":"case fps60d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps95_904","title":"case fps95_904","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps96","title":"case fps96","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps100","title":"case fps100","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps119_88","title":"case fps119_88","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps119_88d","title":"case fps119_88d","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps120","title":"case fps120","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/fps120d","title":"case fps120d","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/string\/timecodeframerate","title":"var timecodeFrameRate: TimecodeFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(frameduration:drop:)-57qbd","title":"init?(frameDuration: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(frameduration:drop:)-5r5jx","title":"init?(frameDuration: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rate:drop:)-1l2o5","title":"init?(rate: Fraction, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rate:drop:)-3vf3a","title":"init?(rate: CMTime, drop: Bool)","type":"init"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/aafmetadata","title":"var aafMetadata: (editRate: String, dropFrame: String, framesPerSecond: String)","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.property","title":"var compatibleGroup: TimecodeFrameRate.CompatibleGroup","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegrouprates","title":"var compatibleGroupRates: [TimecodeFrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/fcpxmlmetadata","title":"var fcpXMLMetadata: (frameDuration: String, tcFormat: String)","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/isdrop","title":"var isDrop: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxframenumberdisplayable","title":"var maxFrameNumberDisplayable: Int","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/midifilesmpteoffsetrate","title":"var midiFileSMPTEOffsetRate: MIDIFile.SMPTEOffsetFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/mtcframerate","title":"var mtcFrameRate: MTCFrameRate","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/iscompatible(with:)","title":"func isCompatible(with: TimecodeFrameRate) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxsubframecountexpressible(in:base:)","title":"func maxSubFrameCountExpressible(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalframes(in:)","title":"func maxTotalFrames(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalframesexpressible(in:)","title":"func maxTotalFramesExpressible(in: Timecode.UpperLimit) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/maxtotalsubframes(in:base:)","title":"func maxTotalSubFrames(in: Timecode.UpperLimit, base: Timecode.SubFramesBase) -> Int","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/transmitsmtc(using:)","title":"func transmitsMTC(using: MTCFrameRate) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/videoframerate(interlaced:)","title":"func videoFrameRate(interlaced: Bool) -> VideoFrameRate?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/alldrop","title":"static let allDrop: [TimecodeFrameRate]","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/allnondrop","title":"static let allNonDrop: [TimecodeFrameRate]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolor","title":"case ntscColor","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntsccolorwalltime","title":"case ntscColorWallTime","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/ntscdrop","title":"case ntscDrop","type":"case"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/whole","title":"case whole","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/table","title":"static var table: [TimecodeFrameRate.CompatibleGroup : [TimecodeFrameRate]]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeframerate\/compatiblegroup-swift.enum","title":"TimecodeFrameRate.CompatibleGroup","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/timecodeframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/timecodeframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeframerate","title":"TimecodeFrameRate","type":"enum"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Timecode Related","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(d:h:m:s:f:sf:)","title":"init(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/days","title":"var days: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/hours","title":"var hours: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/minutes","title":"var minutes: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/seconds","title":"var seconds: Int","type":"property"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/subframes","title":"var subFrames: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(at:base:limit:)","title":"func invalidComponents(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/invalidcomponents(using:)","title":"func invalidComponents(using: Timecode.Properties) -> Set<Timecode.Component>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:at:base:limit:)","title":"func validRange(of: Timecode.Component, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) -> ClosedRange<Int>","type":"method"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/validrange(of:using:)","title":"func validRange(of: Timecode.Component, using: Timecode.Properties) -> ClosedRange<Int>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/zero","title":"static let zero: Timecode.Components","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecode\/components-swift.struct","title":"Timecode.Components","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:_:)","title":"init(Timecode, FloatingPointSign)","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:at:base:limit:)-9q4rx","title":"init(CMTime, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:at:base:limit:)-9qp4j","title":"init(Fraction, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:using:)-44vat","title":"init(CMTime, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(_:using:)-62nk","title":"init(Fraction, using: Timecode.Properties) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(realtime:at:base:limit:)","title":"init(realTime: TimeInterval, at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws","type":"init"},{"path":"\/documentation\/midikit\/timecodeinterval\/init(realtime:using:)","title":"init(realTime: TimeInterval, using: Timecode.Properties) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/absoluteinterval","title":"let absoluteInterval: Timecode","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/rationalvalue","title":"var rationalValue: Fraction","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/realtimevalue","title":"var realTimeValue: TimeInterval","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/sign","title":"let sign: FloatingPointSign","type":"property"},{"path":"\/documentation\/midikit\/timecodeinterval\/verbosedescription","title":"var verboseDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/flattened()","title":"func flattened() -> Timecode","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/negative(_:)","title":"static func negative(Timecode) -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/timecodeinterval\/positive(_:)","title":"static func positive(Timecode) -> TimecodeInterval","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/timecodeinterval\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodeinterval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodeinterval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodeinterval","title":"TimecodeInterval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-8olp0","title":"init(TimecodeTransformer.Transform)","type":"init"},{"path":"\/documentation\/midikit\/timecodetransformer\/init(_:)-972h3","title":"init([TimecodeTransformer.Transform])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/midikit\/timecodetransformer\/transforms","title":"var transforms: [TimecodeTransformer.Transform]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform(_:)","title":"func transform(Timecode) -> Timecode","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/custom(_:)","title":"case custom((Timecode) -> Timecode)","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/none","title":"case none","type":"case"},{"path":"\/documentation\/midikit\/timecodetransformer\/transform\/offset(by:)","title":"case offset(by: TimecodeInterval)","type":"case"}],"path":"\/documentation\/midikit\/timecodetransformer\/transform","title":"TimecodeTransformer.Transform","type":"enum"}],"path":"\/documentation\/midikit\/timecodetransformer","title":"TimecodeTransformer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/init(order:timelinestart:)","title":"init(order: SortOrder, timelineStart: Timecode?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/order","title":"var order: SortOrder","type":"property"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/timelinestart","title":"var timelineStart: Timecode?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/compare(_:_:)","title":"func compare(Timecode, Timecode) -> ComparisonResult","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/compared","title":"TimecodeSortComparator.Compared","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesortcomparator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/timecodesortcomparator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/timecodesortcomparator","title":"TimecodeSortComparator","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/+(_:_:)","title":"static func + (Fraction, Fraction) -> Fraction","type":"op"},{"path":"\/documentation\/midikit\/fraction\/-(_:_:)","title":"static func - (Fraction, Fraction) -> Fraction","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/init(_:)","title":"init(CMTime)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(_:_:)","title":"init(Int, Int)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(double:decimalprecision:)","title":"init(double: Double, decimalPrecision: Int)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(fcpxmlstring:)","title":"init?(fcpxmlString: String)","type":"init"},{"path":"\/documentation\/midikit\/fraction\/init(reducing:_:)","title":"init(reducing: Int, Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/cmtimevalue","title":"var cmTimeValue: CMTime","type":"property"},{"path":"\/documentation\/midikit\/fraction\/decimalvalue","title":"var decimalValue: Decimal","type":"property"},{"path":"\/documentation\/midikit\/fraction\/denominator","title":"let denominator: Int","type":"property"},{"path":"\/documentation\/midikit\/fraction\/doublevalue","title":"var doubleValue: Double","type":"property"},{"path":"\/documentation\/midikit\/fraction\/fcpxmlstringvalue","title":"var fcpxmlStringValue: String","type":"property"},{"path":"\/documentation\/midikit\/fraction\/floatvalue","title":"var floatValue: Float","type":"property"},{"path":"\/documentation\/midikit\/fraction\/isnegative","title":"var isNegative: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/isreduced","title":"var isReduced: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/iswholeinteger","title":"var isWholeInteger: Bool","type":"property"},{"path":"\/documentation\/midikit\/fraction\/numerator","title":"let numerator: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/abs()","title":"func abs() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/isequal(to:)","title":"func isEqual(to: Fraction) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/fraction\/isidentical(to:)","title":"func isIdentical(to: Fraction) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/fraction\/negate()","title":"func negate()","type":"method"},{"path":"\/documentation\/midikit\/fraction\/negated()","title":"func negated() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/reduced()","title":"func reduced() -> Fraction","type":"method"},{"path":"\/documentation\/midikit\/fraction\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/fraction\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/zero","title":"static let zero: Fraction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/'...(_:)-2gltq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'...(_:)-8fyrw","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_(_:_:)-2i9kt","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_(_:_:)-5pyzg","title":"static func < (Fraction, Fraction) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_=(_:_:)-95mmi","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/_=(_:_:)-9erul","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-94gmp","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-jywp","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/fraction\/clamped(to:)-xe2q","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/fraction\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/fraction\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/fraction\/==(_:_:)","title":"static func == (Fraction, Fraction) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/fraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/fraction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/fraction\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/fraction","title":"Fraction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/framerateprotocol\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/framerateprotocol\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/framerateprotocol\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/framerateprotocol","title":"FrameRateProtocol","type":"protocol"},{"children":[{"title":"Rates","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/fps23_98p","title":"case fps23_98p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps24p","title":"case fps24p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps25p","title":"case fps25p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps25i","title":"case fps25i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps29_97p","title":"case fps29_97p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps29_97i","title":"case fps29_97i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps30p","title":"case fps30p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps47_95p","title":"case fps47_95p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps48p","title":"case fps48p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps50p","title":"case fps50p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps50i","title":"case fps50i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps59_94p","title":"case fps59_94p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps59_94i","title":"case fps59_94i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps60p","title":"case fps60p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps60i","title":"case fps60i","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps95_9p","title":"case fps95_9p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps96p","title":"case fps96p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps100p","title":"case fps100p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps119_88p","title":"case fps119_88p","type":"case"},{"path":"\/documentation\/midikit\/videoframerate\/fps120p","title":"case fps120p","type":"case"},{"title":"String Extensions","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/string\/videoframerate","title":"var videoFrameRate: VideoFrameRate?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(asset:)","title":"init(asset: AVAsset) throws","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(fps:interlaced:strict:)-22g3w","title":"init?(fps: Float, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(fps:interlaced:strict:)-6nlpc","title":"init?(fps: Double, interlaced: Bool, strict: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(frameduration:interlaced:)-2u2tt","title":"init?(frameDuration: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(frameduration:interlaced:)-5nhrn","title":"init?(frameDuration: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rate:interlaced:)-1aago","title":"init?(rate: CMTime, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rate:interlaced:)-6g3q9","title":"init?(rate: Fraction, interlaced: Bool)","type":"init"},{"path":"\/documentation\/midikit\/videoframerate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/fps","title":"var fps: Double","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/isinterlaced","title":"var isInterlaced: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/timecodeframerate(drop:)","title":"func timecodeFrameRate(drop: Bool) -> TimecodeFrameRate?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/videoframerate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/alternateframeduration","title":"var alternateFrameDuration: Fraction?","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/frameduration","title":"var frameDuration: Fraction","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/framedurationcmtime","title":"var frameDurationCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/rate","title":"var rate: Fraction","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/ratecmtime","title":"var rateCMTime: CMTime","type":"property"},{"path":"\/documentation\/midikit\/videoframerate\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/framerateprotocol-implementations","title":"FrameRateProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/midikit\/videoframerate\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/videoframerate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/midikit\/videoframerate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/videoframerate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/videoframerate","title":"VideoFrameRate","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/init(_:subframesbase:)","title":"init<S>(S, subFramesBase: Timecode.SubFramesBase) throws","type":"init"},{"path":"\/documentation\/midikit\/feetandframes\/init(feet:frames:subframes:subframesbase:)","title":"init(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/feet","title":"var feet: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/framecount","title":"var frameCount: Timecode.FrameCount","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/frames","title":"var frames: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/stringvalueverbose","title":"var stringValueVerbose: String","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/subframes","title":"var subFrames: Int","type":"property"},{"path":"\/documentation\/midikit\/feetandframes\/subframesbase","title":"var subFramesBase: Timecode.SubFramesBase","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/feetandframes\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/feetandframes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/feetandframes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/feetandframes","title":"FeetAndFrames","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/rangeattribute\/duration","title":"case duration","type":"case"},{"path":"\/documentation\/midikit\/rangeattribute\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/rangeattribute\/start","title":"case start","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/rangeattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/rangeattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/rangeattribute","title":"RangeAttribute","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/cmtime(_:)","title":"static func cmTime(CMTime) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/components(_:)","title":"static func components(Timecode.Components) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/components(d:h:m:s:f:sf:)","title":"static func components(d: Int, h: Int, m: Int, s: Int, f: Int, sf: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(_:)","title":"static func feetAndFrames(FeetAndFrames) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(_:subframesbase:)","title":"static func feetAndFrames<S>(S, subFramesBase: Timecode.SubFramesBase) throws -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/feetandframes(feet:frames:subframes:subframesbase:)","title":"static func feetAndFrames(feet: Int, frames: Int, subFrames: Int, subFramesBase: Timecode.SubFramesBase) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-3ut2p","title":"static func frames(Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-74ujv","title":"static func frames(Timecode.FrameCount.Value) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:)-w8ob","title":"static func frames(Timecode.FrameCount) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:subframes:)","title":"static func frames(Int, subFrames: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/frames(_:subframesunitinterval:)","title":"static func frames(Int, subFramesUnitInterval: Double) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/rational(_:)","title":"static func rational(Fraction) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/rational(_:_:)","title":"static func rational(Int, Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/realtime(seconds:)","title":"static func realTime(seconds: TimeInterval) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/samples(_:samplerate:)-34bbq","title":"static func samples(Double, sampleRate: Int) -> TimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/timecodesourcevalue\/samples(_:samplerate:)-8oidp","title":"static func samples(Int, sampleRate: Int) -> TimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/timecodesourcevalue","title":"TimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/richtimecodesourcevalue\/avasset(_:_:)","title":"static func avAsset(AVAsset, RangeAttribute) -> RichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/richtimecodesourcevalue","title":"RichTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/formattedtimecodesourcevalue\/string(_:)-5prc4","title":"static func string(String) -> FormattedTimecodeSourceValue","type":"method"},{"path":"\/documentation\/midikit\/formattedtimecodesourcevalue\/string(_:)-7c5zh","title":"static func string<S>(S) -> FormattedTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/formattedtimecodesourcevalue","title":"FormattedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/guaranteedtimecodesourcevalue\/zero","title":"static let zero: GuaranteedTimecodeSourceValue","type":"property"}],"path":"\/documentation\/midikit\/guaranteedtimecodesourcevalue","title":"GuaranteedTimecodeSourceValue","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/guaranteedrichtimecodesourcevalue\/interval(flattening:)","title":"static func interval(flattening: TimecodeInterval) -> GuaranteedRichTimecodeSourceValue","type":"method"}],"path":"\/documentation\/midikit\/guaranteedrichtimecodesourcevalue","title":"GuaranteedRichTimecodeSourceValue","type":"struct"}],"path":"\/documentation\/midikit\/midikitsync-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitsync","title":"MIDIKitSync","type":"symbol"},{"children":[{"title":"Introduction","type":"groupMarker"},{"path":"\/documentation\/midikit\/midikitcontrolsurfaces-getting-started","title":"Getting Started","type":"article"},{"title":"HUI Host (DAW)","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihost\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihost\/banks","title":"var banks: [HUIHostBank]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihost\/addbank(huieventhandler:midiouthandler:remotepresencechangedhandler:)","title":"func addBank(huiEventHandler: HUIHostBank.HUIEventHandler?, midiOutHandler: (([MIDIEvent]) -> Void)?, remotePresenceChangedHandler: HUIHostBank.PresenceChangedHandler?)","type":"method"},{"path":"\/documentation\/midikit\/huihost\/removeallbanks()","title":"func removeAllBanks()","type":"method"},{"path":"\/documentation\/midikit\/huihost\/removebank(atindex:)","title":"func removeBank(atIndex: Int)","type":"method"}],"path":"\/documentation\/midikit\/huihost","title":"HUIHost","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/huieventhandler-swift.property","title":"var huiEventHandler: HUIHostBank.HUIEventHandler?","type":"property"},{"path":"\/documentation\/midikit\/huihostbank\/isremotepresent","title":"var isRemotePresent: Bool","type":"property"},{"path":"\/documentation\/midikit\/huihostbank\/midiouthandler","title":"var midiOutHandler: HUIHostBank.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/huihostbank\/remotepresencechangedhandler","title":"var remotePresenceChangedHandler: HUIHostBank.PresenceChangedHandler?","type":"property"},{"path":"\/documentation\/midikit\/huihostbank\/remotepresencetimeout","title":"var remotePresenceTimeout: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/transmitfader(level:channel:)","title":"func transmitFader(level: UInt14, channel: UInt4)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitlargedisplay(_:)","title":"func transmitLargeDisplay(HUISurfaceModel.LargeDisplay)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitlargedisplay(slices:)","title":"func transmitLargeDisplay(slices: HUILargeDisplaySlices)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitlevelmeter(channel:side:level:)","title":"func transmitLevelMeter(channel: UInt4, side: HUISurfaceModel.StereoLevelMeter.Side, level: Int)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitsmalldisplay(_:text:)","title":"func transmitSmallDisplay(HUISmallDisplay, text: HUISmallDisplayString)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitswitch(_:state:)","title":"func transmitSwitch(HUISwitch, state: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmittimedisplay(charsrighttoleft:)","title":"func transmitTimeDisplay(charsRightToLeft: [HUITimeDisplayCharacter])","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmittimedisplay(text:)","title":"func transmitTimeDisplay(text: HUITimeDisplayString)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/transmitvpot(_:display:)","title":"func transmitVPot(HUIVPot, display: HUIVPotDisplay)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/huieventhandler-swift.typealias","title":"HUIHostBank.HUIEventHandler","type":"typealias"},{"path":"\/documentation\/midikit\/huihostbank\/presencechangedhandler","title":"HUIHostBank.PresenceChangedHandler","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/midikit\/huihostbank\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/huihostbank\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostbank\/midiout(_:)-3wmyi","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/huihostbank\/midiout(_:)-7vkrc","title":"func midiOut([MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/huihostbank\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huihostbank","title":"HUIHostBank","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostevent\/channeldisplay(channelstrip:text:)","title":"case channelDisplay(channelStrip: UInt4, text: HUISmallDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/faderlevel(channelstrip:level:)","title":"case faderLevel(channelStrip: UInt4, level: UInt14)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/largedisplay(slices:)","title":"case largeDisplay(slices: HUILargeDisplaySlices)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/levelmeter(channelstrip:side:level:)","title":"case levelMeter(channelStrip: UInt4, side: HUISurfaceModel.StereoLevelMeter.Side, level: Int)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/ping","title":"case ping","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/selectassigndisplay(text:)","title":"case selectAssignDisplay(text: HUISmallDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/switch(huiswitch:state:)","title":"case `switch`(huiSwitch: HUISwitch, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/timedisplay(charsrighttoleft:)","title":"case timeDisplay(charsRightToLeft: [HUITimeDisplayCharacter])","type":"case"},{"path":"\/documentation\/midikit\/huihostevent\/vpot(vpot:display:)","title":"case vPot(vPot: HUIVPot, display: HUIVPotDisplay)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostevent\/encode()","title":"func encode() -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostevent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huihostevent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihostevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huihostevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huihostevent","title":"HUIHostEvent","type":"enum"},{"children":[{"title":"Display Identification","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplay\/channel(_:)","title":"case channel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplay\/selectassign","title":"case selectAssign","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplay\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huismalldisplay\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huismalldisplay","title":"HUISmallDisplay","type":"enum"},{"title":"Large Display (40 x 2 chars)","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/a-4rxhr","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/b-35w9i","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/c-8pg2c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/d-3eeg4","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/e-69pnw","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/f-9jhs8","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/g-5ey0i","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/h-4nc0k","title":"case H","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/i-2qp8u","title":"case I","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/j-49d9i","title":"case J","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/k-3xfn8","title":"case K","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/l-9887","title":"case L","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/m-34tbx","title":"case M","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/n-36g2l","title":"case N","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/o-29x16","title":"case O","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/p-9zc2m","title":"case P","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/q-2vlnp","title":"case Q","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r-4oq4j","title":"case R","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/s-6qwr2","title":"case S","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/t-3ta2z","title":"case T","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/u-73zdf","title":"case U","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/v-1o40g","title":"case V","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/w-2olh8","title":"case W","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/x-2qggi","title":"case X","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/y-22o1q","title":"case Y","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/z-3lc0m","title":"case Z","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/a-3656m","title":"case a","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/ampersand","title":"case ampersand","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/apostrophe","title":"case apostrophe","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/asterisk","title":"case asterisk","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/at","title":"case at","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/b-6qvov","title":"case b","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/backslash","title":"case backSlash","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/backtick","title":"case backtick","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/c-3j4qs","title":"case c","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/caret","title":"case caret","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/closeparens","title":"case closeParens","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/colon","title":"case colon","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/comma","title":"case comma","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/d-4njrc","title":"case d","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/degreescelsius","title":"case degreesCelsius","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/degreesfahrenheit","title":"case degreesFahrenheit","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/dollar","title":"case dollar","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/doublequote","title":"case doubleQuote","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/e-1ktyo","title":"case e","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x00","title":"case empty0x00","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x01","title":"case empty0x01","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x02","title":"case empty0x02","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x03","title":"case empty0x03","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x04","title":"case empty0x04","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x05","title":"case empty0x05","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x06","title":"case empty0x06","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x07","title":"case empty0x07","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x08","title":"case empty0x08","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x09","title":"case empty0x09","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0a","title":"case empty0x0A","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0b","title":"case empty0x0B","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0c","title":"case empty0x0C","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0d","title":"case empty0x0D","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0e","title":"case empty0x0E","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/empty0x0f","title":"case empty0x0F","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/equal","title":"case equal","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/exclamationpoint","title":"case exclamationPoint","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/f-5lgyu","title":"case f","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/forwardslash","title":"case forwardSlash","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/full","title":"case full","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/g-q1x2","title":"case g","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/h-16qwi","title":"case h","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/hash","title":"case hash","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/i-2wdst","title":"case i","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/j-4f1h3","title":"case j","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/k-gue6","title":"case k","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/l-2mbjd","title":"case l","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/leftanglebracket","title":"case leftAngleBracket","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/leftarrow","title":"case leftArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/leftbrace","title":"case leftBrace","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/leftsquarebracket","title":"case leftSquareBracket","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/m-6sez5","title":"case m","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/minus","title":"case minus","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/musicnote","title":"case musicNote","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/n-tbq2","title":"case n","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num0","title":"case num0","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num1","title":"case num1","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num11","title":"case num11","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num12","title":"case num12","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num13","title":"case num13","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num14","title":"case num14","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num2","title":"case num2","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num3","title":"case num3","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num4","title":"case num4","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num5","title":"case num5","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num6","title":"case num6","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num7","title":"case num7","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num8","title":"case num8","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/num9","title":"case num9","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/o-4adxu","title":"case o","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/openparens","title":"case openParens","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/p-14j6f","title":"case p","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/percent","title":"case percent","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/period","title":"case period","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/pipe","title":"case pipe","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/plus","title":"case plus","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/q-40ehp","title":"case q","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/question","title":"case question","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r-4rseh","title":"case r","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r1","title":"case r1","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r2","title":"case r2","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r3","title":"case r3","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/r4","title":"case r4","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/rightanglebracket","title":"case rightAngleBracket","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/rightarrow","title":"case rightArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/rightbrace","title":"case rightBrace","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/rightsquarebracket","title":"case rightSquareBracket","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/s-1klcu","title":"case s","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/semicolon","title":"case semicolon","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/soliddownarrow","title":"case solidDownArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/solidleftarrow","title":"case solidLeftArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/solidrightarrow","title":"case solidRightArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/soliduparrow","title":"case solidUpArrow","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/space","title":"case space","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/t-2qnu6","title":"case t","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/u-9lvwv","title":"case u","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/underscore","title":"case underscore","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/v-3ol8o","title":"case v","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/w-51ooa","title":"case w","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/x-3xvap","title":"case x","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/y-6tqfj","title":"case y","type":"case"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/z-3kg83","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/init(rawvalue:)-9pkrf","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huilargedisplaycharacter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huilargedisplaycharacter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/init(rawvalue:)-2o6ug","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/default()","title":"static func `default`() -> HUILargeDisplayCharacter","type":"method"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/unknown()","title":"static func unknown() -> HUILargeDisplayCharacter","type":"method"}],"path":"\/documentation\/midikit\/huilargedisplaycharacter\/huicharacter-implementations","title":"HUICharacter Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaycharacter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huilargedisplaycharacter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huilargedisplaycharacter","title":"HUILargeDisplayCharacter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/chars","title":"var chars: [HUILargeDisplayString.Element]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/element","title":"HUILargeDisplayString.Element","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/staticcount","title":"static let staticCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huilargedisplaystring\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huilargedisplaystring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/init(chars:)","title":"init(chars: [Self.Element])","type":"init"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/init(lossy:)","title":"init(lossy: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/defaultchars","title":"static var defaultChars: [Self.Element]","type":"property"}],"path":"\/documentation\/midikit\/huilargedisplaystring\/huistring-implementations","title":"HUIString Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huilargedisplaystring\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huilargedisplaystring\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huilargedisplaystring","title":"HUILargeDisplayString","type":"struct"},{"title":"Small Displays (4 chars)","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a-7p8ed","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a_-5eawi","title":"case Å","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a_-7o5c9","title":"case Ä","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/b-6z3p4","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/c-gktf","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/c_","title":"case Ç","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/d-5aq5z","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e-67g7s","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e_-8e6uk","title":"case É","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/f-2v4sj","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/g-7dwfm","title":"case G","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/h-2f1y4","title":"case H","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/i-ip46","title":"case I","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/j-5tp8i","title":"case J","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/k-1z5hl","title":"case K","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/l-8iw23","title":"case L","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/m-6v7i","title":"case M","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/n-6x6c3","title":"case N","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/n_","title":"case Ň","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/o-7qddo","title":"case O","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/o_-5s13d","title":"case Ö","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/p-1ilic","title":"case P","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/q-9lka7","title":"case Q","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/r-6w9p","title":"case R","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/s-8szxt","title":"case S","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/t-79tkp","title":"case T","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/u-5d6rd","title":"case U","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/u_-7twoi","title":"case Ü","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/v-8gvta","title":"case V","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/w-9a8ag","title":"case W","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/x-u0gb","title":"case X","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/y-8x8wk","title":"case Y","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/z-6iadu","title":"case Z","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-10gip","title":"case æ","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-2nqrc","title":"case ℉","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-55iid","title":"case Ø","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-6dv8p","title":"case ß","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-6ehrq","title":"case ì","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-6gx21","title":"case ø","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-6mhfl","title":"case à","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-8vh3e","title":"case ℃","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/_-9ip2h","title":"case Æ","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a-72sa","title":"case a","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a_-4is6c","title":"case å","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/a_-7kylt","title":"case ä","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/ampersand","title":"case ampersand","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/apostrophe","title":"case apostrophe","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/asterisk","title":"case asterisk","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/at","title":"case at","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/b-70frh","title":"case b","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/backslash","title":"case backSlash","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/backtick","title":"case backtick","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/c-2vvpt","title":"case c","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/caret","title":"case caret","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/closeparens","title":"case closeParens","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/colon","title":"case colon","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/comma","title":"case comma","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/d-8ybmj","title":"case d","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/dollar","title":"case dollar","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/doublequote","title":"case doubleQuote","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/downarrow","title":"case downArrow","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e-728wr","title":"case e","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e_-15gpe","title":"case é","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e_-1hkx9","title":"case ê","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/e_-1uaqt","title":"case è","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/equal","title":"case equal","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/exclamationpoint","title":"case exclamationPoint","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/f-mub7","title":"case f","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/forwardslash","title":"case forwardSlash","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/g-7d0u9","title":"case g","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/h-1a86r","title":"case h","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/hash","title":"case hash","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/i-87dlm","title":"case i","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/invertedquestion","title":"case invertedQuestion","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/j-72ucm","title":"case j","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/k-5pcuz","title":"case k","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/l-9b2l5","title":"case l","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/leftanglebracket","title":"case leftAngleBracket","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/leftarrow","title":"case leftArrow","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/leftbrace","title":"case leftBrace","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/leftsquarebracket","title":"case leftSquareBracket","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/m-87ap","title":"case m","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/minus","title":"case minus","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/n-1qv37","title":"case n","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num0","title":"case num0","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num1","title":"case num1","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num2","title":"case num2","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num3","title":"case num3","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num4","title":"case num4","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num5","title":"case num5","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num6","title":"case num6","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num7","title":"case num7","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num8","title":"case num8","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/num9","title":"case num9","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/o-1edln","title":"case o","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/o_-4kw2f","title":"case ö","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/o_-9n79v","title":"case ò","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/openparens","title":"case openParens","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/p-58t02","title":"case p","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/percent","title":"case percent","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/period","title":"case period","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/pipe","title":"case pipe","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/plus","title":"case plus","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/pound","title":"case pound","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/q-9cepg","title":"case q","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/question","title":"case question","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/r-8ziwb","title":"case r","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/rightanglebracket","title":"case rightAngleBracket","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/rightarrow","title":"case rightArrow","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/rightbrace","title":"case rightBrace","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/rightsquarebracket","title":"case rightSquareBracket","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/s-1au8y","title":"case s","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/semicolon","title":"case semicolon","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/shadedsquare","title":"case shadedSquare","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/space","title":"case space","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/t-9mwrv","title":"case t","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/tilde","title":"case tilde","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/u-90s79","title":"case u","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/u_-1s14e","title":"case ü","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/u_-5w9nm","title":"case ù","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/underscore","title":"case underscore","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/uparrow","title":"case upArrow","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/v-9qidt","title":"case v","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/w-6ird2","title":"case w","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/x-gidu","title":"case x","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/y-4nwz","title":"case y","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/yen","title":"case yen","type":"case"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/z-6nymb","title":"case z","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/init(rawvalue:)-7zitw","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huismalldisplaycharacter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huismalldisplaycharacter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/init(rawvalue:)-7u9no","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/default()","title":"static func `default`() -> HUISmallDisplayCharacter","type":"method"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/unknown()","title":"static func unknown() -> HUISmallDisplayCharacter","type":"method"}],"path":"\/documentation\/midikit\/huismalldisplaycharacter\/huicharacter-implementations","title":"HUICharacter Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaycharacter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huismalldisplaycharacter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huismalldisplaycharacter","title":"HUISmallDisplayCharacter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/chars","title":"var chars: [HUISmallDisplayString.Element]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/element","title":"HUISmallDisplayString.Element","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/staticcount","title":"static let staticCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huismalldisplaystring\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huismalldisplaystring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/init(chars:)","title":"init(chars: [Self.Element])","type":"init"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/init(lossy:)","title":"init(lossy: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/defaultchars","title":"static var defaultChars: [Self.Element]","type":"property"}],"path":"\/documentation\/midikit\/huismalldisplaystring\/huistring-implementations","title":"HUIString Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huismalldisplaystring\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huismalldisplaystring\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huismalldisplaystring","title":"HUISmallDisplayString","type":"struct"},{"title":"Time Display","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/a","title":"case A","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/adot","title":"case Adot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/b","title":"case B","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/bdot","title":"case Bdot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/cdot","title":"case Cdot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/d","title":"case D","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/ddot","title":"case Ddot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/e","title":"case E","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/edot","title":"case Edot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/f","title":"case F","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/fdot","title":"case Fdot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num0","title":"case num0","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num0dot","title":"case num0dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num1","title":"case num1","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num1dot","title":"case num1dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num2","title":"case num2","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num2dot","title":"case num2dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num3","title":"case num3","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num3dot","title":"case num3dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num4","title":"case num4","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num4dot","title":"case num4dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num5","title":"case num5","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num5dot","title":"case num5dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num6","title":"case num6","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num6dot","title":"case num6dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num7","title":"case num7","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num7dot","title":"case num7dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num8","title":"case num8","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num8dot","title":"case num8dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num9","title":"case num9","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/num9dot","title":"case num9dot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/space","title":"case space","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/spacedot","title":"case spaceDot","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x21","title":"case unknown0x21","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x22","title":"case unknown0x22","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x23","title":"case unknown0x23","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x24","title":"case unknown0x24","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x25","title":"case unknown0x25","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x26","title":"case unknown0x26","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x27","title":"case unknown0x27","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x28","title":"case unknown0x28","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x29","title":"case unknown0x29","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2a","title":"case unknown0x2A","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2b","title":"case unknown0x2B","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2c","title":"case unknown0x2C","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2d","title":"case unknown0x2D","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2e","title":"case unknown0x2E","type":"case"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown0x2f","title":"case unknown0x2F","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/init(rawvalue:)-3gll","title":"init?(rawValue: UInt7)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/hasdot","title":"var hasDot: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huitimedisplaycharacter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huitimedisplaycharacter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/init(rawvalue:)-9edto","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/default()","title":"static func `default`() -> HUITimeDisplayCharacter","type":"method"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/unknown()","title":"static func unknown() -> HUITimeDisplayCharacter","type":"method"}],"path":"\/documentation\/midikit\/huitimedisplaycharacter\/huicharacter-implementations","title":"HUICharacter Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaycharacter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huitimedisplaycharacter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huitimedisplaycharacter","title":"HUITimeDisplayCharacter","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/init(lossy:)-rwm6","title":"init(lossy: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/chars","title":"var chars: [HUITimeDisplayString.Element]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/element","title":"HUITimeDisplayString.Element","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/staticcount","title":"static let staticCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huitimedisplaystring\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huitimedisplaystring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/init(chars:)","title":"init(chars: [Self.Element])","type":"init"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/init(lossy:)-39btg","title":"init(lossy: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/defaultchars","title":"static var defaultChars: [Self.Element]","type":"property"}],"path":"\/documentation\/midikit\/huitimedisplaystring\/huistring-implementations","title":"HUIString Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huitimedisplaystring\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huitimedisplaystring\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huitimedisplaystring","title":"HUITimeDisplayString","type":"struct"}],"path":"\/documentation\/midikit\/midikitcontrolsurfaces-text","title":"HUI Text: Characters and Strings","type":"symbol"},{"title":"HUI Surface (Controller)","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/init(alwaysnotify:modelnotificationhandler:remotepresencechangedhandler:midiouthandler:)","title":"init(alwaysNotify: Bool, modelNotificationHandler: HUISurface.ModelNotificationHandler?, remotePresenceChangedHandler: HUISurface.PresenceChangedHandler?, midiOutHandler: HUISurface.MIDIOutHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/alwaysnotify","title":"var alwaysNotify: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/isremotepresent","title":"var isRemotePresent: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/midiouthandler","title":"var midiOutHandler: HUISurface.MIDIOutHandler?","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/model","title":"var model: HUISurfaceModel","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/modelnotificationhandler-swift.property","title":"var modelNotificationHandler: HUISurface.ModelNotificationHandler?","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/remotepresencechangedhandler","title":"var remotePresenceChangedHandler: HUISurface.PresenceChangedHandler?","type":"property"},{"path":"\/documentation\/midikit\/huisurface\/remotepresencetimeout","title":"var remotePresenceTimeout: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitfader(istouched:channel:)","title":"func transmitFader(isTouched: Bool, channel: UInt4)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitfader(level:channel:)","title":"func transmitFader(level: UInt14, channel: UInt4)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitjogwheel(delta:)","title":"func transmitJogWheel(delta: Int7)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitswitch(_:state:)","title":"func transmitSwitch(HUISwitch, state: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitsystemreset()","title":"func transmitSystemReset()","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/transmitvpot(delta:for:)","title":"func transmitVPot(delta: Int7, for: HUIVPot)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/modelnotificationhandler-swift.typealias","title":"HUISurface.ModelNotificationHandler","type":"typealias"},{"path":"\/documentation\/midikit\/huisurface\/presencechangedhandler","title":"HUISurface.PresenceChangedHandler","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/midikit\/huisurface\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/huisurface\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurface\/midiout(_:)-1lqqu","title":"func midiOut([MIDIEvent])","type":"method"},{"path":"\/documentation\/midikit\/huisurface\/midiout(_:)-6kly1","title":"func midiOut(MIDIEvent)","type":"method"}],"path":"\/documentation\/midikit\/huisurface\/sendsmidievents-implementations","title":"SendsMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurface","title":"HUISurface","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/assign","title":"var assign: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/bypass","title":"var bypass: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/default","title":"var `default`: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/input","title":"var input: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/output","title":"var output: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/pan","title":"var pan: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/recordreadyall","title":"var recordReadyAll: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/senda","title":"var sendA: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/sendb","title":"var sendB: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/sendc","title":"var sendC: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/sendd","title":"var sendD: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/sende","title":"var sendE: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/shift","title":"var shift: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/suspend","title":"var suspend: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/textdisplay","title":"var textDisplay: HUISmallDisplayString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.Assign.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.Assign.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/switch","title":"HUISurfaceModel.Assign.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.struct","title":"HUISurfaceModel.Assign","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/fader","title":"var fader: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/pan","title":"var pan: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/plugin","title":"var plugin: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/send","title":"var send: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/sendmute","title":"var sendMute: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.AutoEnable.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.AutoEnable.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/switch","title":"HUISurfaceModel.AutoEnable.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.struct","title":"HUISurfaceModel.AutoEnable","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/latch","title":"var latch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/off","title":"var off: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/read","title":"var read: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/touch","title":"var touch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/trim","title":"var trim: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/write","title":"var write: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.AutoMode.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.AutoMode.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/switch","title":"HUISurfaceModel.AutoMode.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.struct","title":"HUISurfaceModel.AutoMode","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/bankleft","title":"var bankLeft: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/bankright","title":"var bankRight: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/channelleft","title":"var channelLeft: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/channelright","title":"var channelRight: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.BankMove.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.BankMove.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/switch","title":"HUISurfaceModel.BankMove.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.struct","title":"HUISurfaceModel.BankMove","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/level","title":"var level: UInt14","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/levelunitinterval","title":"var levelUnitInterval: Double","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/touched","title":"var touched: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/levelmax","title":"static let levelMax: UInt14","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/levelmin","title":"static let levelMin: UInt14","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/levelrange","title":"static let levelRange: ClosedRange<UInt14>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.struct","title":"HUISurfaceModel.ChannelStrip.Fader","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/auto","title":"var auto: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/fader-swift.property","title":"var fader: HUISurfaceModel.ChannelStrip.Fader","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/insert","title":"var insert: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/levelmeter","title":"var levelMeter: HUISurfaceModel.StereoLevelMeter","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/namedisplay","title":"var nameDisplay: HUISmallDisplayString","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/recordready","title":"var recordReady: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/select","title":"var select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/solo","title":"var solo: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/vpotdisplay","title":"var vPotDisplay: HUIVPotDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/vpotselect","title":"var vPotSelect: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.ChannelStrip.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/state(of:)","title":"func state(of: HUISurfaceModel.ChannelStrip.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/switch","title":"HUISurfaceModel.ChannelStrip.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrip","title":"HUISurfaceModel.ChannelStrip","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/dim","title":"var dim: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/discreteinput1to1","title":"var discreteInput1to1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/input1","title":"var input1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/input2","title":"var input2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/input3","title":"var input3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/mono","title":"var mono: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/mute","title":"var mute: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/output1","title":"var output1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/output2","title":"var output2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/output3","title":"var output3: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.ControlRoom.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.ControlRoom.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/switch","title":"HUISurfaceModel.ControlRoom.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.struct","title":"HUISurfaceModel.ControlRoom","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/mode","title":"var mode: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/scrub","title":"var scrub: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/shuttle","title":"var shuttle: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.Cursor.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.Cursor.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/switch","title":"HUISurfaceModel.Cursor.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.struct","title":"HUISurfaceModel.Cursor","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/capture","title":"var capture: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/copy","title":"var copy: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/cut","title":"var cut: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/delete","title":"var delete: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/paste","title":"var paste: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/separate","title":"var separate: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.Edit.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.Edit.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/switch","title":"HUISurfaceModel.Edit.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.struct","title":"HUISurfaceModel.Edit","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/beep","title":"var beep: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/click","title":"var click: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/footswitchrelay1","title":"var footswitchRelay1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/footswitchrelay2","title":"var footswitchRelay2: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.FootswitchesAndSounds.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.FootswitchesAndSounds.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/switch","title":"HUISurfaceModel.FootswitchesAndSounds.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.struct","title":"HUISurfaceModel.FootswitchesAndSounds","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f1","title":"var f1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f2","title":"var f2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f3","title":"var f3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f4","title":"var f4: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f5","title":"var f5: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f6","title":"var f6: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f7","title":"var f7: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/f8oresc","title":"var f8OrEsc: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.FunctionKey.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.FunctionKey.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/switch","title":"HUISurfaceModel.FunctionKey.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.struct","title":"HUISurfaceModel.FunctionKey","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/cmd","title":"var cmd: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/ctrl","title":"var ctrl: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/editmode","title":"var editMode: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/edittool","title":"var editTool: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/option","title":"var option: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/save","title":"var save: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/shift","title":"var shift: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/undo","title":"var undo: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.HotKeys.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.HotKeys.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/switch","title":"HUISurfaceModel.HotKeys.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.struct","title":"HUISurfaceModel.HotKeys","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.struct\/bottom","title":"var bottom: HUILargeDisplayString","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.struct\/top","title":"var top: HUILargeDisplayString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.struct","title":"HUISurfaceModel.LargeDisplay","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/asterisk","title":"var asterisk: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/clr","title":"var clr: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/enter","title":"var enter: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/equals","title":"var equals: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/forwardslash","title":"var forwardSlash: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/minus","title":"var minus: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num0","title":"var num0: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num1","title":"var num1: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num2","title":"var num2: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num3","title":"var num3: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num4","title":"var num4: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num5","title":"var num5: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num6","title":"var num6: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num7","title":"var num7: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num8","title":"var num8: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/num9","title":"var num9: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/period","title":"var period: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/plus","title":"var plus: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.NumPad.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.NumPad.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/switch","title":"HUISurfaceModel.NumPad.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.struct","title":"HUISurfaceModel.NumPad","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/assign","title":"var assign: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/bypass","title":"var bypass: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/compare","title":"var compare: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/insertorparam","title":"var insertOrParam: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param1select","title":"var param1Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param1vpotdisplay","title":"var param1VPotDisplay: HUIVPotDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param2select","title":"var param2Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param2vpotdisplay","title":"var param2VPotDisplay: HUIVPotDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param3select","title":"var param3Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param3vpotdisplay","title":"var param3VPotDisplay: HUIVPotDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param4select","title":"var param4Select: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/param4vpotdisplay","title":"var param4VPotDisplay: HUIVPotDisplay","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.ParameterEdit.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.ParameterEdit.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/switch","title":"HUISurfaceModel.ParameterEdit.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.struct","title":"HUISurfaceModel.ParameterEdit","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/auto","title":"var auto: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/create","title":"var create: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/group","title":"var group: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/monitor","title":"var monitor: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/phase","title":"var phase: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/suspend","title":"var suspend: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.StatusAndGroup.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.StatusAndGroup.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/switch","title":"HUISurfaceModel.StatusAndGroup.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.struct","title":"HUISurfaceModel.StatusAndGroup","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/left","title":"var left: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/right","title":"var right: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/level(of:)","title":"func level(of: HUISurfaceModel.StereoLevelMeter.Side) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/levelmax","title":"static let levelMax: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/levelmin","title":"static let levelMin: Int","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/levelrange","title":"static let levelRange: ClosedRange<Int>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side\/left","title":"case left","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side\/right","title":"case right","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/side","title":"HUISurfaceModel.StereoLevelMeter.Side","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/stereolevelmeter","title":"HUISurfaceModel.StereoLevelMeter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/beats","title":"var beats: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/feet","title":"var feet: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/rudesolo","title":"var rudeSolo: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/timestring","title":"var timeString: HUITimeDisplayString","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/timecode","title":"var timecode: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.TimeDisplay.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.TimeDisplay.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/switch","title":"HUISurfaceModel.TimeDisplay.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.struct","title":"HUISurfaceModel.TimeDisplay","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/end","title":"var end: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/fastfwd","title":"var fastFwd: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/loop","title":"var loop: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/online","title":"var online: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/play","title":"var play: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/punch_audition","title":"var punch_audition: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/punch_in","title":"var punch_in: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/punch_out","title":"var punch_out: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/punch_post","title":"var punch_post: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/punch_pre","title":"var punch_pre: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/quickpunch","title":"var quickPunch: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/record","title":"var record: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/rewind","title":"var rewind: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/rtz","title":"var rtz: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/stop","title":"var stop: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/talkback","title":"var talkback: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.Transport.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.Transport.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/switch","title":"HUISurfaceModel.Transport.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.struct","title":"HUISurfaceModel.Transport","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/alt","title":"var alt: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/edit","title":"var edit: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/memloc","title":"var memLoc: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/mix","title":"var mix: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/status","title":"var status: Bool","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/transport","title":"var transport: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.WindowFunctions.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/state(of:)","title":"func state(of: HUISurfaceModel.WindowFunctions.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/switch","title":"HUISurfaceModel.WindowFunctions.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.struct","title":"HUISurfaceModel.WindowFunctions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/assign-swift.property","title":"var assign: HUISurfaceModel.Assign","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/autoenable-swift.property","title":"var autoEnable: HUISurfaceModel.AutoEnable","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/automode-swift.property","title":"var autoMode: HUISurfaceModel.AutoMode","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/bankmove-swift.property","title":"var bankMove: HUISurfaceModel.BankMove","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/channelstrips","title":"var channelStrips: [HUISurfaceModel.ChannelStrip]","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/controlroom-swift.property","title":"var controlRoom: HUISurfaceModel.ControlRoom","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/cursor-swift.property","title":"var cursor: HUISurfaceModel.Cursor","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/edit-swift.property","title":"var edit: HUISurfaceModel.Edit","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/footswitchesandsounds-swift.property","title":"var footswitchesAndSounds: HUISurfaceModel.FootswitchesAndSounds","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/functionkey-swift.property","title":"var functionKey: HUISurfaceModel.FunctionKey","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/hotkeys-swift.property","title":"var hotKeys: HUISurfaceModel.HotKeys","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/largedisplay-swift.property","title":"var largeDisplay: HUISurfaceModel.LargeDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/numpad-swift.property","title":"var numPad: HUISurfaceModel.NumPad","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/parameteredit-swift.property","title":"var parameterEdit: HUISurfaceModel.ParameterEdit","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/statusandgroup-swift.property","title":"var statusAndGroup: HUISurfaceModel.StatusAndGroup","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/timedisplay-swift.property","title":"var timeDisplay: HUISurfaceModel.TimeDisplay","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/transport-swift.property","title":"var transport: HUISurfaceModel.Transport","type":"property"},{"path":"\/documentation\/midikit\/huisurfacemodel\/windowfunctions-swift.property","title":"var windowFunctions: HUISurfaceModel.WindowFunctions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/state(of:)-7vsow","title":"func state(of: HUIVPot) -> HUIVPotDisplay","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/updatestate(from:alwaysnotify:)","title":"func updateState(from: HUIHostEvent, alwaysNotify: Bool) -> HUISurfaceModelUpdateResult","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/setstate(of:to:)","title":"func setState(of: HUISurfaceModel.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodel\/state(of:)-4lbt","title":"func state(of: HUISurfaceModel.Switch) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodel\/switch","title":"HUISurfaceModel.Switch","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfacemodel\/huisurfacemodelstate-implementations","title":"HUISurfaceModelState Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodel","title":"HUISurfaceModel","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/assign(param:state:)","title":"case assign(param: HUISwitch.Assign, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/autoenable(param:state:)","title":"case autoEnable(param: HUISwitch.AutoEnable, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/automode(param:state:)","title":"case autoMode(param: HUISwitch.AutoMode, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/bankmove(param:state:)","title":"case bankMove(param: HUISwitch.BankMove, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstrip(channel:_:)","title":"case channelStrip(channel: UInt4, HUISurfaceModelNotification.ChannelStripComponent)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/controlroom(param:state:)","title":"case controlRoom(param: HUISwitch.ControlRoom, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/cursor(param:state:)","title":"case cursor(param: HUISwitch.Cursor, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/edit(param:state:)","title":"case edit(param: HUISwitch.Edit, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/footswitchesandsounds(param:state:)","title":"case footswitchesAndSounds(param: HUISwitch.FootswitchesAndSounds, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/functionkey(param:state:)","title":"case functionKey(param: HUISwitch.FunctionKey, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/hotkey(param:state:)","title":"case hotKey(param: HUISwitch.HotKey, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/largedisplay(top:bottom:)","title":"case largeDisplay(top: HUILargeDisplayString, bottom: HUILargeDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/numpad(param:state:)","title":"case numPad(param: HUISwitch.NumPad, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/paramedit(_:)","title":"case paramEdit(HUISurfaceModelNotification.ParamEditComponent)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/ping","title":"case ping","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/selectassigndisplay(text:)","title":"case selectAssignDisplay(text: HUISmallDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/statusandgroup(param:state:)","title":"case statusAndGroup(param: HUISwitch.StatusAndGroup, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/timedisplay(timestring:)","title":"case timeDisplay(timeString: HUITimeDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/timedisplaystatus(param:state:)","title":"case timeDisplayStatus(param: HUISwitch.TimeDisplayStatus, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/transport(param:state:)","title":"case transport(param: HUISwitch.Transport, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/undefinedswitch(zone:port:state:)","title":"case undefinedSwitch(zone: HUIZone, port: HUIPort, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/window(param:state:)","title":"case window(param: HUISwitch.Window, state: Bool)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/auto(state:)","title":"case auto(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/faderlevel(level:)","title":"case faderLevel(level: UInt14)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/insert(state:)","title":"case insert(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/levelmeter(side:level:)","title":"case levelMeter(side: HUISurfaceModel.StereoLevelMeter.Side, level: Int)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/mute(state:)","title":"case mute(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/namedisplay(text:)","title":"case nameDisplay(text: HUISmallDisplayString)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/recordready(state:)","title":"case recordReady(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/select(state:)","title":"case select(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/solo(state:)","title":"case solo(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/vpot(display:)","title":"case vPot(display: HUIVPotDisplay)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/vpotselect(state:)","title":"case vPotSelect(state: Bool)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/channelstripcomponent","title":"HUISurfaceModelNotification.ChannelStripComponent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/assign(state:)","title":"case assign(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/bypass(state:)","title":"case bypass(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/compare(state:)","title":"case compare(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/insertorparam(state:)","title":"case insertOrParam(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param1select(state:)","title":"case param1Select(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param1vpot(display:)","title":"case param1VPot(display: HUIVPotDisplay)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param2select(state:)","title":"case param2Select(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param2vpot(display:)","title":"case param2VPot(display: HUIVPotDisplay)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param3select(state:)","title":"case param3Select(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param3vpot(display:)","title":"case param3VPot(display: HUIVPotDisplay)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param4select(state:)","title":"case param4Select(state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/param4vpot(display:)","title":"case param4VPot(display: HUIVPotDisplay)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/parameditcomponent","title":"HUISurfaceModelNotification.ParamEditComponent","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelnotification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfacemodelnotification","title":"HUISurfaceModelNotification","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelupdateresult\/changed(_:)","title":"case changed(HUISurfaceModelNotification)","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelupdateresult\/unchanged","title":"case unchanged","type":"case"},{"path":"\/documentation\/midikit\/huisurfacemodelupdateresult\/unhandled(_:)","title":"case unhandled(HUIHostEvent)","type":"case"}],"path":"\/documentation\/midikit\/huisurfacemodelupdateresult","title":"HUISurfaceModelUpdateResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceevent\/faderlevel(channelstrip:level:)","title":"case faderLevel(channelStrip: UInt4, level: UInt14)","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/jogwheel(delta:)","title":"case jogWheel(delta: Int7)","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/levelmeter(channelstrip:side:level:)","title":"case levelMeter(channelStrip: UInt4, side: HUISurfaceModel.StereoLevelMeter.Side, level: Int)","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/ping","title":"case ping","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/switch(huiswitch:state:)","title":"case `switch`(huiSwitch: HUISwitch, state: Bool)","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/systemreset","title":"case systemReset","type":"case"},{"path":"\/documentation\/midikit\/huisurfaceevent\/vpot(vpot:delta:)","title":"case vPot(vPot: HUIVPot, delta: Int7)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceevent\/encode()","title":"func encode() -> [MIDIEvent]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceevent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huisurfaceevent\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huisurfaceevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfaceevent","title":"HUISurfaceEvent","type":"enum"},{"title":"HUI Common","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/assign(_:)","title":"case assign(HUISwitch.Assign)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable(_:)","title":"case autoEnable(HUISwitch.AutoEnable)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode(_:)","title":"case autoMode(HUISwitch.AutoMode)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove(_:)","title":"case bankMove(HUISwitch.BankMove)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip(_:_:)","title":"case channelStrip(UInt4, HUISwitch.ChannelStrip)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom(_:)","title":"case controlRoom(HUISwitch.ControlRoom)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor(_:)","title":"case cursor(HUISwitch.Cursor)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit(_:)","title":"case edit(HUISwitch.Edit)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds(_:)","title":"case footswitchesAndSounds(HUISwitch.FootswitchesAndSounds)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey(_:)","title":"case functionKey(HUISwitch.FunctionKey)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey(_:)","title":"case hotKey(HUISwitch.HotKey)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad(_:)","title":"case numPad(HUISwitch.NumPad)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/paramedit(_:)","title":"case paramEdit(HUISwitch.ParameterEdit)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup(_:)","title":"case statusAndGroup(HUISwitch.StatusAndGroup)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus(_:)","title":"case timeDisplayStatus(HUISwitch.TimeDisplayStatus)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport(_:)","title":"case transport(HUISwitch.Transport)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/undefined(zone:port:)","title":"case undefined(zone: HUIZone, port: HUIPort)","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window(_:)","title":"case window(HUISwitch.Window)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/init(zone:port:)","title":"init(zone: HUIZone, port: HUIPort)","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/assign","title":"case assign","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/bypass","title":"case bypass","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/input","title":"case input","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/output","title":"case output","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/recordreadyall","title":"case recordReadyAll","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/senda","title":"case sendA","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/sendb","title":"case sendB","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/sendc","title":"case sendC","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/sendd","title":"case sendD","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/sende","title":"case sendE","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/shift","title":"case shift","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/suspend","title":"case suspend","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/assign\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/assign\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/assign\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/assign\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/assign","title":"HUISwitch.Assign","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/fader","title":"case fader","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/pan","title":"case pan","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/plugin","title":"case plugin","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/send","title":"case send","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/sendmute","title":"case sendMute","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/autoenable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/autoenable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/autoenable\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/autoenable\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/autoenable","title":"HUISwitch.AutoEnable","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/latch","title":"case latch","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/off","title":"case off","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/read","title":"case read","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/touch","title":"case touch","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/trim","title":"case trim","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/write","title":"case write","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/automode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/automode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/automode\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/automode\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/automode","title":"HUISwitch.AutoMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/bankleft","title":"case bankLeft","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/bankright","title":"case bankRight","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/channelleft","title":"case channelLeft","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/channelright","title":"case channelRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/bankmove\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/bankmove\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/bankmove\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/bankmove\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/bankmove","title":"HUISwitch.BankMove","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/fadertouched","title":"case faderTouched","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/insert","title":"case insert","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/recordready","title":"case recordReady","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/select","title":"case select","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/solo","title":"case solo","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/vpotselect","title":"case vPotSelect","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/port","title":"var port: HUIPort","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/channelstrip\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/channelstrip","title":"HUISwitch.ChannelStrip","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/dim","title":"case dim","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/discreteinput1to1","title":"case discreteInput1to1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/input1","title":"case input1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/input2","title":"case input2","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/input3","title":"case input3","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/mono","title":"case mono","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/mute","title":"case mute","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/output1","title":"case output1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/output2","title":"case output2","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/output3","title":"case output3","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/controlroom\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/controlroom\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/controlroom\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/controlroom\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/controlroom","title":"HUISwitch.ControlRoom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/down","title":"case down","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/left","title":"case left","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/mode","title":"case mode","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/right","title":"case right","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/scrub","title":"case scrub","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/shuttle","title":"case shuttle","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/up","title":"case up","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/cursor\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/cursor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/cursor\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/cursor\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/cursor","title":"HUISwitch.Cursor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/capture","title":"case capture","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/copy","title":"case copy","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/cut","title":"case cut","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/paste","title":"case paste","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/separate","title":"case separate","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/edit\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/edit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/edit\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/edit\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/edit","title":"HUISwitch.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/beep","title":"case beep","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/click","title":"case click","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/footswitchrelay1","title":"case footswitchRelay1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/footswitchrelay2","title":"case footswitchRelay2","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/footswitchesandsounds","title":"HUISwitch.FootswitchesAndSounds","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f1","title":"case f1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f2","title":"case f2","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f3","title":"case f3","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f4","title":"case f4","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f5","title":"case f5","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f6","title":"case f6","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f7","title":"case f7","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/f8oresc","title":"case f8OrEsc","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/functionkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/functionkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/functionkey\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/functionkey\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/functionkey","title":"HUISwitch.FunctionKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/cmd","title":"case cmd","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/ctrl","title":"case ctrl","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/editmode","title":"case editMode","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/edittool","title":"case editTool","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/option","title":"case option","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/save","title":"case save","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/shift","title":"case shift","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/undo","title":"case undo","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/hotkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/hotkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/hotkey\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/hotkey\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/hotkey","title":"HUISwitch.HotKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/asterisk","title":"case asterisk","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/clr","title":"case clr","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/enter","title":"case enter","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/equals","title":"case equals","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/forwardslash","title":"case forwardSlash","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/minus","title":"case minus","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num0","title":"case num0","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num1","title":"case num1","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num2","title":"case num2","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num3","title":"case num3","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num4","title":"case num4","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num5","title":"case num5","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num6","title":"case num6","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num7","title":"case num7","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num8","title":"case num8","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/num9","title":"case num9","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/period","title":"case period","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/plus","title":"case plus","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/numpad\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/numpad\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/numpad\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/numpad\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/numpad","title":"HUISwitch.NumPad","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/assign","title":"case assign","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/bypass","title":"case bypass","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/compare","title":"case compare","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/insertorparam","title":"case insertOrParam","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/param1select","title":"case param1Select","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/param2select","title":"case param2Select","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/param3select","title":"case param3Select","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/param4select","title":"case param4Select","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/parameteredit\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/parameteredit","title":"HUISwitch.ParameterEdit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/create","title":"case create","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/group","title":"case group","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/monitor","title":"case monitor","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/phase","title":"case phase","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/suspend","title":"case suspend","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/statusandgroup\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/statusandgroup","title":"HUISwitch.StatusAndGroup","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/beats","title":"case beats","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/feet","title":"case feet","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/rudesolo","title":"case rudeSolo","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/timecode","title":"case timecode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/timedisplaystatus","title":"HUISwitch.TimeDisplayStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/end","title":"case end","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/fastfwd","title":"case fastFwd","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/loop","title":"case loop","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/online","title":"case online","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/play","title":"case play","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/punchaudition","title":"case punchAudition","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/punchin","title":"case punchIn","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/punchout","title":"case punchOut","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/punchpost","title":"case punchPost","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/punchpre","title":"case punchPre","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/quickpunch","title":"case quickPunch","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/record","title":"case record","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/rewind","title":"case rewind","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/rtz","title":"case rtz","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/talkback","title":"case talkback","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/transport\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/transport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/transport\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/transport\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/transport","title":"HUISwitch.Transport","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/window\/alt","title":"case alt","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window\/edit","title":"case edit","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window\/memloc","title":"case memLoc","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window\/mix","title":"case mix","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window\/status","title":"case status","type":"case"},{"path":"\/documentation\/midikit\/huiswitch\/window\/transport","title":"case transport","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/window\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/window\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/window\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/window\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/window\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/window\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch\/window","title":"HUISwitch.Window","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/allcases-swift.typealias","title":"HUISwitch.AllCases","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/allcases-swift.type.property","title":"static var allCases: [HUISwitch]","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huiswitch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitch\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitch\/huiswitchprotocol-implementations","title":"HUISwitchProtocol Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huiswitch","title":"HUISwitch","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpot\/channel(_:)","title":"case channel(UInt4)","type":"case"},{"path":"\/documentation\/midikit\/huivpot\/editassigna","title":"case editAssignA","type":"case"},{"path":"\/documentation\/midikit\/huivpot\/editassignb","title":"case editAssignB","type":"case"},{"path":"\/documentation\/midikit\/huivpot\/editassignc","title":"case editAssignC","type":"case"},{"path":"\/documentation\/midikit\/huivpot\/editassignd","title":"case editAssignD","type":"case"},{"path":"\/documentation\/midikit\/huivpot\/editassignscroll","title":"case editAssignScroll","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpot\/hasdisplay","title":"var hasDisplay: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpot\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huivpot\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huivpot","title":"HUIVPot","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/huivpotdisplay\/init(leds:lowerled:)","title":"init(leds: HUIVPotDisplay.LEDState, lowerLED: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/leds","title":"var leds: HUIVPotDisplay.LEDState","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/lowerled","title":"var lowerLED: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/alloff","title":"static var allOff: HUIVPotDisplay","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/alloff","title":"case allOff","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/center(to:)","title":"case center(to: HUIVPotDisplay.LEDState.LED)","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/centerradius(radius:)","title":"case centerRadius(radius: HUIVPotDisplay.LEDState.LED)","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/left(to:)","title":"case left(to: HUIVPotDisplay.LEDState.LED)","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/single(_:)","title":"case single(HUIVPotDisplay.LEDState.LED)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/bitpattern","title":"var bitPattern: UInt16","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/boolarray","title":"var boolArray: [Bool]","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/bounds","title":"var bounds: ClosedRange<HUIVPotDisplay.LEDState.LED>?","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/rawvalue","title":"var rawValue: UInt8","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/unitintervalbounds","title":"var unitIntervalBounds: ClosedRange<Double>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/stringvalue(activechar:inactivechar:)","title":"func stringValue(activeChar: Character, inactiveChar: Character) -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/center(tounitinterval:)","title":"static func center(toUnitInterval: Double) -> HUIVPotDisplay.LEDState","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/centerradius(unitinterval:)","title":"static func centerRadius(unitInterval: Double) -> HUIVPotDisplay.LEDState","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/default()","title":"static func `default`() -> HUIVPotDisplay.LEDState","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/left(tounitinterval:)","title":"static func left(toUnitInterval: Double) -> HUIVPotDisplay.LEDState","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/single(unitinterval:)","title":"static func single(unitInterval: Double) -> HUIVPotDisplay.LEDState","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/unknown()","title":"static func unknown() -> HUIVPotDisplay.LEDState","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/c","title":"case C","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/l1","title":"case L1","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/l2","title":"case L2","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/l3","title":"case L3","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/l4","title":"case L4","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/l5","title":"case L5","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/r1","title":"case R1","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/r2","title":"case R2","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/r3","title":"case R3","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/r4","title":"case R4","type":"case"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/r5","title":"case R5","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/init(position:)","title":"init(position: Double)","type":"init"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/init(radius:)","title":"init?(radius: Int)","type":"init"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/init(radiusunitinterval:)","title":"init?(radiusUnitInterval: Double)","type":"init"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/radius","title":"var radius: Int","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/radiusunitinterval","title":"var radiusUnitInterval: Double","type":"property"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/unitinterval","title":"var unitInterval: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/'...(_:)-2vfza","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/'...(_:)-6hh98","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/_(_:_:)-510rn","title":"static func < (HUIVPotDisplay.LEDState.LED, HUIVPotDisplay.LEDState.LED) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/_(_:_:)-5u3u","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/_=(_:_:)-2ymqb","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/_=(_:_:)-967l8","title":"static func >= (Self, Self) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/clamped(to:)-4tcv1","title":"func clamped(to: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/clamped(to:)-72ipl","title":"func clamped(to: PartialRangeFrom<Self>) -> Self","type":"method"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/clamped(to:)-hqe8","title":"func clamped(to: PartialRangeThrough<Self>) -> Self","type":"method"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/led","title":"HUIVPotDisplay.LEDState.LED","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/allcases","title":"static var allCases: [HUIVPotDisplay.LEDState]","type":"property"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/caseiterable-implementations","title":"CaseIterable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huivpotdisplay\/ledstate","title":"HUIVPotDisplay.LEDState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huivpotdisplay\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huivpotdisplay\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huivpotdisplay","title":"HUIVPotDisplay","type":"struct"},{"title":"MIDIKit Protocol Conformances","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.property","title":"var midiOutHandler: Self.MIDIOutHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-6bndq","title":"func midiOut(MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiout(_:)-qcoe","title":"func midiOut([MIDIEvent])","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/sendsmidievents\/midiouthandler-swift.typealias","title":"SendsMIDIEvents.MIDIOutHandler","type":"typealias"}],"path":"\/documentation\/midikit\/sendsmidievents","title":"SendsMIDIEvents","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-2qr3f","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"title":"ReceivesMIDIEvents Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/receivesmidievents\/midiin(events:)-1wr9u","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/receivesmidievents","title":"ReceivesMIDIEvents","type":"protocol"},{"title":"Internals","type":"groupMarker"},{"children":[{"title":"Coding","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huirole\/host","title":"case host","type":"case"},{"path":"\/documentation\/midikit\/huirole\/surface","title":"case surface","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huirole\/inverted()","title":"func inverted() -> HUIRole","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huirole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huirole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huirole","title":"HUIRole","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/eventhandler-swift.property","title":"var eventHandler: HUIHostEventDecoder.EventHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/reset()","title":"func reset()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/event","title":"HUIHostEventDecoder.Event","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/init(eventhandler:)","title":"init(eventHandler: Self.EventHandler?)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/eventhandler-swift.typealias","title":"HUIHostEventDecoder.EventHandler","type":"typealias"}],"path":"\/documentation\/midikit\/huihosteventdecoder\/huidecoder-implementations","title":"HUIDecoder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huihosteventdecoder\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/huihosteventdecoder\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huihosteventdecoder","title":"HUIHostEventDecoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/eventhandler-swift.property","title":"var eventHandler: HUISurfaceEventDecoder.EventHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/midiin(event:)","title":"func midiIn(event: MIDIEvent)","type":"method"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/reset()","title":"func reset()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/event","title":"HUISurfaceEventDecoder.Event","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/init(eventhandler:)","title":"init(eventHandler: Self.EventHandler?)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/eventhandler-swift.typealias","title":"HUISurfaceEventDecoder.EventHandler","type":"typealias"}],"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/huidecoder-implementations","title":"HUIDecoder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/midiin(events:)","title":"func midiIn(events: [MIDIEvent])","type":"method"}],"path":"\/documentation\/midikit\/huisurfaceeventdecoder\/receivesmidievents-implementations","title":"ReceivesMIDIEvents Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huisurfaceeventdecoder","title":"HUISurfaceEventDecoder","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecodererror\/malformed(_:)","title":"case malformed(String)","type":"case"},{"path":"\/documentation\/midikit\/huidecodererror\/unhandled(_:)","title":"case unhandled(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecodererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/midikit\/huidecodererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecodererror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/midikit\/huidecodererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/midikit\/huidecodererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/midikit\/huidecodererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/midikit\/huidecodererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huidecodererror","title":"HUIDecoderError","type":"enum"},{"title":"Switch Parameters","type":"groupMarker"},{"path":"\/documentation\/midikit\/huizone","title":"HUIZone","type":"typealias"},{"path":"\/documentation\/midikit\/huiport","title":"HUIPort","type":"typealias"},{"path":"\/documentation\/midikit\/huizoneandport","title":"HUIZoneAndPort","type":"typealias"},{"title":"HUI Strings and Characters","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicharacter\/init(_:)","title":"init?<S>(S)","type":"init"},{"path":"\/documentation\/midikit\/huicharacter\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicharacter\/string","title":"var string: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicharacter\/default()","title":"static func `default`() -> Self","type":"method"},{"path":"\/documentation\/midikit\/huicharacter\/unknown()","title":"static func unknown() -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huicharacter\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huicharacter\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huicharacter","title":"HUICharacter","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/element","title":"Element","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/init()","title":"init()","type":"init"},{"children":[{"children":[{"path":"\/documentation\/midikit\/huistring\/init(chars:)-1yqsr","title":"init(chars: [Self.Element])","type":"init"}],"title":"HUIString Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/huistring\/init(chars:)-39ttd","title":"init(chars: [Self.Element])","type":"init"},{"children":[{"children":[{"path":"\/documentation\/midikit\/huistring\/init(lossy:)-1i6uy","title":"init(lossy: some StringProtocol)","type":"init"}],"title":"HUIString Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/huistring\/init(lossy:)-6b2iq","title":"init(lossy: some StringProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/chars","title":"var chars: [Self.Element]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/midikit\/huistring\/stringvalue-136jv","title":"var stringValue: String","type":"property"}],"title":"HUIString Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/huistring\/stringvalue-3h2lx","title":"var stringValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/midikit\/huistring\/defaultchars-56gu7","title":"static var defaultChars: [Self.Element]","type":"property"}],"title":"HUIString Implementations","type":"groupMarker"}],"path":"\/documentation\/midikit\/huistring\/defaultchars-73538","title":"static var defaultChars: [Self.Element]","type":"property"},{"path":"\/documentation\/midikit\/huistring\/staticcount","title":"static var staticCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/midikit\/huistring\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/midikit\/huistring\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistring\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/midikit\/huistring\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/midikit\/huistring","title":"HUIString","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistringcharsvalidation\/init(wrappedvalue:)","title":"init(wrappedValue: [Str.Element])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huistringcharsvalidation\/wrappedvalue","title":"var wrappedValue: [Str.Element]","type":"property"}],"path":"\/documentation\/midikit\/huistringcharsvalidation","title":"HUIStringCharsValidation","type":"struct"},{"path":"\/documentation\/midikit\/huilargedisplayslices","title":"HUILargeDisplaySlices","type":"typealias"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecoder\/event","title":"Event","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecoder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/midikit\/huidecoder\/init(eventhandler:)","title":"init(eventHandler: Self.EventHandler?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecoder\/eventhandler-swift.property","title":"var eventHandler: Self.EventHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecoder\/reset()","title":"func reset()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/midikit\/huidecoder\/eventhandler-swift.typealias","title":"HUIDecoder.EventHandler","type":"typealias"}],"path":"\/documentation\/midikit\/huidecoder","title":"HUIDecoder","type":"protocol"},{"path":"\/documentation\/midikit\/huievent","title":"HUIEvent","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/huiswitchprotocol\/zoneandport","title":"var zoneAndPort: HUIZoneAndPort","type":"property"}],"path":"\/documentation\/midikit\/huiswitchprotocol","title":"HUISwitchProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelstate\/switch","title":"Switch","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/huisurfacemodelstate\/setstate(of:to:)","title":"func setState(of: Self.Switch, to: Bool)","type":"method"},{"path":"\/documentation\/midikit\/huisurfacemodelstate\/state(of:)","title":"func state(of: Self.Switch) -> Bool","type":"method"}],"path":"\/documentation\/midikit\/huisurfacemodelstate","title":"HUISurfaceModelState","type":"protocol"}],"path":"\/documentation\/midikit\/midikitcontrolsurfaces-internals","title":"Internals","type":"symbol"}],"path":"\/documentation\/midikit\/midikitcontrolsurfaces","title":"MIDIKitControlSurfaces","type":"symbol"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/isvideointerlaced","title":"var isVideoInterlaced: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/durationtimecode(at:base:limit:)","title":"func durationTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> Timecode","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/endtimecode(at:base:limit:)","title":"func endTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> Timecode?","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/starttimecode(at:base:limit:)","title":"func startTimecode(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> Timecode?","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/timecodeframerate(drop:)","title":"func timecodeFrameRate(drop: Bool?) throws -> TimecodeFrameRate","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/timecodes(at:base:limit:)","title":"func timecodes(at: TimecodeFrameRate?, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> [[Timecode]]","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avasset\/videoframerate(interlaced:)","title":"func videoFrameRate(interlaced: Bool?) throws -> VideoFrameRate","type":"method"}],"path":"\/documentation\/midikit\/avfoundation\/avasset","title":"AVAsset","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/avfoundation\/avassettrack\/durationtimecode(at:limit:base:)","title":"func durationTimecode(at: TimecodeFrameRate?, limit: Timecode.UpperLimit, base: Timecode.SubFramesBase) throws -> Timecode","type":"method"}],"path":"\/documentation\/midikit\/avfoundation\/avassettrack","title":"AVAssetTrack","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/avfoundation\/avmutablemovie\/addtimecodetrack(starttimecode:duration:extensions:filetype:)","title":"func addTimecodeTrack(startTimecode: Timecode, duration: Timecode?, extensions: CMFormatDescription.Extensions?, fileType: AVFileType) throws -> AVAssetTrack","type":"method"},{"path":"\/documentation\/midikit\/avfoundation\/avmutablemovie\/replacetimecodetrack(starttimecode:duration:extensions:filetype:)","title":"func replaceTimecodeTrack(startTimecode: Timecode, duration: Timecode?, extensions: CMFormatDescription.Extensions?, fileType: AVFileType) throws -> AVAssetTrack","type":"method"}],"path":"\/documentation\/midikit\/avfoundation\/avmutablemovie","title":"AVMutableMovie","type":"extension"}],"path":"\/documentation\/midikit\/avfoundation","title":"AVFoundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremedia\/cmtime\/init(_:)","title":"init(Fraction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremedia\/cmtime\/fractionvalue","title":"var fractionValue: Fraction","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremedia\/cmtime\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/coremedia\/cmtime\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"}],"path":"\/documentation\/midikit\/coremedia\/cmtime","title":"CMTime","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/coremedia\/cmtimerange\/timecoderange(at:base:limit:)","title":"func timecodeRange(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> ClosedRange<Timecode>","type":"method"},{"path":"\/documentation\/midikit\/coremedia\/cmtimerange\/timecoderange(using:)","title":"func timecodeRange(using: Timecode.Properties) throws -> ClosedRange<Timecode>","type":"method"}],"path":"\/documentation\/midikit\/coremedia\/cmtimerange","title":"CMTimeRange","type":"extension"}],"path":"\/documentation\/midikit\/coremedia","title":"CoreMedia","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/foundation\/nsnotification\/name\/midinetworkcontactsdidchange","title":"static let midiNetworkContactsDidChange: NSNotification.Name","type":"property"},{"path":"\/documentation\/midikit\/foundation\/nsnotification\/name\/midinetworksessiondidchange","title":"static let midiNetworkSessionDidChange: NSNotification.Name","type":"property"}],"path":"\/documentation\/midikit\/foundation\/nsnotification\/name","title":"NSNotification.Name","type":"extension"}],"path":"\/documentation\/midikit\/foundation\/nsnotification","title":"NSNotification","type":"extension"}],"path":"\/documentation\/midikit\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"}],"path":"\/documentation\/midikit\/swift\/binaryfloatingpoint","title":"BinaryFloatingPoint","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/numberofdigits","title":"var numberOfDigits: Int","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint14","title":"var toUInt14: UInt14","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint14exactly","title":"var toUInt14Exactly: UInt14?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint25","title":"var toUInt25: UInt25","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint25exactly","title":"var toUInt25Exactly: UInt25?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint4","title":"var toUInt4: UInt4","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint4exactly","title":"var toUInt4Exactly: UInt4?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint7","title":"var toUInt7: UInt7","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint7exactly","title":"var toUInt7Exactly: UInt7?","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint9","title":"var toUInt9: UInt9","type":"property"},{"path":"\/documentation\/midikit\/swift\/binaryinteger\/touint9exactly","title":"var toUInt9Exactly: UInt9?","type":"property"}],"path":"\/documentation\/midikit\/swift\/binaryinteger","title":"BinaryInteger","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/collection\/concretetypes","title":"var concreteTypes: [any MIDIFileEventPayload.Type]","type":"property"},{"path":"\/documentation\/midikit\/swift\/collection\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/collection\/asanyendpoints()","title":"func asAnyEndpoints() -> [AnyMIDIEndpoint]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/asanymidiioobjects()","title":"func asAnyMIDIIOObjects() -> [AnyMIDIIOObject]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/asidentities()-3eazf","title":"func asIdentities() -> [MIDIEndpointIdentity]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/asidentities()-7ja2","title":"func asIdentities() -> Set<MIDIEndpointIdentity>","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/contains(wheredisplayname:ignoringempty:)","title":"func contains(whereDisplayName: String, ignoringEmpty: Bool) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/contains(wherename:ignoringempty:)","title":"func contains(whereName: String, ignoringEmpty: Bool) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/contains(whereuniqueid:)","title":"func contains(whereUniqueID: MIDIIdentifier) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/contains(whereuniqueid:fallbackdisplayname:ignoringempty:)","title":"func contains(whereUniqueID: MIDIIdentifier, fallbackDisplayName: String, ignoringEmpty: Bool) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/drop(group:)","title":"func drop(group: UInt4) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/drop(groups:)","title":"func drop(groups: [UInt4]) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(_:_:in:)","title":"func filter(MIDIEndpointFilterMask, MIDIEndpointFilter, in: MIDIManager) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(_:in:)-36i86","title":"func filter(MIDIEndpointFilter, in: MIDIManager) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(_:in:)-4giuo","title":"func filter(MIDIEndpointMaskedFilter, in: MIDIManager) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(chanvoice:)","title":"func filter(chanVoice: MIDIEvent.ChanVoiceTypes) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(dropping:in:)","title":"func filter(dropping: MIDIEndpointFilter, in: MIDIManager) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(group:)","title":"func filter(group: UInt4) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(groups:)","title":"func filter(groups: [UInt4]) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(syscommon:)","title":"func filter(sysCommon: MIDIEvent.SysCommonTypes) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(sysex:)","title":"func filter(sysEx: MIDIEvent.SysExTypes) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(sysrealtime:)","title":"func filter(sysRealTime: MIDIEvent.SysRealTimeTypes) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(using:in:isincluded:)","title":"func filter(using: MIDIEndpointFilter, in: MIDIManager, isIncluded: Bool) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(utility:)","title":"func filter(utility: MIDIEvent.UtilityTypes) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(wheredisplayname:ignoringempty:)","title":"func filter(whereDisplayName: String, ignoringEmpty: Bool) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(wherename:ignoringempty:)-3j5uj","title":"func filter(whereName: String, ignoringEmpty: Bool) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/filter(wherename:ignoringempty:)-91aex","title":"func filter(whereName: String, ignoringEmpty: Bool) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/first(wheredisplayname:ignoringempty:)","title":"func first(whereDisplayName: String, ignoringEmpty: Bool) -> Self.Element?","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/first(wherename:ignoringempty:)","title":"func first(whereName: String, ignoringEmpty: Bool) -> Self.Element?","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/first(whereuniqueid:)","title":"func first(whereUniqueID: MIDIIdentifier) -> Self.Element?","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/first(whereuniqueid:fallbackdisplayname:ignoringempty:)","title":"func first(whereUniqueID: MIDIIdentifier, fallbackDisplayName: String, ignoringEmpty: Bool) -> Self.Element?","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/issorted(ascending:timelinestart:)","title":"func isSorted(ascending: Bool, timelineStart: Timecode?) -> Bool","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/sorted(ascending:timelinestart:)","title":"func sorted(ascending: Bool, timelineStart: Timecode) -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/sortedbydisplayname()","title":"func sortedByDisplayName() -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/sortedbyname()","title":"func sortedByName() -> [Self.Element]","type":"method"},{"path":"\/documentation\/midikit\/swift\/collection\/umpwordstobytes()","title":"func umpWordsToBytes() -> [UInt8]","type":"method"}],"path":"\/documentation\/midikit\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/mutablecollection\/sort(ascending:timelinestart:)","title":"func sort(ascending: Bool, timelineStart: Timecode)","type":"method"}],"path":"\/documentation\/midikit\/swift\/mutablecollection","title":"MutableCollection","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/rangereplaceablecollection\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/midikit\/swift\/rangereplaceablecollection","title":"RangeReplaceableCollection","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/array\/asidentities()","title":"func asIdentities() -> [MIDIEndpointIdentity]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/array\/blankchars","title":"static let blankChars: [HUITimeDisplayCharacter]","type":"property"},{"path":"\/documentation\/midikit\/swift\/array\/defaultchars","title":"static let defaultChars: [HUITimeDisplayCharacter]","type":"property"},{"path":"\/documentation\/midikit\/swift\/array\/defaultslice","title":"static let defaultSlice: Array<HUILargeDisplayCharacter>","type":"property"},{"path":"\/documentation\/midikit\/swift\/array\/defaultslices","title":"static let defaultSlices: Array<Array<HUILargeDisplayCharacter>>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/array\/currentinputs()-1hvta","title":"static func currentInputs() -> Array<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/array\/currentinputs()-7iolo","title":"static func currentInputs() -> Array<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/array\/currentoutputs()-119ea","title":"static func currentOutputs() -> Array<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/array\/currentoutputs()-6qs23","title":"static func currentOutputs() -> Array<Element>","type":"method"}],"path":"\/documentation\/midikit\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/closedrange\/all","title":"static let all: ClosedRange<UInt7>","type":"property"},{"path":"\/documentation\/midikit\/swift\/closedrange\/eightyeightkeys","title":"static let eightyEightKeys: ClosedRange<UInt7>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/closedrange\/all(style:)","title":"static func all(style: MIDINote.Style) -> ClosedRange<Bound>","type":"method"},{"path":"\/documentation\/midikit\/swift\/closedrange\/eightyeightkeys(style:)","title":"static func eightyEightKeys(style: MIDINote.Style) -> ClosedRange<Bound>","type":"method"}],"path":"\/documentation\/midikit\/swift\/closedrange","title":"ClosedRange","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/double\/init(bipolarunitinterval:)-6x4gi","title":"init(bipolarUnitInterval: Double)","type":"init"},{"path":"\/documentation\/midikit\/swift\/double\/init(bipolarunitinterval:)-7p5w9","title":"init(bipolarUnitInterval: some BinaryFloatingPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/double\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/double\/timecodeinterval(at:base:limit:)","title":"func timecodeInterval(at: TimecodeFrameRate, base: Timecode.SubFramesBase, limit: Timecode.UpperLimit) throws -> TimecodeInterval","type":"method"},{"path":"\/documentation\/midikit\/swift\/double\/timecodeinterval(using:)","title":"func timecodeInterval(using: Timecode.Properties) throws -> TimecodeInterval","type":"method"}],"path":"\/documentation\/midikit\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/int32\/throwifosstatuserr()","title":"func throwIfOSStatusErr() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/int32\/invalidmidiidentifier","title":"static let invalidMIDIIdentifier: MIDIIdentifier","type":"property"}],"path":"\/documentation\/midikit\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/set\/init(byte:)","title":"init(byte: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/set\/byte","title":"var byte: UInt8","type":"property"},{"path":"\/documentation\/midikit\/swift\/set\/filenamecompatible","title":"var filenameCompatible: Bool","type":"property"},{"path":"\/documentation\/midikit\/swift\/set\/showsubframes-swift.property","title":"var showSubFrames: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/set\/asidentities()","title":"func asIdentities() -> Set<MIDIEndpointIdentity>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/set\/showsubframes-swift.type.property","title":"static let showSubFrames: Set<Timecode.StringFormatOption>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/set\/currentinputs()-2299h","title":"static func currentInputs() -> Set<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/set\/currentinputs()-3087t","title":"static func currentInputs() -> Set<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/set\/currentoutputs()-6p3u4","title":"static func currentOutputs() -> Set<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/set\/currentoutputs()-9rl5v","title":"static func currentOutputs() -> Set<Element>","type":"method"},{"path":"\/documentation\/midikit\/swift\/set\/default()","title":"static func `default`() -> Set<Element>","type":"method"}],"path":"\/documentation\/midikit\/swift\/set","title":"Set","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint16\/init(bytepair:)","title":"init(bytePair: BytePair)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint16\/bytepair","title":"var bytePair: BytePair","type":"property"}],"path":"\/documentation\/midikit\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint32\/init(_:_:)","title":"init(UInt16, UInt16)","type":"init"},{"path":"\/documentation\/midikit\/swift\/uint32\/init(_:_:_:_:)","title":"init(UInt8, UInt8, UInt8, UInt8)","type":"init"},{"path":"\/documentation\/midikit\/swift\/uint32\/init(bipolarunitinterval:)-6vzee","title":"init(bipolarUnitInterval: Double)","type":"init"},{"path":"\/documentation\/midikit\/swift\/uint32\/init(bipolarunitinterval:)-fcfh","title":"init(bipolarUnitInterval: some BinaryFloatingPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint32\/bipolarunitintervalvalue","title":"var bipolarUnitIntervalValue: Double","type":"property"}],"path":"\/documentation\/midikit\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint8\/init(high:low:)","title":"init(high: UInt4, low: UInt4)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/midikit\/swift\/uint8\/nibbles","title":"var nibbles: (high: UInt4, low: UInt4)","type":"property"}],"path":"\/documentation\/midikit\/swift\/uint8","title":"UInt8","type":"extension"}],"path":"\/documentation\/midikit\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/midikit","title":"MIDIKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}